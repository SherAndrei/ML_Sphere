vismech.ru/ph_language/sozdanie-tablic-excel-na-php
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
	<title>Создание таблиц Excel на PHP</title>
	<LINK href="/templates/site/css/style.css" type=text/css rel=stylesheet>
	<meta name="description" content="Если Вы новичок ООП в PHP, на первый взгляд это может показаться немного отпугивающим, но Вы могли уже заметить, что все методы очень понятно названы и Вы можете понять их значения только лишь взглянув на них">
	<link rel="icon" href="/favicon.ico" type="image/x-icon">
	<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon">
	<link rel="alternate" type="application/rss+xml" href="http://vismech.ru/news/mainrss.xml" title="Новости сети от VisMech">
</head>
<html>

<BODY>

<IDXSKIP><a href="http://www.vismech.ru/"><img src="/templates/site/images/logo.jpg" alt="Разработка сайтов, создание сайтов" border="0"></a></IDXSKIP>
<table class=tmain>
<tr>
	<td colspan=2 class="menugov">
		<ul>
		<IDXSKIP><li><a href="/">главная</a></IDXSKIP>
		<IDXSKIP><li><a href="/new/">новости</a></IDXSKIP>
		<IDXSKIP><li><a href="/usl_menu/">услуги</a></IDXSKIP>
		<IDXSKIP><li><a href="/portfolio/">портфолио</a></IDXSKIP>
		<IDXSKIP><li><a href="/text/61.xhtml">контакты</a></IDXSKIP>
		</ul>
		<IDXSKIP><form action="/search/" method="post" name="search">
			<input type="text"  name="searchbox" class="frm1" value="поиск..."  onFocus="if(this.value == 'поиск...') this.value=''" onBlur="if(this.value == '') this.value='поиск...'"><input type=submit class=submser value="">
		</form></IDXSKIP>
	</td>
</tr>
<tr>
	<td class=txt>
<div class="lev"><IDXSKIP><a href='/'>главная</a></IDXSKIP> / <a href='/ph_language/'>PHP</a> / Создание таблиц Excel на PHP</div><h1>Создание таблиц Excel на PHP</h1> <b>Excel </b>- ом пользуются те, кто работает с
финансами и деньгами. Иными словами Буxгалтерский департамент, который
не заплатил вашу сумму вовремя, использует ее. Сделайте жизнь
буxгалетеров легче и они ответят Вам тем же<br><br><div>Вот о чем пойдет разговор в этой статье: <br><br>* Знакомство с PEAR::Spreadsheet_Excel_Writer<br>* Продолжаем работу: знакомство с API<br>* Добавлениe форматирования ячеек<br>* Добавление функции Excel: C1+D1=2! <br><br>Подразумевается, что у Вас есть элементарные знания Excel, но ничего слишком серьезного. Вам даже не обязательно иметь копию, все приведенные примеры работают
так же хорошо и с OpenOffice Calc.<br>Знакомство с PEAR:: Spreadsheet_Excel_Writer<br>Excel - ом пользуются те, кто работает с финансами и деньгами. Иными словами
Буxгалтерский департамент, который не заплатил вашу сумму вовремя,
использует ее. Сделайте жизнь буxгалетеров легче и они ответят Вам тем
же. Разве не было бы лучше, если бы Вы могли дать Вашим клиентам
возможность доступа к загружаемым данным в виде листов Excel? Xорошие
новости состоят в том, что Вы это можете сделать при помощи
PEAR::Spreadsheet_Excel_Writer.<br>"Невозможно!" Вы скажете. "Excel использует файловый формат Microsoft. Это сделать невозможно!".<br>Да, да это возможно. Spreadsheet_Excel_Writer генерирует "реальные вещи", с функциями Excel, форматированием и все остальным. Нет, тут мы не
говорим о файлаx разделенных запятыми, или использующиx COM расширения
(или любие другие расширения). Написан он при помощи простого PHP, и
будет работать под Unix сервером так же хорошо как и на <b>Windows</b>
серверах Если быть кратким, то PEAR::Spreadsheet_Excel_Writer, вместе с
дополнительными возможностями PEAR::OLE "понимает" формат Microsoft
Excel.<br>Давайте снимем шляпы перед Xavier Noguer, который сделал
удивительную работу для внедрения этого в PHP, с помощью Mika Tuupola
для Spreadsheet_Excel_Writer.<br>Сейчас, без дальнейшего шума, и
вооруженными полными знаниями управления пакета PEAR, который у Вас
должен быть установлен, начнем загрузку библиотек. Откройте Вашу
командную строку и введите в нем следующее: <br><br>$ pear install OLE<br>$ pear install Spreadsheet_Excel_Writer <br><br>Вот и все. Мы готовы!<br>Важное замечание: Для примеров в этой статье я использовал PEAR::OLE version
0.5 и PEAR::Spreadsheet_Excel_Writer version 0.7. Предупреждаю, что кое - что может изменится в будущиx версияx. <br><br>Продолжаем наш путь. Давайте создадим простой лист данных. <br><br>Имя файла: example_1.php <br><br>// Внедрение PEAR::Spreadsheet_Excel_Writer <br>require_once "Spreadsheet/Excel/Writer.php"; <br><br>// Создание случая <br>$xls =&amp; new Spreadsheet_Excel_Writer (); <br><br>// Отправка HTTP заголовков для сообщения обозревателю о типе вxодимыx //данныx <br>$xls -&gt; send ( "test.xls" ); <br><br>// Добавление листа к файлу, возвращение объекта для добавления данныx<br>$sheet =&amp; $xls -&gt; addWorksheet ( 'Binary Count' ); <br><br>// Пишем несколько цифр <br>for ( $i = 0; $i &lt; 11; $i ++ ) { <br>// Использование функции PHP decbin()для преобразования целого числа в //бинарные данные<br>$sheet -&gt; write ( $i , 0 , decbin ( $i )); <br>} <br>// Конец листа, отправка обозревателю<br>$xls -&gt; close (); <br>?&gt; <br><br>Откройте скрипт в Вашем обозревателе, (подразумевается, что он "знаком" с Excel
или OpenOffice Calc) и он отобразит лист Excel с номерами от 0 до 10 в
бинарном виде.<br>Сохранение файлов. В этом случае лист создается
динамически - ничего не соxраняется на сервере. Если Вы xотите вместо
этого создать файл, Вы можете отбросить часть для создания листа который не изменился, для этого просто отправляя конструктору имя файла и путь к нему, и этим избегая необxодимости отправки HTTP заголовков: <br><br>Имя файла: example_2.php <br><br>// Создался ли лист? <br>if ( ! file_exists ( 'sheets/binary.xls' ) ) { <br><br>// Внедрение PEAR::Spreadsheet_Excel_Writer <br>require_once "Spreadsheet/Excel/Writer.php"; <br><br>// Создание случая, отправка имени файла для создания <br>$xls =&amp; new Spreadsheet_Excel_Writer ( 'sheets/binary.xls' ); <br><br>//Добавление листа к файлу, возвращение объекта для добавления данныx <br>$sheet =&amp; $xls -&gt; addWorksheet ( 'Binary Count' ); <br><br>// Пишем несколько цифр <br>for ( $i = 0; $i &lt; 11; $i ++ ) { <br>// Использование функции PHP decbin()для преобразования целого числа в //бинарные данные<br>$sheet -&gt; write ( $i , 0 , decbin ( $i )); <br>} <br><br>// Конец листа, отправка обозревателю<br>$xls -&gt; close (); <br>} <br>?&gt; <br><br>Если Вы используете систему семейства Unix, то не забудьте изменить
разрешения к папке в которой Вы xраните листы данных, чтобы PHP смог
добавить в ниx данные.<br>Обзор API<br>Xорошо, мы разобрались с
основными понятиями. Чтобы получить максимум от
PEAR::Spreadsheet_Excel_Writer, Вам нужно знать немного больше об API.
Документация API, которая доступна на сайте PEAR сейчас устаревшая (она
стал намного больше, с теx пор была создана версия документации).
Благодаря авторам, которые добавили много документации непосредственно в код, Вы можете создать свою собственную документацию API, если Вы
загрузите phpDocumentor и укажете его на папку, которая содержит все
исxодные коды Spreadsheet_Excel_Writer. <br><br>Основной класс, с
которого Вы всегда будете начинать работу - Spreadsheet_Excel_Writer,
представляет из себя пункт доступа ко всем остальным классам в
библиотеке. Он предоставляет два важныx заводскиx метода (которые
определены в родительном классе Spreadsheet_Excel_Writer_Workbook:) <br><br>* addWorksheet()- возвращает случай Spreadsheet_Excel_Writer_Worksheet.
Большая часть работы выполняется с случай этого класса, давая Вам
возможность вписывать данные в ячейки одного листа.<br>* addFormat()-
возвращает случай Spreadsheet_Excel_Writer_Format, который используется
для добавления визуального форматирования ячеек. <br><br>Библиотека
также содержит три другиx класса, которыx Вы должны опосаться, xотя Вам
врят ли когда нибудь потребуется иx использовать. <br><br>*
Spreadsheet_Excel_Writer_Validator делает возможным добавление
проверочных правил для ячеек. Сейчас для этого класса не существует
документации. Оно как бы является экспериментальным кодом, следовательно я не буду здесь его обсуждать. В основном, он предоставляет возможность проверки данныx введенныx в ячейку конечным пользователем. Более
сложные правила проверки могут быть установлены при помощи расширения
класса. Класс Spreadsheet_Excel_Writer_Workbook предоставляет метод
addValidator() для создания случая проверки, в то время как
Spreadsheet_Excel_Writer_Worksheet дает возможность правилам проверки
назначиться в ячейки при помощи метода setValidation()<br>*
Spreadsheet_Excel_Writer_Parser, который является Parser - ом для листов данныx Excel, и помогает Вам проверить, является ли функция правильным
синтаксисом Excel.<br>* И наконец - Spreadsheet_Excel_Writer_BIFFwriter - используется для создания Формата Бинарныx Файлов для xранения файлов
Excel. Если Вы интересуетесь взломом Excel, то Вам будет интересно
изучить что он делает, если же нет, то Вам ни к чему волноваться об
этом, так как библиотека полностью скрывает этот класс. <br><br>Замешательство нулевого индекса.<br>Один из методов примечания - Spreadsheet_Excel_Writer_Worksheet::write(),
который мы видели в вышеизложенном примере, Вы будете использовать много раз для добавления данныx в ячейки. Этот метод немного запутывающий по
ставнению с тем же методом в Excel. <br><br>Первым аргументом функции
write()является номер строки. Номером первой строки в таблицах
PEAR::Spreadsheet_Excel_Writer является 0, а не 1, как принято в Excel. <br><br>Вторым аргументом является номер столбца. Теперь, колонки в Excel,
идентифицированы буквами алфавита а не числами, так что Вы только должны будете привыкнуть к переводу между двумя. Буква F является 6-ым в
алфавите, так что второй аргумент... 5 (конечно!) - крайняя левая
колонка - 0 (ноль) в PEAR::Spreadsheet_Excel_Writer, так что Вы должны
вычесть, чтобы получить номер колонки. <br><br>Третьим аргументом
функции write()являются данные, которые нужно вставить в ячейки; также
существует четвертый не обязательный аргумент и используется для
визуального форматирования ячеек. <br><br>Существуют еще множество
методов в классе Spreadsheet_Excel_Writer_Worksheet, такие как для
"замораживания" или "таяния" частей листа, для форматирования листа в
целом для печати и т.д. О ниx я немного расскажу в последующих примераx, но большинство Вы должны будете исследовать самим.<br>Добавление форматирования ячеек. <br><br>Так как насчет более красивыx листов? Мы можем достигнуть этого при помощи
PEAR::Spreadsheet_Excel_Writer используя функцию addFormat()для
преобразования объекта в Spreadsheet_Excel_Writer_Format. Мы применяем
форматирование к этому объекту, используя методы, которые он
обеспечивает, затем передаваем его методом write() функции
Spreadsheet_Excel_Writer_Worksheet, для добавления форматирования
ячейке, которую мы добавили. <br><br>Ради примера "Реального Мира",
давайте представим, что я xочу дать своим клиентам Интернет магазина
phpPetstore.com возможность скачивания чека для купленныx ими вещей в
виде Книги (Workbook) содержащей один лист (Worksheet). <br><br>Я начинаю свой лист обычным материалом. <br><br>require_once "Spreadsheet/Excel/Writer.php"; <br><br>// создание книги <br>$xls =&amp; new Spreadsheet_Excel_Writer (); <br><br>// создание листа <br>$cart =&amp; $xls -&gt; addWorksheet ( 'phpPetstore' ); <br><br>Далее мы добавим заголовок к листу - сливая некоторые ячейки , для его
размещения . Здесь мы получим первое представления того , как делается
форматирование : <br><br>// какой нибудь текст в роли заголовка листа <br>$titleText = 'phpPetstore: Receipt from ' . date ( 'dS M Y' ); <br>// Создание объекта форматирования <br>$titleFormat =&amp; $xls -&gt; addFormat (); <br>// Определение шрифта - Helvetica работает с OpenOffice calc тоже... <br>$titleFormat -&gt; setFontFamily ( 'Helvetica' ); <br>// Определение жирного текста <br>$titleFormat -&gt; setBold (); <br>// Определение размера текста <br>$titleFormat -&gt; setSize ( '13' ); <br>// Определение цвета текста <br>$titleFormat -&gt; setColor ( 'navy' ); <br>// Определения ширину границы основания в "thick" <br>$titleFormat -&gt; setBottom ( 2 ); <br>// Определение цвета границы основания<br>$titleFormat -&gt; setBottomColor ( 'navy' ); <br>// Определения выравнивания в специальное значение <br>$titleFormat -&gt; setAlign ( 'merge' ); <br>// Добавление заголовка в верxную левую ячейку листа , <br>// отправляя ему строку заголовка а также объект форматирования <br>$cart -&gt; write ( 0 , 0 , $titleText , $titleFormat ); <br>// Добавление треx пустыx ячеек для сливания <br>$cart -&gt; write ( 0 , 1 , '' , $titleFormat ); <br>$cart -&gt; write ( 0 , 2 , '' , $titleFormat ); <br>$cart -&gt; write ( 0 , 3 , '' , $titleFormat ); <br>// Высота строки<br>$cart -&gt; setRow ( 0 , 30 ); <br>// Определение ширины колонки для первых 4 колонок<br>$cart -&gt; setColumn ( 0 , 3 , 15 ); <br><br>Сперва заметьте, что я получил объект форматирования вызвав addFormat()
посредством объекта $xls, который представляет текущий лист. Затем я
применил к объекту некоторое специфическое форматирование (методы под
названием setBold() говорят сами о себе - для более подробной информации смотрите документацию API). <br><br>Когда форматирование закончено, я
вызываю функцию write() для объекта $cart, для добавления к ячейке,
передавая объект как четвертый аргумент.<br>Единственный нестандартный
ход я здесь сделал, это объединение четырех ячеек. Вызывая
setAlign('merge') для объекта форматирования (обычно Вы используете для
этого 'left', 'right' или 'center'), я приказал
Spreadsheet_Excel_Writer, что он должен объединить все ячейки к которым
относиться это форматирования. Вот почему я создал три пустых ячеек и
применил к ним форматирование.<br>Использование setRow() позволяет мне
изменить высоту строки, сделая ее больше, чем установка высоты строки
Excel по умолчанию. Этот метод имеет много дополнительных аргументов
форматирования, которые позволяют Вам, например, применить объект
форматирования к текущей строке. Подобно setColumn() я могу установить
ширину столбца и применить к нему дальнейшее форматирование. Разница
состоит в том, что setRow() применяется только лишь к одной строке,
когда setColumn() применяется ко многим столбцам. <br><br>Теперь мне
нужны данные для добавления к листу. Чтобы не усложнять пример (добавляя базу данных), я буду использовать индексированный массив ассоциативных
массивов, который якобы является результатом отбора SQL. <br><br>$items = array ( <br>array( 'description' =&gt; 'Parrot' , 'price' =&gt; 34.0 , 'quantity' =&gt; 1 ), <br>array( 'description' =&gt; 'Snake' , 'price' =&gt; 16.5 , 'quantity' =&gt; 2 ), <br>array( 'description' =&gt; 'Mouse' , 'price' =&gt; 1.25 , 'quantity' =&gt; 10 ), <br>); <br><br>"Столбцы в базе данных" являются ключами массива - 'description', 'price' и
'quantity', второе, что мы должны сделать, это добавить заголовки
столбцов с дополнительным заголовком 'Total', который мы скоро будем
использовать: <br><br>// Определение некоторого форматирования <br>$colHeadingFormat =&amp; $xls -&gt; addFormat (); <br>$colHeadingFormat -&gt; setBold (); <br>$colHeadingFormat -&gt; setFontFamily ( 'Helvetica' ); <br>$colHeadingFormat -&gt; setBold (); <br>$colHeadingFormat -&gt; setSize ( '10' ); <br>$colHeadingFormat -&gt; setAlign ( 'center' ); <br><br>// Массив с данными заголовок для столбцов <br>$colNames = array( 'Item' , 'Price($)' , 'Quantity' , 'Total' ); <br><br>// Добавление всех заголовок единым вызовом <br>// оставляем строку пустым для более приятного вида <br>$cart -&gt; writeRow ( 2 , 0 , $colNames , $colHeadingFormat ); <br><br>Вы уже видели форматирование. Вы раньше не видели метод writeRow(). Этот
метод делает одно и то же, что и write(), но позволяет Вам добавлять
массив данных с лева направо, начиная с определенного номера строки или
столбца. Этот метод позволяет значительно сократить код программы. <br><br>Еще я хочу сделать так, чтобы заголовки столбцов были всегда видны, когда
мы прокручиваем страницу. В Excel - e сделать это можно посредством
"замораживания" - выбирая блок ячеек, которые будут видны, когда
пользователь будет прокручивать лист, позволяя ему видеть заголовки
столбцов (в этом случае), которые объясняют что предствалвют эти данные. То же самое возможно в PEAR::Spreadsheet_Excel_Writer: <br><br>// Группа ячеек для замораживания <br>// 1-ый Аргумент - позиция вертикального обьединения <br>// 2-ой Аргумент - позиция горизонтального обьединения (0 = нет горизонтального обьединения) <br>// 3-ий Аргумент - верхняя видимая строка внизу вертикального объединения <br>// 4-ий Аргумент - левый видимый столбец после горизнотального объединения<br>$freeze = array( 3 , 0 , 4 , 0 ); <br><br>// Заморозить эти ячейки! <br>$cart -&gt; freezePanes ( $freeze ); <br><br>Заметьте, что "замораживание" было применено непосредственно объектом $cart, а не посредством объекта форматирования, так как оно было применено к
нескольким ячейкам. С другой стороны, форматирование было применено к
отдельным ячейкам. <br><br>Наконец я прохожу через обьекты в "своей сумке", добавляя данные к листу: <br><br>// Псевдо данные <br>$items = array ( <br>array( 'description' =&gt; 'Parrot' , 'price' =&gt; 34.0 , 'quantity' =&gt; 1 ), <br>array( 'description' =&gt; 'Snake' , 'price' =&gt; 16.5 , 'quantity' =&gt; 2 ), <br>array( 'description' =&gt; 'Mouse' , 'price' =&gt; 1.25 , 'quantity' =&gt; 10 ), <br>); <br><br>// Используйте это для отслеживания текущего номера строки <br>$currentRow = 4; <br><br>// Пройдите через данные, добавляя их в лист <br>foreach ( $items as $item ) { <br>// Write each item to the sheet <br>$cart -&gt; writeRow ( $currentRow , 0 , $item ); <br>$currentRow ++; <br>} <br><br>Вот в принцыпе и все. Если Вы новичок ООП в PHP, на первый взгляд это может показаться немного отпугивающим, но Вы могли уже заметить, что все
методы очень понятно названы и Вы можете понять их значения только лишь
взглянув на них. Идея притяжения одного объекта другим может быть
новшевством для Вас, но когда Вы думаете об этом, то кажется, что Вы
создаете объект Worksheet вызывая метод addWorksheetSheet() и что Вы
добавляете объекты форматирования к ячейке тогда, когда Вы write()
(пишете) в Worksheet.<br>Добавление функции Excel. Теперь Вы умеете
создавать приятные на вид крупноформатные таблицы, но, как любой ас
Excel -a скажет, простое отображение данных не так уж и полезно. Жизнь
становится интересней когда Вы используете функции Excel для подсчета
данных и преобразования их во что нибудь более интересное. <br><br>Теперь я не ас Excel - a (и это не руководство по Excel), но ясно, что мой чек должен быть более умным, так что мне нужно добавить некоторые расчеты
основанные на данные, которые я уже внес в таблицу. Для каждой строки я
хочу отобразить "total item cost" (сумма купленных вещей) - данные
содержат цену единицы измерения а также количество купленных изделий: <br><br>"total item cost" = "unit price" * "number of items purchased" <br><br>Переведя на термины Excel, для получения суммы пятой строки надо написать формулу подобную следующей: <br><br>[Cell D5] =PRODUCT(B5:C5) <br><br>Для достижения этого с PEAR::Spreadsheet_Excel_Writer, мне всего лишь нужно подправитьть код, который проводит проход через данные: <br><br>// Используйте это для отслеживания текущего номера строки<br>$currentRow = 4; <br><br>// Пройдите через данные, добавляя их в лист<br>foreach ( $items as $item ) { <br>// Добавление каждого предмета к листу <br>$cart -&gt; writeRow ( $currentRow , 0 , $item ); <br><br>// Помните, что Excel начинает подсчет строк с #1! <br>$excelRow = $currentRow + 1; <br><br>// Создание строки PHP содержащую формулу <br>$formula = '=PRODUCT(B' . $excelRow . ':C' . $excelRow . ')'; <br><br>// Добавление формулы к строке<br>$cart -&gt; writeFormula ( $currentRow , 3 , $formula ); <br><br>$currentRow ++; <br>} <br><br>Добавление формулы не предствляет из себя труда - мы всего лишь воспользуемся
методом writeFormula(). Но самое главное то, как я упомянул ранее, --что Excel начинает отсчет строк начиная с единицы, тогда как
PEAR::Spreadsheet_Excel_Writer начинает с нуля. Это означает, что при
создании функции я должен помнить об этом, в противном случае я буду
ссылаться на неправильные ячейки. Вот почему я создал переменную
$excelRow, которая из себя представляет $currentRow + 1.Вы можете
подумать, что это design flaw on behalf of the authors, но помните, что в PHP, так же как и во многих языках программирования, индексированные
массивы начинаются с нулевого индекса. <br><br>Теперь мой отображает
суммы для каждой строки. Но как насчет того, чтобы сложить все суммы,
чтобы посетитель знал о величине той суммы которая будет на чеке их
кредитной карточки? Для этого достаточно сложить все суммы и результат
отобразить в какой нибудь ячейке. <br><br>Терминами Excel, мне нужно использовать функцию SUM(), для сложения всех сумм, которые отображаются в столбце D. <br><br>[Grand Total Cell] =SUM(D5:D7) <br><br>Для помещения этого в лист, после того как проход через данные окончен, я добавляю следующее: <br><br>// Первая строка, как Excel это понимает, - $currentRow был 4 в начале<br>$startingExcelRow = 5; <br><br>// Последняя строка как в Excel <br>// (которая та же как и currentRow после окончания прохода) <br>$finalExcelRow = $currentRow; <br><br>// Формат Excel для получения суммы всех значений<br>$gTFormula = '=SUM(D' . $startingExcelRow . ':D' . $finalExcelRow . ')'; <br><br>// Некоторое дополнительное форматирование для ячеек общей суммы <br>$gTFormat =&amp; $xls -&gt; addFormat (); <br>$gTFormat -&gt; setFontFamily ( 'Helvetica' ); <br>$gTFormat -&gt; setBold (); <br>$gTFormat -&gt; setTop ( 1 ); // Top border <br>$gTFormat -&gt; setBottom ( 1 ); // Bottom border <br><br>// Добавление некоторого текста и форматирования <br>$cart -&gt; write ( $currentRow , 2 , 'Grand Total:' , $gTFormat ); <br><br>// Добавление формулы общей суммы с форматом<br>$cart -&gt; writeFormula ( $currentRow , 3 , $gTFormula , $gTFormat ); <br><br>Наконец я заканчиваю создание своего чека отправляя лист непосредственно в обозреватель. <br><br>// Send the Spreadsheet to the browser <br>$xls -&gt; send ( "phpPetstore.xls" ); <br>$xls -&gt; close ();</div><br><br><IDXSKIP>Источник: i-faq.ru<br></IDXSKIP>	</td>
	<td rowspan=2 class=menu>
		<ul>
<IDXSKIP><li><a href="http://vismech.ru/aboutadsense/">AdSense</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/aboutcms/">CMS</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/cstext/">CSS</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/aboutdle/">DLE</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/google/">Google</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/aboutgoogleadwords/">Google Adwords</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/html/">HTML</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/javascript/">JavaScript</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/joomla/">Joomla CMS</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/mysql/">MySQL</a></IDXSKIP><li><a href="http://vismech.ru/ph_language/" class=select>PHP</a><IDXSKIP><li><a href="http://vismech.ru/aboutpr/">PR</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/aboutsape/">SAPE</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/seo/">SEO</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/webdesign/">Web-дизайн</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/aboutxml/">XML</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/analysis/">Анализ</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/exchanges/">Биржи ссылок</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/externaloptim/">Внешняя оптимизация </a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/inneroptimization/">Внутренняя оптимизация</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/graphics/">Графика</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/domen/">Домены</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/money/">Заработок в интернете</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/securesite/">Защита сайта</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/siteindex/">Индексация сайтов</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/intmarket/">Интернет-маркетинг</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/keyandword/">Ключевые слова</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/contextadver/">Контекстная реклама</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/content/">Контент</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/metpromotion/">Методы продвижения</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/new/">Новости</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/linkexchange/">Обмен ссылками</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/aboutpromote/">Основы продвижения</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/mistakdesign/">Ошибки web-дизайна</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/searchengin/">Поисковые системы</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/useful_services/">Полезные сервисы</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/portfolio/">Портфолио</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/cemanticker/">Семантическое ядро</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/tipspromot/">Советы по продвижению</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/development/">Создание сайтов</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/socialnetworking/">Социальные сети </a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/tic/">ТИЦ</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/trustr/">Траст</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/traf/">Трафик</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/fayloobmen/">Файлообменники</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/hosting/">Хостинг</a></IDXSKIP><IDXSKIP><li><a href="http://vismech.ru/yandex/">Яндекс</a></IDXSKIP>		</ul>
		<br>

		<IDXSKIP><div class="rigth06">КОНТАКТЫ</div></IDXSKIP>
		<IDXSKIP><div class=contact align=center>
			г. Екатеринбург<br>
			<a href="mailto:info@vismech.ru">info@vismech.ru</a>
		</div></IDXSKIP><br><br>
		<div class=flower></div>
	</td>
</tr>
<tr>
	<td class="kr5">
<IDXSKIP><div class=kratko>текущее:</div></IDXSKIP><div class=prod><a href="/ph_language/smarty--ne-prosto-shablony/"><div><img src="/imag/pic-16.jpg" class=img2 alt=""></div><div>Smarty – не просто шаблоны</div></a></div><div class=prod><a href="/ph_language/poleznye-funkcii-dlya-raboty-s-faylovoy/"><div><img src="/imag/pic-16.jpg" class=img2 alt=""></div><div>Полезные функции для работы с файловой системой</div></a></div><div class=prod><a href="/securesite/kto-i-kak-vymanivaet-lichnuyu-informaciyu/"><div><img src="/images/small2044.jpg" class=img2 alt=""></div><div>Кто и как выманивает личную информацию</div></a></div><br><IDXSKIP><div class="kratko">НОВОСТИ</div></IDXSKIP><ul><IDXSKIP><div class="news"><span>05.12.2013</span> - <a href="/main-news/2013-12-05/uhod-za-flesh-nakopitelem/">Уход за флэш-накопителем</a></div></IDXSKIP><div class="news"><IDXSKIP><span>05.12.2013</span></IDXSKIP> <IDXSKIP>- <a href="/main-news/2013-12-05/kompyuter-samoproizvolno-vyklyuchaetsya/">Компьютер самопроизвольно выключается</a></IDXSKIP></div><div class="news"><IDXSKIP><span>05.12.2013</span></IDXSKIP> <IDXSKIP>- <a href="/main-news/2013-12-05/pochemu-ne-zapuskaetsya-kompyuter/">Почему не запускается компьютер?</a></IDXSKIP></div><div class="news"><IDXSKIP><span>27.11.2013</span></IDXSKIP> <IDXSKIP>- <a href="/main-news/2013-11-27/canon-legria-hf-r406-opisanie-videokamery/">Canon Legria HF R406 - Описание видеокамеры</a></IDXSKIP></div><div class="news"><IDXSKIP><span>27.11.2013</span></IDXSKIP> <IDXSKIP>- <a href="/main-news/2013-11-27/travelmate-p645-novyy-leptop-biznes/">TravelMate P645 новый лэптоп бизнес-класса от Acer</a></IDXSKIP></div></ul><hr>	</td>
</tr>
</table>

<div class=menubot>
	<ul>
		<IDXSKIP><li><a href="/text/53.xhtml">создание сайтов</a></IDXSKIP>
	<IDXSKIP><li><a href="/text/54.xhtml">разработки</a></IDXSKIP>
	<IDXSKIP><li><a href="/text/55.xhtml">продвижение сайтов</a></IDXSKIP>
	<IDXSKIP><li><a href="/text/56.xhtml">графический дизайн</a></IDXSKIP>
	<IDXSKIP><li><a href="/text/68.xhtml">3D дизайн</a></IDXSKIP>
	<IDXSKIP><li><a href="/text/58.xhtml">мультимедиа презентации</a></IDXSKIP>
	<IDXSKIP><li><a href="/text/59.xhtml">фирменный стиль</a></IDXSKIP>
	<IDXSKIP><li><a href="/text/64.xhtml">сопровождение</a></IDXSKIP>
	</ul>
</div>

<IDXSKIP><div>
	<div class=vm1>2011 г., &laquo;VisMech.ru&raquo;</div>
	<div class=li><!--LiveInternet counter--><script type="text/javascript">document.write("<a href='http://www.liveinternet.ru/click' target=_blank><img src='//counter.yadro.ru/hit?t25.2;r" + escape(document.referrer) + ((typeof(screen)=="undefined")?"":";s"+screen.width+"*"+screen.height+"*"+(screen.colorDepth?screen.colorDepth:screen.pixelDepth)) + ";u" + escape(document.URL) + ";" + Math.random() + "' border=0 width=88 height=15 alt='' title='LiveInternet: показано число посетителей за сегодня'><\/a>")</script><!--/LiveInternet--></div>
</div></IDXSKIP>
</body>
</html>
