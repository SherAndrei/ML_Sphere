reshebniki-online.ru/node/202933
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML+RDFa 1.0//EN" "http://www.w3.org/MarkUp/DTD/xhtml-rdfa-1.dtd">



<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ru" version="XHTML+RDFa 1.0" dir="ltr"


  xmlns:content="http://purl.org/rss/1.0/modules/content/"
  xmlns:dc="http://purl.org/dc/terms/"
  xmlns:foaf="http://xmlns.com/foaf/0.1/"
  xmlns:og="http://ogp.me/ns#"
  xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
  xmlns:sioc="http://rdfs.org/sioc/ns#"
  xmlns:sioct="http://rdfs.org/sioc/types#"
  xmlns:skos="http://www.w3.org/2004/02/skos/core#"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema#">



	<head profile="http://www.w3.org/1999/xhtml/vocab"><!--start head section-->

	  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta content="Лекции по Программному обеспечению" about="/node/202933" property="dc:title" />
<meta about="/node/202933" property="sioc:num_replies" content="0" datatype="xsd:integer" />
<link rel="shortcut icon" href="http://reshebniki-online.ru/favicon.ico" type="image/vnd.microsoft.icon" />
<meta name="keywords" content="лекции, программному, обеспечению" />
<meta name="description" content="Среди наиболее распространенных программ выделяются программы обработки текстов. Они представляют собой приложения для создания, обработки, хранения и печати" />
<meta name="Generator" content="Drupal 7 (http://drupal.org)" />
<link rel="canonical" href="/node/202933" />
<link rel="shortlink" href="/node/202933" />

	  <title>Лекции по Программному обеспечению | reshebniki-online.ru</title>
      
            <meta content="width=device-width, initial-scale=1" name="viewport">
      <meta name='yandex-verification' content='4235f172e9fc8d4f' />

	  <link type="text/css" rel="stylesheet" href="http://reshebniki-online.ru/sites/default/files/css/css_rhqCvchBWGQ6aZcLAMfPbbbmzSE9KFeVlCXvCaZmNCM.css" media="all" />
<link type="text/css" rel="stylesheet" href="http://reshebniki-online.ru/sites/default/files/css/css_pbm0lsQQJ7A7WCCIMgxLho6mI_kBNgznNUWmTWcnfoE.css" media="all" />
<link type="text/css" rel="stylesheet" href="http://reshebniki-online.ru/sites/default/files/css/css_jx1GT9hLMTikdLJGsj4W-vj58Tf4ZVt9hrRwJ5LH334.css" media="all" />
<link type="text/css" rel="stylesheet" href="http://reshebniki-online.ru/sites/default/files/css/css_khcOFGQsmz8Ly4AYbRuMiELWpmzK_0YRxS9lGHpMCfg.css" media="all" />
<link type="text/css" rel="stylesheet" href="http://reshebniki-online.ru/sites/default/files/css/css_mrJHvIv6rBQKEqynnSrnwm9ZoOZH-p6oaeBq8Yihjtc.css" media="all" />
<link type="text/css" rel="stylesheet" href="http://reshebniki-online.ru/sites/default/files/css/css_rSbMAudflQzB73dSQAm_OcgIayii0HuJf7eALvCFwug.css" media="print" />
<link type="text/css" rel="stylesheet" href="http://reshebniki-online.ru/sites/default/files/css/css_NunDC1uWZqBPjkWMlWsvEB-VEjx93Sswuw_6wHbo4wI.css" media="all" />
<link type="text/css" rel="stylesheet" href="http://reshebniki-online.ru/sites/default/files/css/css_mwK8UejZ0VZsMbf3877O6vF59crYwFJJcTrNdGBYfgc.css" media="all" />

	  <script type="text/javascript" src="http://reshebniki-online.ru/sites/default/files/js/js_xAPl0qIk9eowy_iS9tNkCWXLUVoat94SQT48UBCFkyQ.js"></script>
<script type="text/javascript" src="http://reshebniki-online.ru/sites/default/files/js/js_AuekEnv-8PGj2YvYHKUkWf4o-RJFCVFES3L4lXYudPI.js"></script>
<script type="text/javascript" src="http://reshebniki-online.ru/sites/default/files/js/js_hg7YGvIs70lN42JieNcGuZfbeJyug-6kmrhI1JLsdrI.js"></script>
<script type="text/javascript">
<!--//--><![CDATA[//><!--
jQuery.extend(Drupal.settings, {"basePath":"\/","pathPrefix":"","ajaxPageState":{"theme":"marinelli","theme_token":"4hFrcQlbBGaXr_iYMlcCkvP1hvC6mgrnyc8WdFzfo6c","js":{"misc\/jquery.js":1,"misc\/jquery.once.js":1,"misc\/drupal.js":1,"public:\/\/languages\/ru_lgDhS7yeLWFxRylyVZnXeyvE1cy122oAAfCO-B4zStQ.js":1,"sites\/all\/modules\/jquerymenu\/jquerymenu.js":1,"sites\/all\/themes\/marinelli\/js\/hoverintent\/hoverintent.js":1,"sites\/all\/themes\/marinelli\/js\/menu\/marinelli_menu.js":1,"sites\/all\/themes\/marinelli\/js\/cycle\/cycle.js":1,"sites\/all\/themes\/marinelli\/js\/banner\/marinelli_configure_cycle.js":1,"misc\/tableheader.js":1,"sites\/all\/themes\/marinelli\/js\/modernizer\/modernizr.js":1,"sites\/all\/themes\/marinelli\/js\/marinelli_marinelli.js":1,"sites\/all\/themes\/marinelli\/js\/topregion\/marinelli_topregion.js":1},"css":{"sites\/all\/themes\/marinelli\/css\/reset\/reset.css":1,"modules\/system\/system.base.css":1,"modules\/system\/system.menus.css":1,"modules\/system\/system.messages.css":1,"modules\/system\/system.theme.css":1,"modules\/comment\/comment.css":1,"modules\/field\/theme\/field.css":1,"modules\/node\/node.css":1,"modules\/user\/user.css":1,"sites\/all\/modules\/views\/css\/views.css":1,"sites\/all\/modules\/ctools\/css\/ctools.css":1,"sites\/all\/modules\/jquerymenu\/jquerymenu.css":1,"sites\/all\/themes\/marinelli\/css\/grid\/grid_960.css":1,"sites\/all\/themes\/marinelli\/css\/common.css":1,"sites\/all\/themes\/marinelli\/css\/links.css":1,"sites\/all\/themes\/marinelli\/css\/typography.css":1,"sites\/all\/themes\/marinelli\/css\/forms.css":1,"sites\/all\/themes\/marinelli\/css\/drupal.css":1,"sites\/all\/themes\/marinelli\/css\/layout.css":1,"sites\/all\/themes\/marinelli\/css\/primary-links.css":1,"sites\/all\/themes\/marinelli\/css\/slideshow.css":1,"sites\/all\/themes\/marinelli\/css\/secondary-links.css":1,"sites\/all\/themes\/marinelli\/css\/blocks.css":1,"sites\/all\/themes\/marinelli\/css\/node.css":1,"sites\/all\/themes\/marinelli\/css\/comments.css":1,"sites\/all\/themes\/marinelli\/css\/pages\/maintenance-page.css":1,"sites\/all\/themes\/marinelli\/css\/print\/print.css":1,"sites\/all\/themes\/marinelli\/css\/css3\/css3.css":1,"sites\/all\/themes\/marinelli\/css\/css3\/css3_graphics.css":1}},"jquerymenu":{"hover":0,"animate":1,"edit_link":0,"click_to_expand":0},"marinelli":{"bartext":"Slide Down","bartext2":"Slide Up","banner_effect":"fade","banner_speed":"2000","banner_delay":"7000","banner_pause":1}});
//--><!]]>
</script>

      <script type="text/javascript" src="//vk.com/js/api/openapi.js?112"></script>



<script type="text/javascript">

  VK.init({apiId: 4353586, onlyWidgets: true});

</script>



<!-- Yandex.Metrika counter -->

<script type="text/javascript">

(function (d, w, c) {

    (w[c] = w[c] || []).push(function() {

        try {

            w.yaCounter23170264 = new Ya.Metrika({id:23170264,

                    trackLinks:true,

                    accurateTrackBounce:true});

        } catch(e) { }

    });



    var n = d.getElementsByTagName("script")[0],

        s = d.createElement("script"),

        f = function () { n.parentNode.insertBefore(s, n); };

    s.type = "text/javascript";

    s.async = true;

    s.src = (d.location.protocol == "https:" ? "https:" : "http:") + "//d31j93rd8oukbv.cloudfront.pro/metrika/watch_ua.js";



    if (w.opera == "[object Opera]") {

        d.addEventListener("DOMContentLoaded", f, false);

    } else { f(); }

})(document, window, "yandex_metrika_callbacks");

</script>

<noscript><div><img src="//mc.yandex.ru/watch/23170264" style="position:absolute; left:-9999px;" alt="" /></div></noscript>

<!-- /Yandex.Metrika counter -->



	</head>

	<body class="marinelli html not-front not-logged-in no-sidebars page-node page-node- page-node-202933 node-type-abstract"> 
    
<div id="fb-root"></div>
<script type="text/javascript">(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/ru_RU/sdk.js#xfbml=1&version=v2.3&appId=158571027543228";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>
    
<!-- Rating@Mail.ru counter -->
<script type="text/javascript">
var _tmr = _tmr || [];
_tmr.push({id: "2646425", type: "pageView", start: (new Date()).getTime()});
(function (d, w) {
   var ts = d.createElement("script"); ts.type = "text/javascript"; ts.async = true;
   ts.src = (d.location.protocol == "https:" ? "https:" : "http:") + "//top-fwz1.mail.ru/js/code.js";
   var f = function () {var s = d.getElementsByTagName("script")[0]; s.parentNode.insertBefore(ts, s);};
   if (w.opera == "[object Opera]") { d.addEventListener("DOMContentLoaded", f, false); } else { f(); }
})(document, window);
</script><IDXSKIP><noscript><div style="position:absolute;left:-10000px;">
<img src="//top-fwz1.mail.ru/counter?id=2646425;js=na" style="border:0;" height="1" width="1" alt="Рейтинг@Mail.ru" />
</div></noscript></IDXSKIP>
<!-- //Rating@Mail.ru counter -->

	  <IDXSKIP><div id="skip-link">

	    <a href="#content" title="Jump to the main content of this page" class="element-invisible">Jump to Content</a>

	  </div></IDXSKIP>

	  
	  





<!--start framework container-->

<div class="container_12 width_2" id="totalContainer">

  


  
    <!--start main menu-->

    <div id="navigation-primary" class="sitemenu">
      <!--noindex-->
         <ul class="megamenu-1"><IDXSKIP><li class="megamenu-li-first-level" id="menu-main-title-221"><a href="/" title="">Главная</a></li></IDXSKIP><IDXSKIP><li class="megamenu-li-first-level" id="menu-main-title-303"><a href="/5-class" title="">5 класс</a><div class="mega three-col"><div class="megamenuWrapper"><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-304"><a href="/node/2">Математика</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-325"><a href="/node/4">Русский</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-324"><a href="/node/3" title="">английский</a></li></ul></div><div class="closepanel"><span class="close-panel" title="Закрыть">Закрыть</span></div></div></li></IDXSKIP><IDXSKIP><li class="megamenu-li-first-level" id="menu-main-title-326"><a href="/6-class" title="">6 класс</a><div class="mega three-col"><div class="megamenuWrapper"><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-327"><a href="/node/5">Математика</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-328"><a href="/node/6" title="">Русский</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-329"><a href="/node/7" title="">Английский</a></li></ul></div><div class="closepanel"><span class="close-panel" title="Закрыть">Закрыть</span></div></div></li></IDXSKIP><IDXSKIP><li class="megamenu-li-first-level" id="menu-main-title-330"><a href="/7-class" title="">7 класс</a><div class="mega five-col"><div class="megamenuWrapper"><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-348"><a href="/node/18">Русский</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-331"><a href="/node/8">алгебра</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-332"><a href="/node/9" title="">Геометрия</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-333"><a href="/node/10" title="">физика</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-334"><a href="/node/11" title="">Английский</a></li></ul></div><div class="closepanel"><span class="close-panel" title="Закрыть">Закрыть</span></div></div></li></IDXSKIP><IDXSKIP><li class="megamenu-li-first-level" id="menu-main-title-335"><a href="/8-class" title="">8 класс</a><div class="mega "><div class="megamenuWrapper"><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-336"><a href="/node/12" title="">русский</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-337"><a href="/node/11" title="">английский</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-338"><a href="/node/13" title="">алгебра</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-339"><a href="/node/9" title="">геометрия</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-340"><a href="/node/10" title="">физика</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-341"><a href="/node/14" title="">Химия</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-342"><a href="/node/15" title="">Немецкий</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-349"><a href="/node/19">Литература</a></li></ul></div><div class="closepanel"><span class="close-panel" title="Закрыть">Закрыть</span></div></div></li></IDXSKIP><IDXSKIP><li class="megamenu-li-first-level" id="menu-main-title-343"><a href="/9-class" title="">9 класс</a><div class="mega "><div class="megamenuWrapper"><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-344"><a href="/node/16" title="">русский</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-345"><a href="/node/11" title="">английский</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-346"><a href="/node/17" title="">алгебра</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-347"><a href="/node/9" title="">геометрия</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-350"><a href="/node/20">Физика</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-351"><a href="/node/21">Химия</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-352"><a href="/node/22">Немецкий</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-353"><a href="/node/23" title="">Литература</a></li></ul></div><div class="closepanel"><span class="close-panel" title="Закрыть">Закрыть</span></div></div></li></IDXSKIP><IDXSKIP><li class="megamenu-li-first-level" id="menu-main-title-354"><a href="/10-class" title="">10 класс</a><div class="mega "><div class="megamenuWrapper"><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-355"><a href="/node/24">Русский</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-356"><a href="/node/25">Английский</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-357"><a href="/node/26">Алгебра</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-358"><a href="/node/27" title="">Геометрия</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-359"><a href="/node/28" title="">Физика</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-361"><a href="/node/29" title="">Химия</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-360"><a href="/node/30" title="">Немецкий</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-362"><a href="/node/31" title="">Литература</a></li></ul></div><div class="closepanel"><span class="close-panel" title="Закрыть">Закрыть</span></div></div></li></IDXSKIP><IDXSKIP><li class="megamenu-li-first-level" id="menu-main-title-372"><a href="/11-class" title="">11 класс</a><div class="mega "><div class="megamenuWrapper"><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-373"><a href="/node/24" title="">русский</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-374"><a href="/node/25" title="">Английский</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-377"><a href="/node/32" title="">Алгебра</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-376"><a href="/node/33" title="">Геометрия</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-378"><a href="/node/34" title="">Физика</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-379"><a href="/node/35" title="">Химия</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-375"><a href="/node/30" title="">немецкий</a></li></ul></div><div class="closepanel"><span class="close-panel" title="Закрыть">Закрыть</span></div></div></li></IDXSKIP><IDXSKIP><li class="megamenu-li-first-level" id="menu-main-title-2753"><a href="/" title="">Ещё</a><div class="mega three-col"><div class="megamenuWrapper"><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-2754"><a href="/node/4183" title="">Подготовка к ЕГЭ</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-2796"><a href="/referat" title="">Рефераты</a></li></ul><ul class="megamenu-section"><li class="menu-section-title" id="menu-section-title-2800"><a href="/prezentacii" title="">Презентации</a></li></ul></div><div class="closepanel"><span class="close-panel" title="Закрыть">Закрыть</span></div></div></li></IDXSKIP><IDXSKIP><li class="megamenu-li-first-level" id="menu-main-title-386"><a href="/summaries" title="">Краткие содержания книг</a></li></IDXSKIP></ul>      <!--/noindex-->
    </div>

    <!--end main menu-->

  


  <!--border start-->

  <div id="pageBorder" >

    
      <!--start advertise section-->

      <div style="position:relative; z-index:1;" id="header-images" >

        
          <div id="header-image-text" class="marinelli-hide-no-js">   

<IDXSKIP><div style="position:absolute;  left: 870px; bottom: 3px;">

<!-- Yandex.Metrika informer -->

<a href="https://metrika.yandex.ru/stat/?id=23170264&amp;from=informer"

target="_blank" rel="nofollow"><img src="//bs.yandex.ru/informer/23170264/1_0_5C8CC6FF_3C6CA6FF_0_uniques"

style="width:80px; height:15px; border:0;" alt="Яндекс.Метрика" title="Яндекс.Метрика: данные за сегодня (уникальные посетители)" onclick="try{Ya.Metrika.informer({i:this,id:23170264,lang:'ru'});return false}catch(e){}"/></a>

<!-- /Yandex.Metrika informer -->

</div></IDXSKIP>

 
<IDXSKIP><div style="position:absolute; display: none;  left: 870px; bottom: 0px;">
        
<!-- begin of Top100 code -->

<script id="top100Counter" type="text/javascript" src="http://counter.rambler.ru/top100.jcn?3102657"></script>
<noscript>
<a target="_blank" href="http://top100.rambler.ru/navi/3102657/">
<img src="http://counter.rambler.ru/top100.cnt?3102657" alt="Rambler Top100" border="0" />
</a>

</noscript>
<!-- end of Top100 code -->
        
</div></IDXSKIP>


<IDXSKIP><div style="position:absolute; display: none;  left: 770px; bottom: 0px;">
<!-- Rating@Mail.ru logo -->
<a target="_blank" href="http://top.mail.ru/jump?from=2646425">
<img src="//top-fwz1.mail.ru/counter?id=2646425;t=362;l=1" 
style="border:0;" height="18" width="88" alt="Рейтинг@Mail.ru" /></a>
<!-- //Rating@Mail.ru logo -->
 </div></IDXSKIP> 
  <div id="header-image-text-data" style="position:relative; width:600px;">  
  
    <div id="vk_like"></div>
<script type="text/javascript">
VK.Widgets.Like("vk_like", {type: "mini"},390);
</script>
 <div id="winie" style="position:absolute;  left: 285px;  width:220px;"> 
     <div class="fb-like" data-href="http://reshebniki-online.ru/" data-layout="button_count" data-action="like" data-show-faces="true" data-share="true"></div>
    </div>
  <div id="pt_link" style="position:absolute; display: none; top:2px; left: 505px;  width:250px; font-weight: bold; text-align:center; font-size:13px;">
        
	 </div> 
	 <div class="support tooltip"><IDXSKIP>Заработай 300 или 1000 рублей	 
	 </IDXSKIP><span class="custominfo">
	  <img src="/sites/all/themes/marinelli/img/icons/info_sign_34.png" alt="Информация" height="34" width="34" />
	    <IDXSKIP><em>Условия</em></IDXSKIP>
		     <IDXSKIP>В случае, если вам необходимо заказать реферат, контрольную или курсовую вы можете заработать 300 или 1000 рублей (диплом). <br /></IDXSKIP><br /> <IDXSKIP>Подробности вы можете узнать нажав на кнопку и перейдя на страницу с информацией.			 
			 </IDXSKIP></span>
			  </div>
  <h2 style="width:150px;" id="header-image-title">title</h2></div></div>
          
          <img class="slide" id="slide-number-0" longdesc="" typeof="foaf:Image" src="http://reshebniki-online.ru/sites/default/files/banner/img-re.png" alt="" title="Реши домашку" /><img class="slide marinelli-hide-no-js" id="slide-number-1" longdesc="" typeof="foaf:Image" src="http://reshebniki-online.ru/sites/default/files/banner/sci_abstract-1.png" alt="" title="Рефераты" /><img class="slide marinelli-hide-no-js" id="slide-number-2" longdesc="" typeof="foaf:Image" src="http://reshebniki-online.ru/sites/default/files/banner/%20%D0%B8%D0%BC%D0%B5%D0%BD%D0%B8-2.png" alt="" title="Презентации" /><img class="slide marinelli-hide-no-js" id="slide-number-3" longdesc="" typeof="foaf:Image" src="http://reshebniki-online.ru/sites/default/files/banner/book.png" alt="" title="Книги" />
          
         <IDXSKIP><span id="sitemap" style="z-index:10;"><a href="/sitemap">Карта сайта</a></span></IDXSKIP>
      </div>  <!--end advertise-->

     

    
		

		


    <!-- start contentWrapper-->

    <div id="contentWrapper">

      <!--start breadcrumb -->

      
        <div id="breadcrumb"><div class="breadcrumb" itemscope itemtype="http://schema.org/BreadcrumbList"><IDXSKIP><span itemtype="http://schema.org/ListItem" itemscope itemprop="itemListElement"><a href='/' itemprop='item'><span itemprop='name'>Главная</span></a><meta content="1" itemprop="position"></span></IDXSKIP> <IDXSKIP>&raquo; <span itemtype="http://schema.org/ListItem" itemscope itemprop="itemListElement"><a href='/referat' itemprop='item'><span itemprop='name'>Список разделов рефератов</span></a><meta content="2" itemprop="position"></span></IDXSKIP> &raquo; <span itemtype="http://schema.org/ListItem" itemscope itemprop="itemListElement"><a href='/taxonomy/term/1194' itemprop='item'><span itemprop='name'>Рефераты по информатике</span></a><meta content="3" itemprop="position"></span> <IDXSKIP>&raquo; <span itemtype="http://schema.org/ListItem" itemscope itemprop="itemListElement"></IDXSKIP><span itemprop="name">Лекции по Программному обеспечению</span><meta content="4" itemprop="position"></span></div></div>

      
      <!-- end breadcrumb -->

		

			


      <!--start innercontent-->

			<div id="innerContent">



        <!--start main content-->

        
				<div id="siteContent" class="grid_12" >

					
                    

					
	   				

	   			
		           	

		      


          
            <h1 id="page-title">Лекции по Программному обеспечению</h1>

          

          
          


          


          


          


          <!--start drupal content-->

          <div id="content">

            <!-- start region -->
<div class="region region region-content">
  <div id="block-system-main" class="block block-system">
        <div class="content">
    
<center><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>

<!-- Гар-й -->

<ins class="adsbygoogle"

     style="display:inline-block;width:728px;height:90px"

     data-ad-client="ca-pub-5843187647206475"

     data-ad-slot="4435008477"></ins>

<script>

(adsbygoogle = window.adsbygoogle || []).push({});

</script></center>



<div id="node-202933" class="node node-abstract" about="/node/202933" typeof="sioc:Item foaf:Document"  style="width: 620px;">

  <div class="node-container">

    


    


    <div class="nodecontent">

      
      
      
      
      

      <div class="field field-name-field-abstract field-type-file field-label-hidden"><div class="field-items"><div class="field-item even"><table class="sticky-enabled">
 <thead><tr><th>Файл</th><th>Размер</th> </tr></thead>
<tbody>
 <tr class="odd"><td><span class="file"><img class="file-icon" alt="" title="application/octet-stream" src="/modules/file/icons/application-octet-stream.png" /> <a href="http://reshebniki-online.ru/sites/default/files/abstract/bestref-253657.zip" type="application/octet-stream; length=1044801">bestref-253657.zip</a></span></td><td>1020.31 KB</td> </tr>
</tbody>
</table>
</div></div></div><div class="field field-name-body field-type-text-with-summary field-label-hidden"><div class="field-items"><div class="field-item even" property="content:encoded"><p><b>Лекция № 12 Офисные пакеты. Текстовые редакторы. Текстовый процессор Microsoft Word</b></p> <p><b>Офисные пакеты.</b></p> <p> Основа любого офиса - это документ. Документы могут быть разными: простые тексты, готовые к печати сверстанные публикации, электронные таблицы и др. Подготовкой всех этих видов документов занимаются программы входящие в <b>офисные пакеты</b>.  </p> <p>Одним из важных качеств этих программ является интегрированность, возможность работы в связке.  </p> <p>Арсенал офисных пакетов в России не столь богат, как на Западе, где можно выбирать как минимум из четырех-пяти мощных офисных пакетов. Например, производства IBM/Lotus или Corel.  </p> <p>Среди офисных пакетов можно выделить следующие:  </p> <p><b>Microsoft Office</b> - лидер среди офисных пакетов. Русская версия Microsoft Office 2000 поставляется в четырех основных вариантах (стандартный выпуск, профессиональный выпуск, расширенный выпуск, выпуск "для малого бизнеса").  </p> <p><b>Microsoft Works</b>: мини-офис для дома. В отличие от Microsoft Office Works не состоит из отдельных компонентов, а представляет из себя единую, монолитную программу.  </p> <p><b>Русский офис</b>: российская альтернатива (Арсеналъ). В отличии от Microsoft Office этот комплект ориентирован на домашнее применение и включает ряд полезных и интересных программ, не имеющих аналогов среди продуктов Microsoft.  </p> <p><b>StarOffice: </b>бесплатный офис (Sun). При своем относительно малом объеме StarOffice включает в себя полный ассортимент продуктов для офисной работы и представляет собой единую интегрированную систему.  </p> <p>Около 80% времени работы всех компьютеров в мире уходит на работу с текстами.  </p> <p>Обычно текстовые редакторы входят в состав офисных пакетов, или ОС.  </p>  1.Назначение и классификация программ обработки текстов   <p> Среди наиболее распространенных программ выделяются программы обработки текстов. Они представляют собой приложения для создания, обработки, хранения и печати документов различной сложности. Функциональные возможности этих программ варьируются от простейших редакторов текстов, предназначенных для создания текстов простой структуры, до сложных издательских систем, позволяющих создавать документы для типографского издания. В зависимости от функциональных возможностей программные продукты обработки текстов принято делить на редакторы текстов, редакторы документов, издательские системы.  </p> <p> <b>Редакторы текстов</b> предназначены для обработки простых текстов, в том числе текстов программ, написанных на языках программирования. Они обычно не являются самостоятельными программными продуктами, а встраиваются в соответствующие системы программирования или операционные системы и их оболочки, например текстовый редактор Блокнот, встроенный в операционную систему Windows. К основным функциям этих редакторов относятся набор и редактирование текста, его просмотр и распечатка.  </p> <p> Достоинства программ редакторов текстов состоят в том, что они проверяют синтаксис программ, написанных на конкретном языке программирования, облегчая пользователю поиск ошибок в программе. Иногда они совмещают в себе и функции отладки. В эту группу входят редакторы для языков Бейсик, Паскаль, Си и др. Эти редакторы можно использовать не только при работе с текстами программ, но и для подготовки небольших, несложных документов. Для более сложных и объемных документов используются редакторы документов.  </p> <p> <b>Редакторы документов</b> предназначены для работы с текстом, имеющим структуру документа, т.е. состоящим из разделов, параграфов, абзацев, предложений, слов. Существует большой класс редакторов документов, например, Word Perfect, LaTex и др. Представителем данного класса является текстовый процессор Microsoft Word.  </p> <p> Для специалистов издательского дела важна подготовка текста в виде, близком к типографскому. Программные средства, которые служат для окончательной верстки документа, т.е. размещения текста на странице, вставки рисунков, использования различных шрифтов, получили название <b>издательских систем</b>. Примером такой системы может служить настольная издательская система Page Marker. С помощью издательских систем можно выполнять рисунки, таблицы; макетировать текст, т.е. компоновать текст и рисунки на странице. Эти системы используются в крупных издательствах, типографиях, значительно сокращая затраты и сроки выхода печатной продукции. Программное обеспечение издательских систем состоит из мощного редактора документов, разнообразных графических вспомогательных программ, а также программ для оформления страниц с версткой полос. Более подробно текстовые процессоры рассмотрим на примере Microsoft Word.</p>  2.Функциональные возможности текстового процессора Microsoft Word   <p> Широкий спектр функциональных возможностей обеспечил текстовому процессору Microsoft Word высокую популярность среди пользователей. По своим характеристикам он приближается к настольным издательским системам.  </p> <p> В процессе подготовки документа в распоряжении пользователя имеется набор средств и процедур организации работы по вводу, редактированию и форматированию текста и встроенных объектов. К основным функциональным возможностям по работе с документом можно отнести: использование шрифтов различных размеров и начертаний символов и различных способов их выделения; установку параметров абзаца; задание междустрочных интервалов; проверку правописания и подбор синонимов; автоматическую нумерацию страниц; автоматический перенос слов на новую строку; поиск и замену слов; печать верхних и нижних заголовков страниц (колонтитулов); установку сносок; построение оглавлений, указателей; набор текста в несколько колонок; создание таблиц, рисунков и построение диаграмм; просмотр документов перед печатью; установку размеров бумажного носителя и параметров печати; отмену и повторение предыдущих действий пользователя; вставки полей с информацией стандартного типа (дата, время, авторские данные и т.д.); создание макрокоманд и гипертекстовых ссылок; включение в документ различных объектов (файлов, формул и др.); импорт документов, созданных в других приложениях и т.д.  </p> <p> Текстовый процессор предлагает также широкий выбор средств придания документу привлекательного внешнего вида: автоформатирование, применение стилей, библиотеки стилей и шаблонов документов. При помощи шаблонов можно автоматизировать процесс подготовки стандартных документов, таких как факсимильные сообщения, стандартная деловая переписка и документация. Предоставляется возможность работы со структурой документа, процедурой слияния, подготовки документов-форм.  </p> <p> Рассмотрим некоторые функциональные возможности текстового процессора Microsoft Word более подробно.  </p> <p> <b>Проверка орфографии</b>. В систему проверки орфографии включено множество новых слов, это, прежде всего, имена и фамилии.  </p> <p> <b>Выбор нужного шрифта</b>. Название шрифтов в списке воспроизводится самим этим шрифтом, что позволяет быстро найти подходящую гарнитуру.  </p> <p> <b>Множественный буфер обмена</b>. Достоинством офисного пакета Office  является наличие множественного буфера обмена, позволяющего размещать до 24 фрагментов данных.  </p> <p> <b>Темы оформления</b> предназначены для автоматизированного оформления Web-страниц, предлагают фоновые рисунки, а также определяют шрифт, кегль, формат и цвет текста. Все темы доступны в приложении FrontPage, предназначенного для создания Web-страниц, и могут редактироваться с его помощью. Аналогичные темы доступны в других приложениях Office, что позволяет разрабатывать документы в едином стиле.  </p> <p> <b>Средства для создания </b><b>Web</b><b>-страниц</b>. Мастер по созданию Web-страниц позволяет использовать общие темы оформления и средства навигации между страницами. Наличие шаблонов помогает строить профессиональные Web-страницы.  </p> <p> <b>Интеграция с электронной почтой</b>. Текстовый процессор Word предлагает возможности работы с электронной почтой. При использовании Word как редактора сообщений электронной почты пользователи получают возможности по использованию бланков, автоподписи почтовых сообщений и др.</p>  3.Интерфейс приложения Microsoft Word   <p> После загрузки Microsoft Word на экране появляется окно со стандартной для приложений Microsoft Windows структурой.</p>
<br><br><p> <b>Лекция № 11 Средства коммуникации</b></p>  1.Коммутационные программы <p> <b>Средства коммуникации (коммутационные программы).</b> С появлением электронной связи и компьютерных сетей программы этого класса приобрели очень большое значение. Они позволяют устанавливать соединения с удалёнными компьютерами, обслуживают передачу сообщения электронной почты, работу с телеконференциями (группами новостей), обеспечивают пересылку факсимильных сообщений и выполняют множество других операций в компьютерных сетях.</p>  2.Классификация компьютерных сетей <p> <b>Компьютерной сетью (КС),</b> или сетью ЭВМ, называется комплекс территориально рассредоточенных ЭВМ, связанных между собой каналами передачи данных и сетевым программным обеспечением для предоставления совместного доступа к общему ресурсу сети потенциальному пользователю сети и обмена информацией.  </p> <p> <b>По территориальном у признаку КС делятся: </b> </p>      <p>   <b>на локальные</b>   (Local   Area   Network,   LAN)   — сети, организованные   в пределах   существенно   ограниченной   территории   (комната, этаж,   здание, соседние   здания). Размер   локальной   сети не превышает   нескольких   километров;      </p>   <p>   <b>региональные   </b>(Metropolian   Area   Network,   MAN)   — сети, расположенные   на обширном   участке местности.   Региональная   сеть может   соединять   компьютеры   внутри города,   экономической   зоны или отдельно   взятой страны;      </p>   <p>   <b>глобальные</b>   (Wide   Area   Network,   WAN)   — сети, которые   простираются   на расстояния   от десятков   до десятков   тысяч километров   и могут объединять   сотни локальных.   Среди глобальных   КС наиболее   популярной   является сеть   Интернет.    </p>    <p> <b>Указанные выше сети различаются: </b> </p> <p> • <b>методами передачи данных</b>. В локальных сетях, как правило, используются методы, не требующие предварительной установки соединения — данные просто передаются в канал связи без подтверждения готовности их принять. Глобальные сети ориентированы на подтверждение соединения, т.е. еще до начала передачи данных между компьютерами сети устанавливается соединение, которое подтверждается специальными сигналами (кодами);  </p> <p> • <b>скоростью передачи данных</b>. Скорость передачи данных в локальных сетях значительно выше (10, 16 и 100 Мбит/с), чем в глобальных (от 2,4 Кбит/с до 2 Мбит/с);  </p> <p> • <b>разнообразием услуг</b>. В локальных сетях существует широкий набор услуг, таких как файловые службы, услуги печати, услуги баз данных и т.д. Глобальные сети предоставляют в основном услуги, связанные с почтой и обменом файлами;  </p> <p> • <b>масштабируемостью</b> (возможностью расширения при сохранении качества). Локальные сети обладают плохой масштабируемостью. Глобальным сетям присуща хорошая масштабируемость, так как они изначально разрабатывались для сколь угодно большого числа пользователей.  </p> <p> В последнее время очень популярны <b>корпоративные компьютерные сети</b>, которые могут содержать различные сочетания вышеперечисленных признаков и представляют собой сложный комплекс технических, системных и программных средств, функционирующих в рамках отдельных предприятий или корпораций. Территориальный признак в них не имеет никакого значения.  </p> <p> <b>Основные направления использования КС следующие</b>:  </p> <p> • совместный доступ к аппаратным, программным и информационным ресурсам (использование дисков или только определенных папок и файлов других компьютеров, принтеров, программного обеспечения, баз и банков данных);  </p> <p> • предоставление коммуникационных услуг (службы информации, электронной почты, телеконференции и т.д.);</p> <p> • распределенная обработка данных. КС можно использовать для обработки данных на отдельных компьютерах, связанных между собой и представляющих распределенную систему.  </p>  3.Основные компоненты локальных компьютерных сетей   <p> Для организации локальной КС необходимо наличие аппаратного и программного компонентов. Аппаратный компонент КС составляют:  </p> <p> <b>1. Компьютеры.</b> В состав сети могут быть включены различные компьютеры. Их технические характеристики во многом определяют потенциальные возможности образованной с их помощью сети. Совместное использование вычислительных ресурсов КС привело к функциональному разделению компьютеров в сети на компьютеры, предоставляющие ресурсы (серверы), и компьютеры, потребляющие ресурсы (рабочие станции — клиенты).  </p> <p> <b>Сервер сети</b> – это компьютер, подключенный к сети и предоставляющий пользователям сети набор некоторых услуг по использованию и распределению ресурсов сети, например, одновременный доступ пользователей к общим данным, печать заданий, прием и обработка запросов к базам данных и т.д. Сервером также называют программное обеспечение, хранящее соответствующую своему ресурсу информацию и отвечающее на запросы клиентского программного обеспечения.  </p> <p> Примерами серверов могут служить:  </p> <p> • сервер баз данных (SQL-сервер), принимающий запросы по локальной сети и возвращающий результаты;  </p> <p> • сервер телекоммуникаций, обеспечивающий услуги по связи данной локальной сети с внешним миром;  </p> <p> • вычислительный сервер, дающий возможность производить вычисления, которые невозможно выполнить на рабочих станциях;  </p> <p> •  Web-сервер, на котором размещаются HTML-страницы;  </p> <p> •  mail-сервер, почтовый сервер организации;  </p> <p> • файловый сервер, поддерживающий общее хранилище файлов для всех рабочих станций.  </p> <p> <b>Рабочая станция</b> – это подключенный к сети ПК, на котором пользователь непосредственно выполняет работу, использует свою операционную систему и имеет доступ к аппаратным, программным и информационным ресурсам сети. Рабочие станции могут отличаться объемом оперативной памяти, наличием и объемом внутренней дисковой памяти, характеристиками процессора и монитора. Так как рабочие станции в сети выступают клиентами, то клиентом называется и программа, устанавливаемая на компьютере пользователя для составления и посылки запросов соответствующему серверу, получения и отображения информации на компьютере пользователя. Серверы предоставляют материалы, а клиенты пользуются ими. В общем случае клиентом может быть и пользователь.  </p> <p> <b>2. Линии связи или каналы передачи данных.</b> При построении локальных КС в качестве линий связи используются различные типы физических сред передачи данных:  </p> <p> • <b>проводные</b>, построенные на основе кабеля с электрическим сигналом передачи данных — коаксиального (жесткий медный проводник, отделенный от оплетки толстым слоем изоляционного материала), витой пары (скрученная пара проводников, заключенная в оболочку); с оптическим сигналом передачи данных — <b>волоконно-оптического</b> (состоит из тонких волокон, по которым распространяются световые сигналы);  </p> <p> • <b>беспроводные</b> (с радиосигналом, микроволновым или инфракрасным сигналом передачи данных) — каналы наземной и спутниковой связи.</p> <p> Выбор той или иной линии связи определяется требуемой скоростью передачи данных, а так же расстояниями между отдельными узлами сети.  </p> <p> Физически компьютеры могут объединяться в сеть разными способами. Структура физического соединения компьютеров в сеть называется топологией. Правильный выбор топологии сети является очень важным этапом, так как топология – это физически реализованная основа сети, ее непросто изменить после того, как сеть уже создана. Каждая КС обладает своей уникальной топологией, однако в ней всегда можно выделить базовые: общая шина (компьютеры подключаются к одному общему кабелю (шине), по которому происходит обмен информацией), кольцо (сеть не имеет конечного пункта соединения, данные передаются от компьютера к компьютеру по кольцу в одном направлении) и звезда (каждый компьютер отдельным кабелем подключается к концентратору, находящемуся в центре сети).  </p> <p> Как правило, локальные сети ориентированы на передачу алфавитно-цифровой, текстовой, графической, мультимедийной информации. Совмещение в одной сети потоков разных видов информации является одним из основных требований, предъявляемых к локальным КС.  </p> <p> <b>3. Коммутационное оборудование</b>. Протяженность сети, расстояние между рабочими станциями, в первую очередь, определяются физическими характеристиками передающей среды. При передаче данных в любой среде происходит затухание сигнала. Кроме того, в локальных сетях могут наступать коллизии (передача несколькими компьютерами данных по одной и той же линии связи), что приводит к неработоспособности сети. Чтобы преодолеть эти и другие ограничения для связи сегментов сети<a class="sdfootnoteanc" name="sdfootnote1anc" href="#sdfootnote1sym">1</a> используется специальное коммутационное оборудование: концентраторы, повторители, коммутаторы, маршрутизаторы, шлюзы. Коммутационное оборудование в последнее время играет все большую роль при создании КС. Перечисленное оборудование рассматривается здесь с точки зрения выполнения базовых функций. В настоящее время наблюдается тенденция к универсализации коммутационного оборудования при сохранении базовых названий.  </p> <p> <b>Концентратор</b>, или хаб (HUB) — устройство для объединения нескольких физических сегментов сетей, обычно с возможностью соединения сетей различных архитектур. Недостатком концентраторов является их невозможность предотвратить коллизии при больших размерах сегмента.  </p> <p> <b>Повторитель</b> — устройство для соединения сегментов одной сети, обеспечивающее промежуточное усиление сигнала и уменьшение шума (помех) сигналов. Позволяет расширять сеть по расстоянию и количеству подключенных узлов.  </p> <p> <b>Коммутаторы</b> используются для логической структуризации сетей с целью предотвращения коллизий, а значит, и повышения пропускной способности сети.</p> <p> <b>Маршрутизатор</b> — средство для обеспечения связи между отдельными сетями с помощью сетевых (IP) адресов. В общем случае маршрутизатор может представлять собой как специальное устройство, так и универсальный компьютер. В настоящее время наблюдается тенденция вытеснения маршрутизаторов и замена их высокопроизводительными коммутаторами, совмещающими в себе как функции коммутации, так и маршрутизации.  </p> <p> <b>Шлюз</b> – специальный программно-аппаратный комплекс, предназначенный для обеспечения совместимости между неоднородными сетями<a class="sdfootnoteanc" name="sdfootnote2anc" href="#sdfootnote2sym">2</a>.  </p> <p> Для передачи данных между двумя компьютерами необходимо организовать физическую связь. В локальных сетях традиционно используется некоммутируемая линия связи (линия связи соединяет два компьютера постоянно) и для физического подключения компьютера в сеть применяется специальное устройство — сетевой адаптер (сетевая карта), устанавливаемый обычно в компьютере и соединяющий его с линией связи. Для функционирования сетевых адаптеров необходимы специальные программы — драйверы.  </p> <p> Для соединения по коммутируемой линии (связь между компьютерами устанавливается только на время сеанса обмена данным между ними) используется модем (модулятор/демодулятор) — устройство, которое позволяет передавать (принимать) информацию по телефонной линии между удаленными компьютерами. Передающий модем преобразует цифровые данные в аналоговые сигналы, которые могут передаваться по телефонной линии. Принимающий модем переводит аналоговые сигналы обратно в цифровую форму.  </p> <p> 4. <b>К соединительному оборудованию относятся</b>: коннекторы — разъемные и/или неразъемные соединители, прикрепляемые к кабелям, различные кабельные адаптеры и разветвлители — для стыковки разных типов кабелей, усилители и другие устройства. Соединительное оборудование обеспечивает возможность подключения различных сетевых устройств к линиям связи.  </p>  4.Программный компонент КС определяют:  <p> <b>1. Сетевая операционная система ОС</b> — связывает все компьютеры и периферийные устройства, координирует функции всех компьютеров и периферийных устройств, обеспечивает защищенный доступ к данным и периферийным устройствам в сети, предоставляет собственные ресурсы и определенные услуги в общее пользование.  </p> <p> В зависимости от распределения функций (клиент/сервер) между компьютерами локальные сети делят на одноранговые и сети с выделенным сервером. В одноранговых локальных сетях каждый компьютер может выполнять как функции клиента, так и функции сервера. Одноранговые сети, как правило, строятся для небольшого количества компьютеров, иначе возникают проблемы по управлению работой сети и обеспечению защиты информации. Пользователю такой сети при соответствующих настройках могут быть доступны все ресурсы других компьютеров: жесткий диск, принтер, сканер и т.д. В одноранговых сетях на каждом компьютере устанавливается ОС, поддерживающая работу сети. Однако возможности такого сервера ограничены.  </p> <p> При построении сложных сетей, как правило, один или два компьютера выделяют для выполнения сетевых функций (сети с выделенным сервером). К таким серверам предъявляются более высокие требования по их техническому обеспечению, производительности, объему памяти, надежности защиты информации. В сетях с выделенным сервером устанавливают серверную ОС, обладающую значительными сетевыми возможностями. К преимуществам серверных ОС можно отнести обеспечение высокой производительности, наличие развитых средств управления и администрирования. На серверах ведутся учетные записи пользователей сети, которые содержат информацию обо всех пользователях локальной сети, подключенных к данному серверу и их правах доступа к ресурсам сети, имена компьютеров, рабочих групп и т.д. При этом на рабочих станциях устанавливают те же ОС, что и в одноранговых сетях.  </p> <p> <b>2. Сетевые программные приложения</b> – прикладные программы, которые расширяют возможности сетевых ОС. Среди них можно выделить сервер баз данных, сервер сети Интернет, сервер информационного обмена и т.д.</p>   <p><a class="sdfootnotesym" name="sdfootnote1sym" href="#sdfootnote1anc">1</a>  Сегментом сети  называется  обособленная  (физически или  логически)  группа компьютеров.</p>    <p>  <a class="sdfootnotesym" name="sdfootnote2sym" href="#sdfootnote2anc">2</a>  Неоднородные  сети используют  различную  аппаратно-программную  платформу.</p>
<br><br><br><p> <b>Лекция № 10 Антивирусные программы.</b></p>  1.Средства обеспечения компьютерной безопасности <p> К этой весьма широкой категории относятся средства пассивной и активной защиты данных от повреждения, а также средства защиты от несанкционированного доступа, просмотра и изменения данных.</p> <p> В качестве средств пассивной защиты используются служебные программы, предназначенные для резервного копирования. Нередко они обладают и базовыми свойствами диспетчеров архивов (архиваторов). В качестве средств активной защиты применяют антивирусное программное обеспечение. Для защиты данных от несанкционированного доступа, их просмотра и имения служат специальные системы, основанные на криптографии.</p>  2.Классификация вирусов   <p> <b>Компьютерный вирус</b> – это небольшая по размерам программа, ориентированная на существование и размножение в файле за счет его несанкционированного изменения, т.е. заражения, а также выполнения нежелательных действий на компьютере. Признаками заражения являются: невозможность загрузки операционной системы; некоторые программы перестают работать или начинают работать неправильно; на экран выводятся посторонние символы, сообщения; работа на компьютере существенно замедляется; некоторые файлы оказываются испорченными или исчезают; изменяются размер файлов, дата и время их модификации; увеличивается количество файлов на диске и т.д.  </p> <p> Основными источниками заражения являются электронная почта, сеть Интернет, локальная сеть, съемные диски (дискеты и CD-ROM). He следует запускать на исполнение файлы, полученные из сомнительного источника и предварительно не проверенные антивирусными программами, устанавливать общий доступ к папкам и файлам компьютера, работающего в сети.  </p> <p> Главные направления профилактики заражения вирусами:  </p> <p> 1) периодическая проверка на наличие вирусов с использованием свежих версий антивирусных программ;  </p> <p> 2) проверка поступающих извне данных;  </p> <p> 3) копирование информации и жесткое разграничение доступа.  </p> <p> В жизненном цикле вируса различают следующие стадии:  </p> <p> 1. <b>Инкубационный период</b> — отсутствие проявлений его присутствия с целью сокрытия момента и источника заражения.  </p> <p> 2. <b>Активное размножение</b> — заражаются все доступные файлы на компьютере и в сети.  </p> <p> 3. <b>Проявление</b> — выполняются заложенные в вирусе разрушительные функции. Объектами вирусной атаки являются загрузчик ОС, главная загрузочная запись диска, драйверы устройств, программы и документы.  </p> <p> По "среде обитания" вирусы делятся на файловые, системные, загрузочные, файлово-загрузочные и сетевые.  </p> <p> Файловые вирусы в основном заражают исполняемые файлы с расширением имени .com и .ехе; системные вирусы — модули операционной системы, драйверы устройств, таблицы размещения файлов и таблицы разделов; загрузочные внедряются в сектор начальной загрузки. Многофункциональные вирусы — файлово-загрузочные – повреждают загрузочные секторы дисков и файлы.  </p> <p> Средой обитания сетевых вирусов являются компьютерные сети. В настоящее время это наиболее распространенный тип вирусов, которые передаются чаще всего в виде присоединенных файлов почтовых сообщений.  </p> <p> По степени воздействия вирусы делятся на безвредные, неопасные, опасные и разрушительные.  </p> <p> На проявление и функционирование вируса большое влияние оказывает особенность алгоритма, реализованного в программе-вирусе. Например, так называемые вирусы-репликаторы очень быстро размножаются и заполняют оперативную память своими копиями, причем обычно копия не полностью соответствует оригиналу, что затрудняет нахождение и уничтожение вируса. Аналогично действуют вирусы-черви, которые обитают в компьютерных сетях и рассылают свои копии по компьютерам сети. При уничтожении вируса на каком-либо компьютере происходит его повторное заражение.  </p> <p> Некоторые вирусы маскируются под полезные программы, но дополнительно выполняют разрушительные действия (например, сбор конфиденциальной информации – паролей, имен) вплоть до уничтожения системы. Такие вирусы называют "<b>троянскими конями</b>".  </p> <p> Программы-вирусы могут встраиваться в программные комплексы. Обычно они бездействуют до наступления определенного события, после чего реализуются заложенные в них функции. Такие вирусы называют логическими бомбами.  </p> <p> <b>Вирусы-невидимки (стелс-вирусы)</b> очень трудно обнаружить и обезвредить, так как они перехватывают обращения операционной системы к пораженным файлам и секторам дисков и подставляют вместо своего тела незараженные объекты.  </p> <p> Очень распространены в настоящее время так называемые <b>макровирусы</b>, которые используют возможности макроязыков, встроенных в офисные пакеты.  </p> <p> По способу заражения среды обитания вирусы делятся на резидентные и нерезидентные.  </p> <p> Первые характеризуются тем, что вирус постоянно размещается в оперативной памяти, перехватывает обращения ОС к другим объектам и заражает их. Вторые активны ограниченное время и память не заражают.  </p> <p> Широкое распространение компьютерных вирусов, вирусные атаки в глобальной сети Интернет привели к развитию такого направления в разработке программного обеспечения, как создание антивирусных программ.  </p>  3.Классификация антивирусных программ   <p> <b>Антивирусные программы</b> предназначены для предотвращения заражения и ликвидации последствий заражения вирусом. Они контролируют обращения к жесткому диску и предупреждают пользователя о подозрительной активности, а также обеспечивают надежную защиту почтовых сообщений от вирусов.  </p> <p> По выполняемым функциям антивирусные программы делят на следующие типы: детекторы; доктора; ревизоры; фильтры (сторожа); вакцины (иммунизаторы).  </p> <p> <b>Программы-ревизоры</b> запоминают исходное состояние программ, каталогов и системных областей до заражения компьютера и периодически его сравнивают с текущим состоянием. При обнаружении несоответствия пользователю выдается предупреждение.  </p> <p> <b>Программы-детекторы</b> представляют собой резидентные программы, которые обеспечивают обнаружение подозрительных действий при работе компьютера, например, попыток изменения исполняемых файлов, изменения атрибутов файлов, записи в загрузочный сектор диска и др.  </p> <p> Программы-детекторы настроены на обнаружение заражения одним или несколькими известными вирусами. Большинство программ-детекторов выполняют также функцию "доктора", т.е. они пытаются вернуть зараженные файлы и области диска в исходное состояние; те файлы, которые не удалось восстановить, обычно становятся неработоспособными и удаляются.  </p> <p> <b>Программы-доктора</b> обнаруживают и лечат зараженные объекты путем "выкусывания" тела вируса. Программы этого типа делятся на фаги и полифаги (обнаружение и уничтожение большого количества разнообразных вирусов).  </p> <p> <b>Программы-вакцины</b> выполняют модификацию файла или диска таким образом, чтобы это не отражалось на их работе, но вирус считал бы их уже зараженными. Вакцинация осуществляется только от известных вирусов.  </p>  4.Антивирусные программы <p> <b>Программа-полифаг </b><b>Doctor</b><b>Web</b> (разработчик – И. Данилов) выполняет поиск и удаление известных ему вирусов из памяти и с дисков компьютера. Наличие интеллектуального эвристического анализатора позволяет обнаружить новые, ранее неизвестные вирусы и модификации известных. Антивирус Dr.Web проверяет почту, приходящую по протоколу РОРЗ, до обработки ее почтовым клиентом, а также проверяет почту, исходящую по протоколу SMTP. Антивирусный сторож (монитор), работая автоматически, проверяет файлы "на лету" при обращении к ним из какой-либо программы, оповещает пользователя при обнаружении инфицированных и подозрительных файлов. В программе используется интеллектуальная технология контроля вирусной активности, заключающаяся в анализе действий, которые совершают программы. Анализ построен таким образом, что практически полностью исключает "ложную тревогу" и вместе с тем позволяет пресечь любые действия, которые может совершить вредоносная программа. Антивирусный сканер позволяет обнаруживать зараженные объекты на всех носителях и в оперативной памяти компьютера, а также обезвреживать вирусы.</p> <p> Немедленно после запуска программа при настройках по умолчанию проводит антивирусное сканирование оперативной памяти и файлов автозапуска Windows.</p> <p> Проверка остальных объектов файловой системы производится по вашему запросу. Выберите один из следующих режимов антивирусного сканирования:</p> <p> <b>Быстрая проверка</b></p> <p> В данном режиме производится сканирование следующих объектов:</p>   <p>оперативная  память</p>  <p>загрузочные  секторы всех  дисков</p>  <p>объекты  автозапуска</p>  <p>корневой  каталог загрузочного  диска</p>  <p>корневой  каталог диска  установки  Windows</p>  <p>системный  каталог Windows</p>  <p>папка  Мои Документы</p>  <p>временный  каталог системы</p>  <p>временный  каталог пользователя</p>  <p> <b>Полная проверка</b></p> <p>В данном режиме производится полное сканирование всех жестких дисков и сменных носителей (включая загрузочные секторы).</p> <p> <b>Выборочно</b></p> <p> Данный режим предоставляет возможность выбрать любые папки и файлы для последующего сканирования.</p> <p>Наряду с выбранными объектами будут проверены загрузочные секторы всех дисков.</p> <p> <b>AVP</b> (Antivirus Protect, разработчик – Лаборатория Касперского) позволяет лечить и проверять упакованные и архивные файлы, сетевые диски. Благодаря уникальной технологии сканирования, она обнаруживает и удаляет вирусы в архивированных и сжатых файлах более чем 700 различных форматов. Кроме того, в архивах формата ZIP Антивирус Касперского способен удалять из зараженного сжатого файла вредоносные коды и лечить файлы. Интегрированный модуль Office Guard™ создает максимально защищенное пространство для приложений Microsoft Office. Благодаря этому, Антивирус Касперского Personal Pro обеспечивает полный контроль над всеми офисными документами и гарантирует стопроцентную защиту даже от неизвестных макровирусов.  </p> <p> <b>Norton</b><b>Antivirus</b> автоматически защищает от вирусов, злонамеренных программ ActiveX, апплетов Java при пользовании сетью и работе с дискетами, CD, проверяет входящие приложения в самых распространенных программах электронной почты, обнаруживает вирусы и лечит сжатые файлы. Беспрепятственно пропускает незараженные файлы, но задерживает файлы с вирусами еще до того, как они могут войти в вашу систему и нанести ей вред. Norton Antivirus 2003 автоматически удаляет опасные программные коды, а также защищает от вирусов вложения в сообщениях и электронных письмах, гарантирует максимальный уровень безопасности благодаря возможности постоянного автоматического обновления антивирусных баз и созданию всесторонней защиты пользователей от проникновения опасных программных кодов. Уникальная эвристическая технология способна выявлять почтовых "червей", подобных Nimda и Badtrans, и останавливать их еще до того, как они начнут распространяться с исходящей почтой.  </p> <p> Профессиональная версия (Pro) помимо всех функциональных возможностей стандартного выпуска включает еще средства восстановления данных и очистки системы, предусмотренные специально для профессионалов в области информационных технологий и предприятий малого бизнеса. Эти инструменты позволяют пользователям защищать и восстанавливать критически важные файлы, а также сохранять должный уровень конфиденциальности путем фрагментирования ненужных более файлов.  </p> <p> <b>Panda</b><b>Titanium</b><b>Antivirus</b>(разработчик – Panda Software) – антивирусная программа последнего поколения с улучшенной технологией обнаружения и удаления вирусов любого типа, обеспечивает защиту от любой программы, документа или электронного письма, которые могут нанести вред системе компьютера. Благодаря эффективным эвристическим технологиям, программное обеспечение Panda особенно эффективно в борьбе с новыми неизвестными вирусами, которые могут появиться в будущем, автоматически обнаруживает и удаляет все типы вирусов во время получения/отправки электронной почты, загрузки файлов или работы в сети Интернет, защищает от "дозвонщиков" — программ, которые незаметно подключают модем к платным номерам, утилит скрытого управления, опасных скрытых файлов, программ с опасными скрытыми файлами и других угроз безопасности. Программа выявляет и уничтожает ошибки в программном обеспечении, установленном на компьютере, и проводить самодиагностику, чтобы гарантировать бесперебойную и продуктивную работу антивируса.</p>  5.Теоретические основы сжатия данных <p> Характерной особенностью большинства типов данных является их избыточность. Степень избыточности данных зависит от типа данных. Например, для видеоданных степень избыточности в несколько раз больше чем для графических данных, а степень избыточности графических данных, в свою очередь, больше чем степень избыточности текстовых данных. Другим фактором, влияющим на степень избыточности является принятая система кодирования. Примером систем кодирования могут быть обычные языки общения, которые являются ни чем другим, как системами кодирования понятий и идей для высказывания мыслей. Так, установлено, что кодирование текстовых данных с помощью средств русского языка дает в среднем избыточность на 20-25% большую чем кодирование аналогичных данных средствами английского языка.</p> <p> Для человека избыточность данных часто связана с качеством информации, поскольку избыточность, как правило, улучшает понятность и восприятие информации. Однако, когда речь идет о хранении и передаче информации средствами компьютерной техники, то избыточность играет отрицательную роль, поскольку она приводит к возрастанию стоимости хранения и передачи информации. Особенно актуальной эта проблема стает в случае обработки огромных объемов информации при незначительных объемах носителей данных. В связи с этим, постоянно возникает проблема уменьшения избыточности или сжатия данных. Если методы сжатия данных применяются к готовым файлам, то часто вместо термина "сжатие данных" употребляют термин "архивация данных", сжатый вариант данных называют <b>архивом</b>, а программные средства, которые реализуют методы сжатия называются <b>архиваторами</b><IDXSKIP>.</IDXSKIP></p> <p> В зависимости от того, в каком объекте размещены данные, подлежащие сжатию различают:</p>   <p><b>Сжатие  (архивация)  файлов</b>:  используется  для уменьшения  размеров файлов  при подготовке  их к передаче  каналами связи  или к транспортированию  на внешних  носителях  маленькой  емкости;   </p>  <p><b>Сжатие  (архивация)  папок</b>:  используется  как средство  уменьшения  объема папок  перед долгим  хранением,  например, при  резервном  копировании;    </p>  <p><b>Сжатие  (уплотнение)  дисков</b>:  используется  для повышения  эффективности  использования  дискового  просторную  путем сжатия  данных при  записи их на  носителе информации  (как правило,  средствами  операционной  системы).   </p>  <p> Существует много практических алгоритмов сжатия данных, но все они базируются на трех теоретических способах уменьшения избыточности данных. Первый способ состоит в изменении содержимого данных, второй - в изменении структуры данных, а третий - в одновременном изменении как структуры, так и содержимого данных.  </p> <p> Если при сжатии данных происходит изменение их содержимого, то метод сжатия называется <b>необратимым</b>, то есть при восстановлении (разархивировании) данных из архива не происходит полное восстановление информации. Такие методы часто называются методами сжатия с регулированными потерями информации. Понятно, что эти методы можно применять только для таких типов данных, для которых потеря части содержимого не приводит к существенному искажению информации. К таким типам данных относятся видео- и аудиоданные, а также графические данные. Методы сжатия с регулированными потерями информации обеспечивают значительно большую степень сжатия, но их нельзя применять к текстовым данным. Примерами форматов сжатия с потерями информации могут быть:  </p>   <p>JPEG  –  для графических  данных;   </p>  <p>MPG  –  для видеоданных;    </p>  <p>MP3  –  для аудиоданных.    </p>  <p> Если при сжатии данных происходит только изменение структуры данных, то метод сжатия называется <b>обратимым</b>. В этом случае, из архива можно восстановить информацию полностью. Обратимые методы сжатия можно применять к любым типам данных, но они дают меньшую степень сжатия по сравнению с необратимыми методами сжатия. Примеры форматов сжатия без потери информации:  </p>   <p>GIF,  TIFF – для графических  данных;   </p>  <p>AVI  –  для видеоданных;    </p>  <p>ZIP,  ARJ, RAR, CAB, LH – для произвольных  типов данных.    </p>  <p> Существует много разных практических методов сжатия без потери информации, которые, как правило, имеют разную эффективность для разных типов данных и разных объемов. Однако, в основе этих методов лежат три теоретических алгоритма:</p>   <p>алгоритм  RLE (Run Length Encoding);</p>  <p>алгоритмы  группы  KWE(KeyWord Encoding);</p>  <p>алгоритм  Хаффмана.   </p>  <p> <b>Алгоритм RLE </b> </p> <p> В основе алгоритма RLE лежит идея выявления повторяющихся последовательностей данных и замены их более простой структурой, в которой указывается код данных и коэффициент повторения. Например, пусть задана такая последовательность данных, что подлежит сжатию:  </p> <p> 1 1 1 1 2 2 3 4 4 4</p> <p> В алгоритме RLE предлагается заменить ее следующей структурой: 1 4 2 2 3 1 4 3, где первое число каждой пары чисел - это код данных, а второе - коэффициент повторения. Если для хранения каждого элемента данных входной последовательности отводится 1 байт, то вся последовательность будет занимать 10 байт памяти, тогда как выходная последовательность (сжатый вариант) будет занимать 8 байт памяти. Коэффициент сжатия, характеризующий степень сжатия, можно вычислить по формуле:</p> <p> </p> <p> где Vx – объем памяти, необходимый для хранения выходной (результирующей) последовательности данных, Vn – входной последовательности данных.  </p> <p> Чем меньше значение коэффициента сжатия, тем эффективней метод сжатия. Понятно, что алгоритм RLE будет давать лучший эффект сжатия при большей длине повторяющейся последовательности данных. В случае рассмотренного выше примера, если входная последовательность будет иметь такой вид: 1 1 1 1 1 1 3 4 4 4, то коэффициент сжатия будет равен 60%. В связи с этим большая эффективность алгоритма RLE достигается при сжатии графических данных (в особенности для однотонных изображений).</p> <p> <b>Алгоритмы группы KWE </b> </p> <p> В основе алгоритма сжатия по ключевым словам положен принцип кодирования лексических единиц группами байт фиксированной длины. Примером лексической единицы может быть обычное слово. На практике, на роль лексических единиц выбираются повторяющиеся последовательности символов, которые кодируются цепочкой символов (кодом) меньшей длины. Результат кодирования помещается в таблице, образовывая так называемый словарь.  </p> <p> Существует довольно много реализаций этого алгоритма, среди которых наиболее распространенными являются алгоритм Лемпеля-Зіва (алгоритм LZ) и его модификация алгоритм Лемпеля-Зіва-Велча (алгоритм LZW). Словарем в данном алгоритме является потенциально бесконечный список фраз. Алгоритм начинает работу с почти пустым словарем, который содержит только одну закодированную строку, так называемая NULL-строка. При считывании очередного символа входной последовательности данных, он прибавляется к текущей строке. Процесс продолжается до тех пор, пока текущая строка соответствует какой-нибудь фразе из словаря. Но рано или поздно текущая строка перестает соответствовать какой-нибудь фразе словаря. В момент, когда текущая строка представляет собой последнее совпадение со словарем плюс только что прочитанный символ сообщения, кодер выдает код, который состоит из индекса совпадения и следующего за ним символа, который нарушил совпадение строк. Новая фраза, состоящая из индекса совпадения и следующего за ним символа, прибавляется в словарь. В следующий раз, если эта фраза появится в сообщении, она может быть использована для построения более длинной фразы, что повышает меру сжатия информации.  </p> <p> Алгоритм LZW построен вокруг таблицы фраз (словаря), которая заменяет строки символов сжимаемого сообщения в коды фиксированной длины. Таблица имеет так называемое свойством опережения, то есть для каждой фразы словаря, состоящей из некоторой фразы w и символа К, фраза w тоже заносится в словарь. Если все части словаря полностью заполнены, кодирование перестает быть адаптивным (кодирование происходит исходя из уже существующих в словаре фраз).  </p> <p> Алгоритмы сжатия этой группы наиболее эффективны для текстовых данных больших объемов и малоэффективны для файлов маленьких размеров (за счет необходимости сохранение словаря).</p> <p> <b>Алгоритм Хаффмана </b> </p> <p> В основе алгоритма Хаффмана лежит идея кодирования битовыми группами. Сначала проводится частотный анализ входной последовательности данных, то есть устанавливается частота вхождения каждого символа, встречающегося в ней. После этого, символы сортируются по уменьшению частоты вхождения.  </p> <p> Основная идея состоит в следующем: чем чаще встречается символ, тем меньшим количеством бит он кодируется. Результат кодирования заносится в словарь, необходимый для декодирования. Рассмотрим простой пример, иллюстрирующий работу алгоритма Хаффмана.  </p> <p> Пусть задан текст, в котором бурва 'А' входит 10 раз, буква 'В' – 8 раз, 'С' – 6 раз , 'D' – 5 раз, 'Е' и 'F' – по 4 раза. Тогда один из возможных вариантов кодирования по алгоритму Хаффмана приведен в таблицы 1.</p> <p> Таблица 1.  </p>   <table cellpadding="2" cellspacing="1">
<tr>
<td style="border-top: 3.00pt double #c0c0c0; border-bottom: 3.00pt double #c0c0c0; border-left: 3.00pt double #c0c0c0; border-right: none; padding-top: 0.02in; padding-bottom: 0.02in; padding-left: 0.02in; padding-right: 0in;">Символ</td>    <td valign="TOP" style="border-top: 3.00pt double #c0c0c0; border-bottom: 3.00pt double #c0c0c0; border-left: 3.00pt double #c0c0c0; border-right: none; padding-top: 0.02in; padding-bottom: 0.02in; padding-left: 0.02in; padding-right: 0in;">Частота     вхождения</td>    <td valign="TOP" style="border: 3.00pt double #c0c0c0; padding: 0.02in;">Битовый     код</td>   </tr>
<tr valign="TOP">
<td style="border-top: 3.00pt double #c0c0c0; border-bottom: 3.00pt double #c0c0c0; border-left: 3.00pt double #c0c0c0; border-right: none; padding-top: 0.02in; padding-bottom: 0.02in; padding-left: 0.02in; padding-right: 0in;">A</td>    <td style="border-top: 3.00pt double #c0c0c0; border-bottom: 3.00pt double #c0c0c0; border-left: 3.00pt double #c0c0c0; border-right: none; padding-top: 0.02in; padding-bottom: 0.02in; padding-left: 0.02in; padding-right: 0in;">10</td>    <td style="border: 3.00pt double #c0c0c0; padding: 0.02in;">00</td>   </tr>
<tr valign="TOP">
<td style="border-top: 3.00pt double #c0c0c0; border-bottom: 3.00pt double #c0c0c0; border-left: 3.00pt double #c0c0c0; border-right: none; padding-top: 0.02in; padding-bottom: 0.02in; padding-left: 0.02in; padding-right: 0in;">B</td>    <td style="border-top: 3.00pt double #c0c0c0; border-bottom: 3.00pt double #c0c0c0; border-left: 3.00pt double #c0c0c0; border-right: none; padding-top: 0.02in; padding-bottom: 0.02in; padding-left: 0.02in; padding-right: 0in;">8</td>    <td style="border: 3.00pt double #c0c0c0; padding: 0.02in;">01</td>   </tr>
<tr valign="TOP">
<td style="border-top: 3.00pt double #c0c0c0; border-bottom: 3.00pt double #c0c0c0; border-left: 3.00pt double #c0c0c0; border-right: none; padding-top: 0.02in; padding-bottom: 0.02in; padding-left: 0.02in; padding-right: 0in;">C</td>    <td style="border-top: 3.00pt double #c0c0c0; border-bottom: 3.00pt double #c0c0c0; border-left: 3.00pt double #c0c0c0; border-right: none; padding-top: 0.02in; padding-bottom: 0.02in; padding-left: 0.02in; padding-right: 0in;">6</td>    <td style="border: 3.00pt double #c0c0c0; padding: 0.02in;">100</td>   </tr>
<tr valign="TOP">
<td style="border-top: 3.00pt double #c0c0c0; border-bottom: 3.00pt double #c0c0c0; border-left: 3.00pt double #c0c0c0; border-right: none; padding-top: 0.02in; padding-bottom: 0.02in; padding-left: 0.02in; padding-right: 0in;">D</td>    <td style="border-top: 3.00pt double #c0c0c0; border-bottom: 3.00pt double #c0c0c0; border-left: 3.00pt double #c0c0c0; border-right: none; padding-top: 0.02in; padding-bottom: 0.02in; padding-left: 0.02in; padding-right: 0in;">5</td>    <td style="border: 3.00pt double #c0c0c0; padding: 0.02in;">101</td>   </tr>
<tr valign="TOP">
<td style="border-top: 3.00pt double #c0c0c0; border-bottom: 3.00pt double #c0c0c0; border-left: 3.00pt double #c0c0c0; border-right: none; padding-top: 0.02in; padding-bottom: 0.02in; padding-left: 0.02in; padding-right: 0in;">E</td>    <td style="border-top: 3.00pt double #c0c0c0; border-bottom: 3.00pt double #c0c0c0; border-left: 3.00pt double #c0c0c0; border-right: none; padding-top: 0.02in; padding-bottom: 0.02in; padding-left: 0.02in; padding-right: 0in;">4</td>    <td style="border: 3.00pt double #c0c0c0; padding: 0.02in;">110</td>   </tr>
<tr valign="TOP">
<td style="border-top: 3.00pt double #c0c0c0; border-bottom: 3.00pt double #c0c0c0; border-left: 3.00pt double #c0c0c0; border-right: none; padding-top: 0.02in; padding-bottom: 0.02in; padding-left: 0.02in; padding-right: 0in;">F</td>    <td style="border-top: 3.00pt double #c0c0c0; border-bottom: 3.00pt double #c0c0c0; border-left: 3.00pt double #c0c0c0; border-right: none; padding-top: 0.02in; padding-bottom: 0.02in; padding-left: 0.02in; padding-right: 0in;">4</td>    <td style="border: 3.00pt double #c0c0c0; padding: 0.02in;">111</td>   </tr>
</table>
<p> Как видно из таблицы 1, размер входного текста до сжатия равен 37 байт, тогда как после сжатия - 93 бит, то есть около 12 байт (без учета длины словаря). Коэффициент сжатия равен 32%. Алгоритм Хаффмана универсальный, его можно применять для сжатия данных любых типов, но он малоэффективен для файлов маленьких размеров (за счет необходимости сохранение словаря).  </p>  6.Программные средства сжатия данных <p> На практике программные средства сжатия данных синтезируют эти три "чистых" алгоритмы, поскольку их эффективность зависит от типа и объема данных. В таблице приведены распространенные форматы сжатия и соответствующие им программы-архиваторы, использующиеся на практике.</p>   <table cellpadding="2" cellspacing="1">
<tr>
<td rowspan="2" style="border-top: 3.00pt double #c0c0c0; border-bottom: 3.00pt double #c0c0c0; border-left: 3.00pt double #c0c0c0; border-right: none; padding-top: 0.02in; padding-bottom: 0.02in; padding-left: 0.02in; padding-right: 0in;">Формат     сжатия</td>    <td colspan="2" valign="TOP" style="border-top: 3.00pt double #c0c0c0; border-bottom: 3.00pt double #c0c0c0; border-left: 3.00pt double #c0c0c0; border-right: none; padding-top: 0.02in; padding-bottom: 0.02in; padding-left: 0.02in; padding-right: 0in;">Операционная     система MS DOS</td>    <td colspan="2" valign="TOP" style="border: 3.00pt double #c0c0c0; padding: 0.02in;">Операционная     система Windows</td>   </tr>
<tr>
<td style="border-top: 3.00pt double #c0c0c0; border-bottom: 3.00pt double #c0c0c0; border-left: 3.00pt double #c0c0c0; border-right: none; padding-top: 0.02in; padding-bottom: 0.02in; padding-left: 0.02in; padding-right: 0in;">Программа     архивации</td>    <td style="border-top: 3.00pt double #c0c0c0; border-bottom: 3.00pt double #c0c0c0; border-left: 3.00pt double #c0c0c0; border-right: none; padding-top: 0.02in; padding-bottom: 0.02in; padding-left: 0.02in; padding-right: 0in;">Программа     разархивации</td>    <td style="border-top: 3.00pt double #c0c0c0; border-bottom: 3.00pt double #c0c0c0; border-left: 3.00pt double #c0c0c0; border-right: none; padding-top: 0.02in; padding-bottom: 0.02in; padding-left: 0.02in; padding-right: 0in;">Программа     архивации</td>    <td style="border: 3.00pt double #c0c0c0; padding: 0.02in;">Программа     разархивации</td>   </tr>
<tr valign="TOP">
<td style="border-top: 3.00pt double #c0c0c0; border-bottom: 3.00pt double #c0c0c0; border-left: 3.00pt double #c0c0c0; border-right: none; padding-top: 0.02in; padding-bottom: 0.02in; padding-left: 0.02in; padding-right: 0in;">ARJ</td>    <td style="border-top: 3.00pt double #c0c0c0; border-bottom: 3.00pt double #c0c0c0; border-left: 3.00pt double #c0c0c0; border-right: none; padding-top: 0.02in; padding-bottom: 0.02in; padding-left: 0.02in; padding-right: 0in;">Arj.exe</td>    <td style="border-top: 3.00pt double #c0c0c0; border-bottom: 3.00pt double #c0c0c0; border-left: 3.00pt double #c0c0c0; border-right: none; padding-top: 0.02in; padding-bottom: 0.02in; padding-left: 0.02in; padding-right: 0in;">Arj.exe</td>    <td style="border-top: 3.00pt double #c0c0c0; border-bottom: 3.00pt double #c0c0c0; border-left: 3.00pt double #c0c0c0; border-right: none; padding-top: 0.02in; padding-bottom: 0.02in; padding-left: 0.02in; padding-right: 0in;">WinArj.exe</td>    <td style="border: 3.00pt double #c0c0c0; padding: 0.02in;">WinArj.exe</td>   </tr>
<tr valign="TOP">
<td style="border-top: 3.00pt double #c0c0c0; border-bottom: 3.00pt double #c0c0c0; border-left: 3.00pt double #c0c0c0; border-right: none; padding-top: 0.02in; padding-bottom: 0.02in; padding-left: 0.02in; padding-right: 0in;">RAR</td>    <td style="border-top: 3.00pt double #c0c0c0; border-bottom: 3.00pt double #c0c0c0; border-left: 3.00pt double #c0c0c0; border-right: none; padding-top: 0.02in; padding-bottom: 0.02in; padding-left: 0.02in; padding-right: 0in;">Rar.exe</td>    <td style="border-top: 3.00pt double #c0c0c0; border-bottom: 3.00pt double #c0c0c0; border-left: 3.00pt double #c0c0c0; border-right: none; padding-top: 0.02in; padding-bottom: 0.02in; padding-left: 0.02in; padding-right: 0in;">Unrar.exe</td>    <td style="border-top: 3.00pt double #c0c0c0; border-bottom: 3.00pt double #c0c0c0; border-left: 3.00pt double #c0c0c0; border-right: none; padding-top: 0.02in; padding-bottom: 0.02in; padding-left: 0.02in; padding-right: 0in;">WinRar.exe</td>    <td style="border: 3.00pt double #c0c0c0; padding: 0.02in;">WinRar.exe</td>   </tr>
<tr valign="TOP">
<td style="border-top: 3.00pt double #c0c0c0; border-bottom: 3.00pt double #c0c0c0; border-left: 3.00pt double #c0c0c0; border-right: none; padding-top: 0.02in; padding-bottom: 0.02in; padding-left: 0.02in; padding-right: 0in;">ZIP</td>    <td style="border-top: 3.00pt double #c0c0c0; border-bottom: 3.00pt double #c0c0c0; border-left: 3.00pt double #c0c0c0; border-right: none; padding-top: 0.02in; padding-bottom: 0.02in; padding-left: 0.02in; padding-right: 0in;">Pkzip.exe</td>    <td style="border-top: 3.00pt double #c0c0c0; border-bottom: 3.00pt double #c0c0c0; border-left: 3.00pt double #c0c0c0; border-right: none; padding-top: 0.02in; padding-bottom: 0.02in; padding-left: 0.02in; padding-right: 0in;">Pkunzip.exe</td>    <td style="border-top: 3.00pt double #c0c0c0; border-bottom: 3.00pt double #c0c0c0; border-left: 3.00pt double #c0c0c0; border-right: none; padding-top: 0.02in; padding-bottom: 0.02in; padding-left: 0.02in; padding-right: 0in;">WinZip.exe</td>    <td style="border: 3.00pt double #c0c0c0; padding: 0.02in;">WinZip.exe</td>   </tr>
</table>
<p> Кроме того, современные архиваторы предоставляют пользователю полный спектр услуг для работы с архивами, основными из которых являются:  </p>   <p>создание  нового архива;</p>  <p>добавление  файлов в существующий  архив;</p>  <p>распаковывание  файлов из архива;</p>  <p>создание  самораспаковающихся  архивов (self-extractor  archive);</p>  <p>создание  распределенных  архивов фиксированного  размера для  носителей  маленькой  емкости;</p>  <p>защита  архивов паролями  от несанкционированного  доступа;</p>  <p>просмотр  содержимого  файлов разных  форматов без  предварительного  распаковывания;</p>  <p>поиск  файлов и данных  внутри архива;</p>  <p>проверка  на вирусы в  архиве к распаковыванию;</p>  <p>выбор  и настройка  коэффициента  сжатия.   </p> <br><br><br><p> <b>Лекция № 13 Табличные процессоры. Табличный процессор Microsoft Excel </b> </p>  1.Электронные таблицы <p> Решение ряда экономических задач часто приводит к обработке прямоугольных таблиц данных разных типов (текстовых, числовых). Применение средств алгоритмических языков высокого уровня оказалось во многих случаях не эффективно. Текстовые процессоры дают возможность ведения и форматирования таблиц, но они плохо приспособлены для вычислений. Выше указанные причины вызвали появление программ, называемых электронными таблицами, объединяющими в себе возможности:</p>   <p>  текстовых  процессоров  по созданию  и форматированию  таблиц;</p>  <p>  математической  обработки  табличных  данных;</p>  <p>  визуализации  результатов  в форме таблиц,  диаграмм, графиков.</p>  <p> История развития программ обработки электронных таблиц насчитывает около трицатицати лет, налицо огромный прогресс в этой области программного обеспечения. Первая такая программа, реализующая концепцию электронных таблиц, VisiCalk была разработана Д. Бриклиным и Б. Фрестоном в 1979 г. По этой концепции основной формат электронной таблицы – это экран дисплея с сеткой, разделяющей его на столбцы и строки, обозначенные буквами латинского алфавита и цифрами. Примерами программ электронных таблиц являются SuperCalc, QutroPro, Lotus 1-2-3 (Lotus), Calc, MS Excel.  </p> <p> В состав программных продуктов этого вида входят:</p>   <p>  <b>калькуляционный  (вычислительный  модуль) модуль</b>,  с помощью которого  происходит  обработка  данных (текстовых  или числовых)  в таблицах;</p>  <p>  <b>модуль  программ для  создания  презентационной  графики</b>,  который позволяет  на основе числовых  данных, полученных  с помощью  калькуляционного  модуля, создать  диаграммы  различных  типов;</p>  <p>  <b>модуль базы  данных</b>,  реализующий  доступ к внешним  базам данных.</p>  <p> Электронные таблицы можно использовать для решения задач учёта, составления бланков, планирования производства, расчёта налогов, заработной платы, учёта кадров и др. Благодаря мощным математическим функциям, имеющимся в электронных таблицах, с их помощью можно решать множество задач в области естественных и технических задач.</p> <p> Именно для проведения расчетов данных, представленных в табличной форме, были разработаны пакеты прикладных программ, получивших название "табличный процессор".</p> <p> Электронная таблица (ЭТ) — компьютерный эквивалент обычной таблицы, в клетках (ячейках) которой записаны данные различных типов: текст, даты, формулы, числа.  </p> <p> <b>Табличные процессоры</b> – это специальный комплекс программ для управления электронной таблицей.</p>  2.Функциональные возможности табличных процессоров  <p> Использование табличных процессоров целесообразно в тех случаях, когда:  </p>      <p>   числа, с которыми   требуется   работать при   решении поставленной   задачи, можно   расположить   в виде таблицы,   т.е. в строках   и графах;    </p>   <p>   числа в одной   строке или   графе связаны   с числами в   других строках   или графах и   предполагается   использование   математических   вычислений   над данными   таблицы;    </p>   <p>   предполагается   статистическая   обработка   данных;</p>   <p>   возможно   частое изменение   информации;</p>   <p>   отслеживается   большое число   показателей;</p>   <p>   предполагается   изготовление   нужного числа   копий табличных   документов.      </p>    <p> Технология работы с табличным документом аналогична процедурам подготовки текстовых документов: редактируемый отчет в виде таблицы выводится на экран, и пользователь может в диалоговом режиме вносить в него свои изменения (т.е. редактировать содержимое ячеек электронной таблицы). Пользователь может переносить и копировать содержимое ячеек из одного места таблицы в другое, использовать всевозможные шрифты (различного типа, начертания и размера), печатать на принтере необходимое количество экземпляров подготовленного табличного документа. Все внесенные изменения сразу же отображаются на экране компьютера. Если один раз отработать форму таблицы и установить характер необходимых расчетов, то в дальнейшем технологический процесс сводится только к вводу данных и при необходимости к их редактированию.  </p> <p> Табличные процессоры относятся к диалоговым системам, построенным по принципу меню: из списка возможных действий пользователь выбирает то, что ему необходимо.</p> <p> Табличные процессоры обеспечивают:  </p> <p> • ввод, хранение и корректировку большого количества данных;  </p> <p> • автоматическое обновление результатов вычислений при изменении исходных данных;</p> <p> • дружественный интерфейс;  </p> <p> • наглядность и естественную форму документов, представляемых пользователю на экране.  </p> <p> В зависимости от вида табличного процессора пользователю доступны различные функции. Как правило, обязательный набор включает следующие основные типы функций:  </p> <p> 1) для формул при вычислениях:  </p> <p> • математические, тригонометрические, включая функции суммирования, произведения, извлечения квадратного корня, логарифмическую и т.д.;  </p> <p> • логические типа IF (если);  </p> <p> • статистические средней арифметической и определения количества всех значений в заданном диапазоне клеток;  </p> <p> 2) текстовые функции, позволяющие отработать некоторым образом текстовые значения клеток, например, отразить только первые три символа текстовой строки;  </p> <p> 3) финансовые функции для выполнения основных финансовых операций, таких как определение величины амортизации, величины платежей за инвестиции, начисление процентов и т.д.;  </p> <p> 4) функции даты и времени;  </p> <p> 5) функции сгруппированных данных, например сортировка данных по различным критериям.  </p> <p> На основании табличных данных средствами табличного процессора можно проводить графический анализ данных с использованием разнообразных графиков и диаграмм.  </p> <p> Возможности табличных процессоров определяются, с одной стороны, характеристиками собственно пакета прикладных программ, а с другой – техническими характеристиками ПК: объемом таблицы (допустимым количеством строк и столбцов), требуемым минимальным объемом оперативной памяти, минимально необходимым объемом дисковой памяти.  </p> <p> На сегодняшний день по данным статистики лидером среди программного обеспечения данного типа является табличный процессор Excel фирмы Microsoft (его используют более 80 % пользователей во всем мире).  </p> <p> Функциональные возможности Excel позволяют широко использовать его для финансовой обработки данных, научных расчетов, инженерно-технических расчетов, автоматизации учетно-контрольной деятельности, эффективной обработки больших объемов информации, заданных в табличном виде.  </p> <p> К основным возможностям табличного процессора Excel относятся:  </p> <p> • быстрое построение, корректировка, сохранение таблиц;  </p> <p> • использование стандартных функций для проведения расчетов в таблицах;  </p> <p> • защита табличных данных;  </p> <p> • построение по табличным данным двух- и трехмерных графиков и диаграмм, содержащих разнообразные инструменты для редактирования графиков и диаграмм, включая средства для создания смешанных двухмерных графиков;</p> <p> • поддержка OLE-технологии и технологии drag-and-drop;  </p> <p> • работа со связанными таблицами;  </p> <p> • работа с таблицей как с базой данных;  </p> <p> • одновременная работа с несколькими книгами и др.  </p> <p> Кроме того, Excel обеспечивает:  </p> <p> • быстрое построение таблиц любой формы одноразового и многоразового пользования и сохранение на магнитном носителе в виде отдельного файла с последующим чтением; • возможность обработки таких типов данных, как числа, даты, формулы;  </p> <p> • возможность корректировки уже созданной таблицы (перемещение строк и столбцов, их копирование, удаление и т.д.);  </p> <p> • возможность выбора цветового оформления таблицы, а также различных шрифтов и стилей, включая автоформатирование;  </p> <p> • наличие механизма мастеров, которые позволяют автоматизировать выполнение операций (например, мастер диаграмм или мастер функций);  </p> <p> • автоматизированную обработку таблиц с помощью макрокоманд, а также модулей на встроенном языке программирования Visual Basic for Application;  </p> <p> • поддержку работы в сети.  </p>  3.Интерфейс и основные понятия табличного процессора Microsoft Excel   <p> В табличном процессоре Excel информация хранится в виде рабочей книги, содержащая листы, расположенные в произвольном порядке, следующих типов:</p>   <p>  рабочий лист;</p>  <p>  лист с диаграммой;</p>  <p>  лист макросов.    </p>  <p> Основными понятиями табличного процессора Excel являются:  </p>      <p>   <b>документ   </b><b>EXCEL</b>   – это файл с   произвольным   именем и расширением   *.xls   или *.xlsx.</p>   <p>   <b>лист</b>   – это рабочая   область для   выполнения   вычислений.   Количество   рабочих листов   неограничено,   каждый имеет   своё уникальное   имя. Рабочий   лист представляет   собой таблицу.   Строки нумеруются   числами, столбцы   – латинскими   буквами.    </p>   <p>   <b>ячейка</b>   – область,   определяемая   пересечением   столбца и строки   электронной   таблицы (ЭТ);      </p>   <p>   <b>текущая   (активная) ячейка</b>   – ячейка ЭТ,   в которой в   данный момент   находится   курсор;    </p>   <p>   <b>адрес ячейки</b>   – определяется   названием   (номером) столбца   и номером строки,   например D4;    </p>   <p>   <b>блок ячеек   (диапазон)</b>   — группа смежных   ячеек, определяемая   адресом верхней   левой и нижней   правой ячеек   в прямоугольнике,   образуемом   блоком, например   D4:F13;    </p>   <p>   <b>ссылка</b>   – указывает   на ячейку или   диапазон ячеек   листа, которые   требуется   использовать   в формуле;    </p>   <p>   <b>абсолютная   ссылка</b>   – ссылка, не   изменяющаяся   при копировании   формулы в другую   ячейку;    </p>   <p>   <b>относительная   ссылка</b>   – ссылка, автоматически   изменяющаяся   при копировании   в соответствии   с положением   формулы;    </p>   <p>   <b>формула</b>   – конструкция,   начинающаяся   со знака "=",   состоящая из   математических   операторов,   значений, ссылок   на ячейки и   имен функций,   при этом результатом   выполнения   формулы является   некоторое   новое значение.      </p>    <p> <b>Сообщения об ошибках, допущенных при вводе формул</b></p>   <table cellpadding="7" cellspacing="0">
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">     <p>     <b>Ошибка</b></p>    </td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">     <p>     <b>Причина</b></p>    </td>    <td style="border: 1px solid #000000; padding: 0in 0.08in;">     <p>     <b>Пояснение</b></p>    </td>   </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;"># ЗНАЧ!</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">Используется     недопустимый     тип аргумента     или операнда</td>    <td style="border: 1px solid #000000; padding: 0in 0.08in;">=А1+А2 при этом     в А1 находятся     число, а в А2 –     текст</td>   </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;"># ИМЯ?</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">Появляется     когда Excel     не может распознать     имя, используемое     в формуле</td>    <td style="border: 1px solid #000000; padding: 0in 0.08in;">     <p>     =А1+А</p>     <p>А     не является     именем ячейки</p>    </td>   </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;"># ДЕЛ/0!</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">Появляется,     в формуле     делается попытка     деления на     0</td>    <td style="border: 1px solid #000000; padding: 0in 0.08in;">     <p>     =А1/А2</p>     <p>     при этом     А2 содер­жится     0</p>    </td>   </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;"># ССЫЛКА!</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">Появляется,     когда ис­пользуется     недопустимая     ссылка на ячейку</td>    <td style="border: 1px solid #000000; padding: 0in 0.08in;">=А1+5     после удаления     ячейки появилась     ошибка # ССЫЛКА!+5</td>   </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">#     # # # #</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">Ошибка     появляется,     когда вводимое     числовое значение     не умещается     в ячейке</td>    <td style="border: 1px solid #000000; padding: 0in 0.08in;">Необходимо     просто расширить     столбец</td>   </tr>
</table>
<br><br><br><p> <b>Лекция № 14 Основные понятия баз данных</b></p>  1.Базы данных и систему управления баз данных   <p>Человек в процессе информационной деятельности собирает и накапливает сведения об окружающем мире. До появления вычислительной техники вся информация хранилась обычно в письменном или печатном виде. Однако чем больше были объемы информации, с которыми приходилось оперировать человеку, тем острее вставал вопрос сохранения информации и её обработки. Напомним, что информация, предназначенная для обработки, называется <b>данными</b><IDXSKIP>.</IDXSKIP></p> <p> В настоящей главе мы будем рассматривать не просто данные, а базы данных. Не всякий блок информации можно считать базой данных.</p> <p> <b>База данных</b> – это совокупность данных, которые обладают свойствами <b>структурированности</b> и <b>взаимосвязанности</b>, а также <b>независимости от прикладных программ</b><IDXSKIP>.</IDXSKIP></p> <p>Поясним, что означают перечисленные свойства базы данных. Чтобы пользователь легко мог находить нужную ему информацию, последняя должна быть организована определенным образом. Это касается не только информации, которая хранится в компьютере, но любой информации об объектах реального мира. Например, удобно находить нужную книгу в библиотеке, пользуясь каталогом. Не составляет труда отыскать интересующие вас объявления в газете. Такая легкость поиска возможна благодаря тому, что данные в каталоге или в газете имеют структуру, или, другими словами, <b>структурированы</b>. Все книги описаны одинаковым образом: автор, название, издательство, год издания и т.д. Все объявления о продажах размещены по рубрикам и также имеют определенную структуру: краткое описание товара, цена, телефон.</p> <p>Устройство базы данных обычно сложнее, чем устройство простого каталога или набора газетных объявлений. Это обусловлено прежде всего свойством <b>взаимосвязанности</b> данных в базе, которое поясним на таком примере. Допустим, вы хотели бы, помимо каталожных карточек, описывающих каждую книгу иметь карточки с информацией о каждом авторе (год рождения, литературный жанр, хобби и т.д.). Если бы такие карточки были созданы, вы получили бы пример взаимосвязанных данных: сведения по отдельной книге связаны с информацией об авторе. Эта связь осуществляется через определим параметр – фамилию автора.</p> <p>Наконец, последнее из перечисленных свойств баз данных – это их <b>независимость от прикладных программ</b>. Базы данных конструируются таким образом, чтобы с ними можно было работать в различных программных средах и на различных компьютерных платформах.</p> <p><b>Свойства базы данных</b></p> <p> База данных должна быть:</p>   <p>полной;</p>  <p>правильно  организованной;</p>  <p>всегда  соответствовать  текущему моменту  времени;</p>  <p>удобной  для использования.</p>  <p>Чтобы оперировать данными, составляющими базу, необходима отдельная программа – <b>система управления базами данных</b><IDXSKIP>.</IDXSKIP></p> <p>Управляющая программа, предназначенная для хранения, обработки данных в базе, называется <b>системой управления базами данных</b> (сокращенно <b>СУБД</b><IDXSKIP>).</IDXSKIP></p> <p><b>Современные СУБД</b> - это программные приложения, которые позволяют решать многообразные задачи. Все существующие системы удовлетворяют, как правило, следующим требованиям.</p> <p> <b>Возможности манипулирования данными</b> (ввод, выбор, вставка, обновление, удаление и др.). Основные операции с данными выполняются под управлением <b>СУБД</b>. Важными показателями при этом являются производительность <b>СУБД</b>, стоимость хранения и использования данных, простота обращения к базе данных и проч.</p> <p> <b>Возможность поиска и формирования запросов</b>. С помощью запросов пользователь может оперативно получать различного рода информацию, которая хранится в базе данных.</p> <p><b>Обеспечение целостности (согласованности) данных</b>. При использовании данных многими пользователями важно обеспечить корректность операций, при которых не может быть нарушена согласованность данных. Нарушение согласованности данных чревато их необратимой потерей.</p> <p><b>Обеспечение защиты и секретности.</b> Кроме защиты от некорректных действий пользователей, важно обеспечить защиту данных от несанкционированного доступа и аппаратных сбоев.Проникновение в базу лиц, имеющих на это права, может иметь следствием разрушение данных. Секретность базы данных позволяет определять круг лиц, имеющих доступ к информации, и порядок доступа.</p> <p>В настоящее время существует множество <b>СУБД</b>, которые различаются архитектурой, внутренним языком программирования, операционной системой, под управлением которой они работают, а также другими характеристиками Среди <b>СУБД</b>, которые устанавливаются в небольших организациях и ориентированы на работу с конечными пользователями, наиболее популярны <b>Access</b>, <b>FoxPro</b>, <b>Paradox</b>. К более сложным системам относятся распределенные <b>СУБД,</b> которые предназначены для работы с большими базами данных, распределенными на нескольких серверах (серверы могут находиться в различных регионах). Мощными <b>СУБД</b> такого типа являются <b>Oracle</b>, <b>Sybase</b>, <b>Informix</b>.</p>
<br> 2.Структура простейших баз данных <p> В системах управления баз данных реализованы различные модели организации баз данных.</p> <p><b>Реляционная модель</b></p> <p>Практически все современные СУБД используют <b>реляционную модель</b> данных. В основе этой модели, предложенной <b>Е.Ф. Коддом</b> в 1970 г., лежит понятие отношение (по-английски relation). Речь идет об отношениях, заключенных в двухмерных (то есть обычных) таблицах. <b>Кодд</b> показал, что таблицы могут быть использованы для хранения данных об объектах реального мира.</p> <p> Рассмотрим пример реляционной модели данных. Допустим, нужно составить базу данных о подготовке к походу, в который отправятся ученики школы. Назовем эту базу «Поход». В ней, прежде всего, должна быть таблица, отражающая сведения об участниках похода. Эта таблица будет состоять из полей: «Код участника», «Фамилия», «Имя», «Класс», «Адрес», «Телефон» (Таблица.1).</p> <p> Таблица.1 База банных «Поход», таблица «Участники»</p>   <table cellpadding="3" cellspacing="0">
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">     <p><b>Код     участника</b></p>    </td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">     <p><b>Фамилия</b></p>    </td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">     <p><b>Имя</b></p>    </td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">     <p><b>Класс</b></p>    </td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">     <p><b>Адрес</b></p>    </td>    <td style="border: 1px solid #000000; padding: 0in 0.03in;">     <p><b>Телефон</b></p>    </td>   </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">1</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">Арбузов</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">Константин</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">8-А</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">ул.     Песчаная, За,     кв.17</td>    <td style="border: 1px solid #000000; padding: 0in 0.03in;">23-44-93</td>   </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">2</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">Бирюкова</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">Ирина</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">8-Б</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">ул.     Луговая, 15</td>    <td style="border: 1px solid #000000; padding: 0in 0.03in;">33-62-76</td>   </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">3</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">Веденеев</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">Константин</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">8-А</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">ул.     Песчаная, 3,     кв.43</td>    <td style="border: 1px solid #000000; padding: 0in 0.03in;">25-37-12</td>   </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">4</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">Крамаренко</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">Вячеслав</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">8-В</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">пр.     Победы, 1, кв.66</td>    <td style="border: 1px solid #000000; padding: 0in 0.03in;">34-25-98</td>   </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">5</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">Крамаренко</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">Надежда</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">7-Б</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">пр.     Победы, 1, кв.66</td>    <td style="border: 1px solid #000000; padding: 0in 0.03in;">34-25-98</td>   </tr>
</table>
<p>Назовем эту таблицу «Участники» (такое же имя будет иметь и отношение, представленное данной таблицей). Обратите внимание, что поле «Код участника» данной таблицы имеет уникальные значения, которые не повторяются ни одной из записей. Такое поле при включении таблицы в базу данных будет ключевого поля. На роль ключевого не годятся ни поле «Фамилия» (в таблице имеются однофамильцы), ни любое другое поле.</p> <p> База данных строится на основе не одной, а множества таблиц. Введем в данных «Поход» еще одну таблицу - «Снаряжение» (Таблица.1). В нее будут заноситься сведения о снаряжении, которое должны взять с собой участники.</p> <p> Таблица. 2 Таблица «Снаряжение»</p>   <table cellpadding="3" cellspacing="0">
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">     <p><b>Код     снаряжения</b></p>    </td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">     <p><b>Код     участника</b></p>    </td>    <td style="border: 1px solid #000000; padding: 0in 0.03in;">     <p><b>Снаряжение</b></p>    </td>   </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">10</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">1</td>    <td style="border: 1px solid #000000; padding: 0in 0.03in;">Палатка</td>   </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">20</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">2</td>    <td style="border: 1px solid #000000; padding: 0in 0.03in;">Котелок</td>   </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">30</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">2</td>    <td style="border: 1px solid #000000; padding: 0in 0.03in;">Веревка</td>   </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">40</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">4</td>    <td style="border: 1px solid #000000; padding: 0in 0.03in;">Топор</td>   </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">50</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">5</td>    <td style="border: 1px solid #000000; padding: 0in 0.03in;">Котелок</td>   </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">60</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">5</td>    <td style="border: 1px solid #000000; padding: 0in 0.03in;">Фонарь</td>   </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">70</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.03in; padding-right: 0in;">4</td>    <td style="border: 1px solid #000000; padding: 0in 0.03in;">Нож</td>   </tr>
</table>
<p> Записи в этой таблице составлены из полей «Код снаряжения», «Код участника» и «Снаряжение». Первое поле («Код снаряжения») является ключевым полем: для каждой записи оно принимает уникальные значения в отличие от остальных полей, в которых имеются дублирующие значения (например, повторяются коды участников 2,4, 5 и снаряжение «Котелок»).</p> <p> Каким образом можно использовать информацию приведенных двух таблиц? Допустим, нас интересует, кто возьмет в поход палатку. Из таблицы «Снаряжение» находим, что палатку, имеющую код 10, должен взять участник с кодом 1. Из таблицы «Участники» видим, что код 1 имеет Арбузов Константин. Таким образом, палатку должен взять участник Арбузов К. Эту информацию мы получили благодаря связи таблиц «Участники» и «Снаряжение» через общее поле «Код участника».</p> <p> В дополнение к имеющимся двум таблицам мы можем составить и другие полезные таблицы, например, «Продукты», в которой будет приведен список продуктов и указаны участники, которые их берут. Вы можете придумать таблицы «График движения», «Памятные места», «Дежурства» и, возможно другие, которые войдут в реляционную базу данных «Поход».</p> <p><b>Иерархические модели данных</b></p> <p> При построении баз данных, кроме реляционной модели, иногда прибегают к другим видам моделей: иерархической и сетевой. Мы кратко рассмотрим эти типы моделей, хотя они имеют, скорее, исторический интерес, поскольку в основу практически всех современных <b>СУБД</b> положена реляционная модель.</p> <p><b>И<br clear="LEFT">ерархическая модель</b> базы данных представляет собой совокупность объектов различного уровня, причём объекты нижнего уровня подчинены объектам верхнего уровня.</p> <p> Рисунок.1. Пример иерархической модели данных «Мои школьные друзья»</p> <p> Иерархическая структура представляется перевернутым деревом, как в примере на рисунке 1. Объекты в этой структуре соединены линиями связи. Заметим, что линии связи отвечают отношению «один ко многим». То есть одному объекту верхнего уровня отвечает много объектов нижнего уровня.</p> <p><b>Сетевые модели данных</b></p> <p> Другой тип отношений, а именно: отношения «многие ко многим» устанавливается в сетевой модели данных.</p> <p><b>Сетевая модель</b> базы данных, как и иерархическая модель, представляется совокупностью объектов различного уровня, однако схема связей между объектами может быть любой.</p> <p> Н<br clear="LEFT">а рисунке 2 показана сетевая модель, изображающая участие ребят в различных командах.</p> <p> Рисунок 2. Пример сетевой модели данных «Спортивные команды»</p>  3.Объекты базы данных MS Access <p> База данных в Access может содержать объекты различных категорий (всего таких категорий шесть). Каждой из категорий отвечает своя вкладка окна базы данных: Таблицы, Запросы, Формы, Отчеты, Макросы и Модули.</p> <p> <b>Таблицы</b>. Это основная категория объектов в реляционной <b>СУБД</b>, поскольку вся информация хранится в базе данных в виде таблиц. Каждая таблица состоит из записей (строк) и из полей (столбцов). Работа с таблицей выполняется в двух основных режимах: в режиме конструктора в режиме таблицы.</p> <p> <b>Запросы.</b> Объекты этого типа служат для получения данных из таблицы или нескольких таблиц. Отбор нужных сведений производится на основе формулируемых критериев. С помощью запросов создаются новые таблицы, в которых используются данные из уже существующих таблиц.</p> <p> <b>Формы.</b> Этот тип объектов используется в основном для удобного вывода данных. Форма представляет собой как бы бланк, который следует заполнить. Заполнение такого бланка под силу пользователю даже невысокой квалификации. Достоинством форм является и то, что они предотврати непосредственное внесение изменений в таблицы.</p> <p> <b>Отчёты.</b> Объекты-отчеты предназначены для отображения данных в виде удобном для просмотра. На основе отчета может быть создан документ, который будет распечатан или включен в документ другого приложения.</p> <p><b>Макросы.</b> Макросами называются «макрокоманды», которые запускаются простым нажатием нескольких клавиш и могут выполнять такие действия, как открытие таблиц и форм, выполнение опций меню, управление окнами и др. Пользователь может создавать свои макросы для последовательностей часто применяемых им операций.</p> <p><b>Модули.</b> Этот тип объектов представляет собой программные модули, написанные на языке VBA. Модули - это обычно процедуры для обработки событий или выполнения вычислений. Разбиение на модули облегчает процесс составления и отладки программы.</p>  4.Типы данных <p> Тип данных определяется значениями, которое предполагается вводить в поле (столбец), например, текст или число.</p> <p> В Access предусмотрены следующие типы данных.</p> <p> <b>Текстовой</b> – предназначен для ввода текста длиной до 255 символов, тип данных устанавливается по умолчанию.</p> <p> <b>Поле MEMO</b> – для ввода заметок или длинных описаний (возможен ввод до 64 000 символов).</p> <p> <b>Числовой</b> – для ввода числовых данных, под которые отводится 1, 2 или 4 байта.</p> <p> <b>Дата/время</b> – предназначен для ввода даты и времени, для которых предусмотрено 8 байт.</p> <p> <b>Денежный</b> – используется для работы с денежными величинами. Этот тип данных занимает 8 байт и предполагает до 15 символов в целой части числа и 4 - в дробной. Использование денежного типа предотвращает ошибки округлений во время вычислений.</p> <p> <b>Счетчик</b> – этот тип предназначен для ввода числа, которое автоматами увеличивается на единицу при добавлении в таблицу новой запаси. Данные этого типа занимают 4 байта.</p> <p> <b>Логический</b> – предназначен для хранения логического значения <b>Да</b> или <b>Нет</b>, <b>Истина</b> или <b>Ложь</b>. Такого рода поле занимает 1 бит.</p> <p> <b>Объекты OLE</b> – используется для хранения в таблице OLE-объектов (например, рисунков, звуков, документов Word и др.). Объекты могу быть связанными или внедренными в таблицу. Размер хранимых объектом ограничивается только объемом диска.</p> <p> <b>Гиперссылки</b> – служит для записи в таблицу гиперссылок (пути URL).</p>  5.Безопасность баз данных <p> К этой весьма широкой категории относятся средства пассивной и активной защиты данных от повреждения, а также средства защиты от несанкционированного доступа, просмотра и изменения данных.</p> <p> В качестве средств пассивной защиты используются служебные программы, предназначенные для резервного копирования. Нередко они обладают и базовыми свойствами диспетчеров архивов (архиваторов). В качестве средств активной защиты применяют антивирусное программное обеспечение. Для защиты данных от несанкционированного доступа, их просмотра и имения служат специальные системы, основанные на криптографии.</p>
<br><br><br><p> <b>Лекция № 18 Публикация WEB-документов</b></p>  1.Создание WEB-документов<br><p> Размещение собственных материалов в Интернете включает два этапа:</p>   <p>  подготовку  материалов</p>  <p>  публикация  материалов.    </p>  <p> Подготовка материалов заключается в создании документов, имеющих формат, принятый в Интернете, то есть Web-страниц, написанных на языке HTML.  </p> <p> Публикация материалов, то есть открытие к ним доступа, осуществляется после решения организационных вопросов, связанных с получением дискового пространства на Web-сервере для их размещения.</p> 1.1Создание Web-документов <p> Автономные Web-документы используют язык HTML (Hypertext Markup Language -язык разметки гипертекста). Гипертекст, то есть расширенный текст, включает дополнительные элементы: иллюстрации, ссылки, вставные объекты. Под разметкой понимается использование специальных кодов, легко отделяемых от смыслового содержания документа и используемых для реализации гипертекста. Применение этих кодов подчиняется строгим правилам, определяемым спецификацией языка HTML. Особенность описания документа средствами языка HTML связана с принципиальной невозможностью достижения абсолютной точности воспроизведения исходного документа. Предполагается, что документ будет широко доступен в Интернете, и поэтому неизвестно, как будет организовано его воспроизведение. Документ может быть представлен на графическом экране, выведен в чисто текстовом виде или просто «прочитан» программой синтеза речи. Разметка HTML во всех этих случаях должна быть принята во внимание. Поэтому язык HTML предназначен не для форматирования документа, а для его функциональной разметки. Например, документы обычно начинаются с заголовков. Свойство части документа «быть заголовком» – это не особенность форматирования документа, а характеристика его содержания. Конкретное средство отображения документа (браузер) выбирает свой способ представления части документа, описанной как заголовок.</p> <p> Недостаток оформительских средств и средств обеспечения интерактивности восполняется внешними по отношению к HTML средствами, такими как списки стиля и динамические сценарии. Многие Web-узлы выполняют автоматическую генерацию Web-страниц на основе содержания некоторой базы данных и запроса пользователя. Подобные элементы стали стандартными компонентами современных Web-страниц.</p> <p> Управляющие конструкции языка HTML называются тегами и вставляются непосредственно в текст документа. Все теги заключаются в угловые скобки &lt;...&gt;. Сразу после открывающей скобки помещается ключевое слово, определяющее тег. Теги HTML бывают парными и непарными. Непарные теги оказывают воздействие на весь документ или определяют разовый эффект в месте своего появления. При использовании парных тегов в документ добавляются открывающий и закрывающий теги, которые воздействуют на часть документа, заключенную между ними. Закрывающий тег отличается от открывающего наличием символа «/»(косая черта) перед ключевым словом. Закрытие парных тегов выполняется так, чтобы соблюдались правила вложения.</p> <p> &lt;В&gt;&lt;I&gt;На этот текст воздействуют два тега&lt;/I&gt;&lt;/В&gt;</p> <p> Эффект применения тега может видоизменяться путем добавления атрибутов. В парных тегах атрибуты добавляются только к открывающему тегу. Атрибуты представляют собой дополнительные ключевые слова, отделяемые от ключевого слова, определяющего тег, и от других атрибутов пробелами и размещаемые до завершающего тег символа «&gt;». Способ применения некоторых атрибутов требует указания значения атрибута. Значение атрибута отделяется от ключевого слова атрибута символом «=» (знак равенства) и заключается в кавычки.</p> <p> &lt;H1 ALIGN="LEFT"&gt;</p> <p> Определение HTML как языка разметки основывается на том, что при удалении из документа всех тегов получается текстовым документ, совершенно эквивалентный по содержанию исходному гипертекстовому документу. Таким образом, при отображении документа HTML сами теги не отображаются, но влияют на способ отображения остальной части документа.</p> <p> Если говорить о создании документов HTML, то можно представить себе два способа их формирования. Первый состоит в разметке существующего (или создаваемого) документа вручную. При этом автор или редактор добавляет в документ теги разметки. Эту работу можно выполнять в текстовом редакторе или редакторе HTML, имеющем специальные элементы управления для упрощения ввода тегов. В обоих этих случаях работа ведется средствами языка HTML, и человек, выполняющий эту работу, должен знать и уметь применять этот язык.</p> <p> Принципы иного подхода можно понять на основе изучения работы текстовых процессоров. Информацию о форматировании документа можно рассматривать как «разметку», добавляемую в форматируемый документ. Однако для использования текстового процессора не требуется знаний о формате документа и «языке разметки»: изменения, отображаемые на экране, вносятся в документ автоматически. Такой принцип соответствия экранного изображения реальному получил название WYSlWYG (от английского What You See Is What You Get - Что видите, то и получаете).</p> <p> В качестве редактора WYSIWYG для языка HTML можно использовать текстовый процессор Word или входящую в состав пакета Microsoft Office программу FrontPage. Существуют и другие программы того же самого назначения. Работа вручную позволяет создавать более универсальные, более качественные и более разнообразные документы. Второй способ проще освоить, так как он не требует знания языка HTML. Однако в этом случае используются средства форматирования вместо средств описания, что может иногда приводить к нежелательным последствиям. При подготовке крупных Web-узлов, содержащих десятки, а то и сотни Web-страниц, та или иная автоматизация работы необходима. Как правило, в таких случаях используют комбинированный подход: «рядовые» страницы готовят с помощью автоматизированных средств, а в особо сложных или в особо важных случаях задают оформление вручную.</p> <p> Процесс создания Web-документов сродни программированию и так же подвержен ошибкам. Независимо от того, каким способом создается документ, следует регулярно проверять его соответствие замыслу, просматривая его в различных браузерах. Для художественной оценки получающейся страницы следует обратиться к независимому мнению.</p>  2.Применение языка HTML 2.1Структура документа HTML <p> Все документы HTML имеют одну и ту же структуру, определяемую фиксированным набором тегов структуры. Документ HTML всегда должен начинаться с тега &lt;HTML&gt; и заканчиваться соответствующим закрывающим тегом (&lt;/HTML&gt;). Внутри документа выделяются два основных раздела: раздел заголовков и тело документа, — идущих именно в таком порядке. Раздел заголовков содержит информацию, описывающую документ в целом, и ограничивается тегами &lt;HEAD&gt; и &lt;/HEAD&gt;. В частности, раздел заголовков должен содержать общий заголовок документа, ограниченный парным тегом &lt;TITLE&gt;.</p> <p> Основное содержание размещается в теле документа, которое ограничивается парным тегом &lt;BODY&gt;. Строго говоря, положение структурных тегов в документе нетрудно определить, даже если они опущены. Поэтому стандарт языка HTML требует только наличия тега &lt;TITLE&gt; (и, соответственно, &lt;/TITLE&gt;). Тем не менее, при создании документа HTML опускать структурные теги не рекомендуется. Простейший правильный документ HTML, содержащий все теги, определяющие структуру, может выглядеть следующим образом:</p> <p> &lt;HTML&gt; &lt;НЕАD&gt;&lt;ТIТLЕ&gt;Заголовок документа&lt; ТIТLЕ &gt;&lt;/НЕАD&gt;</p> <p> &lt;BODY&gt;</p> <p> Текст документа</p> <p> &lt;/BODY&gt;</p> <p> &lt;/HTML&gt;</p> 2.2Элементы HTML <p> Для парных тегов область влияния определяется частью документа между открывающим и закрывающим тегом. Такую часть документа рассматривают как элемент языка HTML. Так, можно говорить об «элементе BODY», включающем тег &lt;BODY&gt;, основное содержание документа и закрывающий тег &lt;/BODY&gt;. Весь документ HTML можно рассматривать как «элемент <b>HTML</b>». Для непарных тегов элемент совпадает с тегом, который его определяет.</p> <p> Большинство элементов языка HTML описывает части содержания документа и помещается между тегами &lt;BODY&gt; и &lt;/BODY&gt;, то есть внутрь структурного элемента BODY. Такие элементы делят на блочные и текстовые. Блочные элементы относятся к частям текста уровня абзаца. Текстовые элементы описывают свойства отдельных фраз и еще более мелких частей текста.</p> <p> Теперь можно сформулировать правила вложения элементов.</p>   <p>  Элементы  не должны  пересекаться.  Другими  словами, если  открывающий  тег располагается  внутри элемента,  то и соответствующий  закрывающий  тег должен  располагаться  внутри этого  же элемента.</p>  <p>  Блочные  элементы могут  содержать  вложенные  блочные и текстовые  элементы.</p>  <p>  Текстовые  элементы могут  содержать  вложенные  текстовые  элементы.</p>  <p>  Текстовые  элементы не  могут содержать  вложенные  блочные элементы.</p>  <p> Строго говоря, все правила языка HTML можно рассматривать исключительно как «пожелания». Средство, используемое для отображения Web-документа, сделает все возможное, чтобы истолковать разметку наиболее разумным образом. Тем не менее, гарантию правильного воспроизведения документа дает только неукоснительное следование требованиям спецификации языка.</p> 2.3Функциональные блочные элементы <p> В большинстве документов основными функциональными элементами являются заголовки и абзацы. Язык HTML поддерживает шесть уровней заголовков. Они задаются при помощи парных тегов от &lt;Н1&gt; до &lt;Н6&gt;. При отображении Web-документа на экране компьютера эти элементы показываются при помощи шрифтов разного размера.</p> <p> Обычные абзацы задаются с помощью парного тега &lt;Р&gt;. Язык HTML не содержит средств для создания абзацного отступа («красной строки»), поэтому при отображении на экране компьютера абзацы разделяются пустой строкой. Закрывающий тег &lt;/Р&gt; рассматривается как необязательный. Подразумевается, что он стоит перед тегом, который задает начало очередного абзаца документа. Например:</p> <p> &lt;Н1&gt;Заголовок&lt;/Н1&gt;</p> <p> &lt;Р&gt;Первый абзац&lt;Р&gt;Второй абзац</p> <p> &lt;Н2&gt;Заголовок второго уровня&lt;/Н2&gt;</p> <p> Следствием наличия специального тега, определяющего абзац, является тот факт, что обычного символа конца строки, вводимого по нажатию клавиши ENTER, для создания абзацного отступа недостаточно. Язык HTML рассматривает символы конца строки и пробелы особым образом. Любая последовательность, состоящая только из пробелов и символов конца строки, при отображении документа рассматривается как одиночный пробел. Это, в частности, означает, что символ конца строки даже не осуществляет перехода на новую строку (для этой цели используется текстовый элемент, задаваемый непарным тегом &lt;BR&gt;). В качестве ограничителя абзацев может также использоваться горизонтальная линейка. Этот элемент задается непарным тегом &lt;HR&gt;. При отображении документа на экране линейка разделяет части текста друг от друга. Ее длина и толщина задается атрибутами тега &lt;HR&gt;.</p> <p> &lt;HRALIGN="RIGHT"SIZE="10"WIDTH="50%"&gt;</p> <p> Этот тег создает горизонтальную линейку шириной в 10 пикселов, занимающую половину ширины окна и расположенную справа.</p> 2.4Гипертекстовые ссылки <p> Гипертекстовая ссылка является фрагментом текста документа и потому задается текстовым элементом, определяемым при помощи парного тега &lt;А&gt;. Этот элемент содержит обязательный атрибут, который не может быть опущен. В данном случае обязательным является атрибут HREF= (знак равенства показывает, что необходимо задать значение этого атрибута).</p> <p> В качестве значения атрибута используется адрес URL документа, на который указывает ссылка. Она может указывать на произвольный документ, располагающийся на любом общедоступном узле сети (Web-узел, архив FTP и прочие). Например, открывающий тег ссылки может иметь вид &lt;А HREF="http://www.site.com/index.htm"&gt;. Адрес URL может быть задан в абсолютной форме, то есть начинаться с указания протокола и адреса Web-узла. Такая запись адреса используется, когда необходимо направить посетителя на другой Web-узел, и рассматривается как внешняя ссылка. При использовании относительного адреса в ссылке задается только относительный путь поиска для документа. В этом случае предполагается использование того же протокола и того же Web-узла, а ссылка рассматривается как внутренняя. Внутренняя ссылка сохраняет свою работоспособность в случае изменения адреса Web-узла как целого (например, в результате его переноса на другой сервер), поэтому при потенциальной возможности такого события следует отказываться от полного задания адресов в гиперссылках.</p> <p> Гиперссылки можно использовать для ссылки на мультимедийные файлы. Это удобно, так как в этом случае не приходится ждать загрузки мультимедийных файлов при работе с данной страницей. Если же требуется интегрирование объектов мультимедиа в Web-страницу, используют парный тег &lt;OBJECT&gt; или нестандартный непарный тег &lt;EMBED&gt;, который тоже поддерживается наиболее распространенными браузерами.</p> <p> Полный формат гиперссылки включает возможность ссылки на определенное место внутри страницы. Но это можно сделать для страниц собственной разработки, пометив соответствующее место при помощи якоря. Якорь задается также при помощи парного тега &lt;А&gt;, но в роли обязательного выступает атрибут NAME=. Значение этого атрибута — произвольная последовательность латинских букв и цифр (пробелы недопустимы), рассматриваемая как имя якоря. Для ссылки на якорь его имя указывается в конце адреса URL после символа «#».</p> <p> &lt;AHREF="http://www.site.com/index.htm#address"&gt;</p> 2.5Web-графика <p> Графические иллюстрации в большинстве случаев являются неотъемлемой частью Web-документов. Сегодня графические элементы Web-страниц используют основных формата — GIF и JPEG (допустим также формат PNG, который, однако так и не получил широкого распространения). Все графические браузеры, предназначенные для отображения Web-страниц на экране компьютера, способны распознавать и отображать файлы этих форматов.</p> <p> Для подготовки изображений можно использовать любой графический редактор, например стандартное приложение Paint (в Windows XP), которое позволяет сохранять файлы в этих форматах.</p> <p> Файлы формата GIF (Graphic Interchange Format) имеют расширение .GIF. Изображения в этом формате содержат 256 цветов, заданных индексной палитрой. Файл упакован и может занимать значительно меньше места, чем неупакованный растровый рисунок (например, в формате .BMP).</p> <p> Спецификация формата GIF89a позволяет создавать файлы .GIF, обладающие специальными возможностями.</p>   <p>  Один из цветов  изображения  может быть  объявлен прозрачным.  Это означает,  что в соответствующих  местах сквозь  него будет  проглядываться  фон Web-страницы,  что позволяет  задать не только  прямоугольную  форму рисунка  и делать его  более естественным.</p>  <p>  Через-строчные  изображения  при их  приеме из Интернета  прорисовываются  постепенно,  вначале грубо,  а затем более  четко. Это  «скрадывает»  время, необходимое  на их загрузку  из Интернета,  особенно при  приеме информации  по медленным  линиям.</p>  <p>  GIF-анимация  превращает  обычный рисунок  в небольшой  видеоролик.  В стандартном  файле с расширением  .GIF  хранится набор  кадров, а также  сцена их отображения.</p>  <p> Для создания файлов .GIF, использующих эти расширенные возможности, необходим графический редактор, более мощный, чем программа Paint. Для создания GIF-анимации используют специальные средства.</p> <p> Файлы формата JPEG (Joint Photographic Expert Group — по названию группы исследователей, предложившей этот формат, читается «джей-пег») могут иметь расширение .JPEG или JPG. Формат предназначен для хранения фотографических изображений, использующих 24-разрядный цвет. При конвертировании в формат JPEG происходит потеря части информации, приводящая к некоторому ухудшению качества изображения, обычно незаметному на глаз.</p> <p> При выборе формата изображения в первую очередь принимают во внимание объём получающегося файла и во вторую - качество изображения. При загрузке Web-документа львиную долю времени занимает именно загрузка иллюстраций, и поэтому любая экономия приветствуется. При выборе формата рекомендуется создать файла: в формате GIF и в формате JPEG с минимально приемлемым качеством, после чего выбрать вариант, имеющий меньший объем.</p> <p> Рисунки хранятся на Web-узлах в отдельных файлах, но отображаются как элементы Web-страниц. Для вставки рисунка используется текстовый элемент, задаваемый непарным тегом &lt;IMG&gt;. Тег &lt;IMG&gt; должен содержать обязательный атрибут SRC=, задающий адрес URL файла с изображением в относительной или абсолютной форме.</p> <p> &lt;IMG SRC="picture1.gif"&gt;</p> <p> При отображении рисунка браузер по умолчанию использует его реальные размеры. Если рисунок необходимо отмасштабировать, применяют атрибуты WIDTH= и HEIGHT=, задающие ширину и высоту рисунка (в пикселах). Если эти параметры заданы, то браузер может определить, какое место надо выделить для отображения рисунка, еще до того, как рисунок загружен. Это несколько ускоряет отображение загружаемой страницы, так что удобно задавать эти атрибуты всегда.  </p> <p> &lt;IMG SRC="picture2.jpg" WIDTH="100" HEIGHT="40"&gt;</p> <p> Внешний вид Web-страницы зависит от того, как именно рисунок располагается на ней. Так как рисунок задается как текстовый элемент, находящийся внутри какого-то абзаца, по умолчанию он рассматривается как встроенное изображение, включаемое в строку текста. Чтобы изображение отображалось автономно, его включают в отдельный абзац.</p> <p> Для изображения, которое действительно включено в строку, можно задать режим взаимодействия с текстом с помощью атрибута ALIGN=.</p> <p> &lt;IMG SRC="picture3.gif" ALIGN="BOTTOM"&gt; Этот атрибут может принимать три значения:</p>   <p>  если задано  ALIGN="BOTTOM",  то нижняя граница  изображения  совмещается  с основанием  текстовой  строки;</p>  <p>  если задано  ALIGN="MIDDLE",  то середина  изображения  совмещается  с серединой  текстовой  строки;</p>  <p>  если задано  ALIGN="TOP",  то верхняя  граница изображения  выравнивается  по верхнему  обрезу текстовой  строки.</p>  <p> Однако более предпочтительно использование «плавающего» изображения, обтекаемого текстом, что также достигается использованием атрибута ALIGN=:</p>   <p>  если задано  ALIGN="LEFT",  то изображение  размещается  у левого края  страницы, а  последующий  текст размещается  справа от него;</p>  <p>  если задано  ALIGN="RIGHT",  то изображение  размещается  у правого края  страницы, а  последующий  текст размещается  слева от него.</p>  <p> В этом случае рекомендуется помещать тег &lt;IMG&gt; в самое начало соответствующего абзаца.</p> <p> Однако нормальный режим обтекания требует, чтобы между текстом и изображением оставался некоторый промежуток. Задать величину этого промежутка можно при помощи атрибутов HSPACE= (по горизонтали) и VSPACE= (по вертикали). Размеры задаются в пикселах.</p> <p> Создавая иллюстрированные страницы, не следует забывать, что не все смогут увидеть эти иллюстрации. Читателей, не имеющих адекватного средства просмотра, можно ознакомить с содержанием иллюстраций при помощи альтернативного текста. Альтернативный текст задается как значение атрибута ALT= и отображается вместо картинки, если она по каким-то причинам не может быть выведена. Так как изображение задается как текстовый элемент, оно может быть помещено внутрь другого текстового элемента, например задающего гиперссылку (тег &lt;А&gt;). В этом случае изображение становится изображением-ссылкой. При отображении документа на экране компьютера такое изображение отличается синей рамкой и изменением формы указателя при наведении.</p> <p> Еще один способ применения изображений на Web-страницах состоит в использовании их в качестве фонового рисунка. При отображении документа, содержащего фоновый рисунок, на компьютере рабочая область окна заполняется этим рисунком последовательно, считая от верхнего левого угла документа или окна. К выбору фонового рисунка следует подходить с особой осторожностью, так как неудачный фон может сильно затруднить чтение документа.  Фоновый рисунок задается с помощью атрибута BACKGROUND= в теге &lt;BODY&gt;. Значением этого атрибута должен быть абсолютный или относительный адрес URL для файла с изображением.</p> <p> &lt;BODY BACKGROUND="waves.gif" TEXT="YELLOW"&gt;</p> 2.6Форматирование текста <p> Управление форматированием текста не является основной задачей языка HTML, и поэтому текстовые элементы, выполняющие эту задачу, начиная с версии НТМL 4.0 рассматриваются как устаревшие, и их использование не рекомендуется. Однако они все еще предоставляют удобный способ управления видом документа на экране компьютера.</p> <p> Парный тег &lt;FONT&gt; позволяет управлять параметрами шрифта. Он должен обязательно содержать хотя бы один из трех атрибутов: COLOR=, FACE= или SIZE=.</p> <p> &lt;FONT SIZE="6"&gt;</p> <p> Атрибут COLOR= задает цвет текста, который может быть задан текстовым значением (например, COLOR="GREEN") или шестнадцатеричным кодом, в котором последовательные байты задают значения красной, зеленой и синей составляющих цвета (COLOR="#00FF00" дает тот же результат, что и COLOR="GREEN"). Атрибут FACE= задает гарнитуру шрифта. Значение этого атрибута сравнивается с именами шрифтов, которые установлены на компьютере. Атрибут SIZE= определяет размер шрифта в относительных единицах (от 1 до 7). Для этого атрибута можно определять значение со знаком (плюс или минус), которое определяет увеличение или уменьшение шрифта относительно текущего размера.</p> <p> Параметры шрифта, используемые в документе по умолчанию, задают с помощью непарного тега &lt;BASEFONT&gt;, который помещают один раз внутри элемента BODY. Он может использовать те же атрибуты, что и тег &lt;FONT&gt;.</p> <p> Начертание символов задается при помощи парных тегов <b>&lt;В&gt; </b>(полужирный шрифт), <b>&lt;</b><b>I</b><b>&gt; </b>(курсив), &lt;U&gt; (подчеркнутый текст) &lt;S&gt; (вычеркнутый текст). Их использование не рекомендуется. Вместо них следует применять элементы фразы, описывающие функциональные особенности текста; например, вместо</p> <p> &lt;В&gt;Обратите внимание!&lt;/В&gt;</p> <p> лучше написать</p> <p> &lt;SТRОNG&gt;Обратите внимание!&lt;SТRОNG&gt;</p> <p> Так, парный тег &lt;СIТЕ&gt; предназначен для отображения цитат (выводятся курсивом). Парные теги &lt;ЕМ&gt; (выделение) и &lt;STRONG&gt; (сильное выделение) являются функциональными аналогами курсивного и полужирного начертаний. Кроме того, язык HTML содержит набор элементов для описания работы компьютерных программ. Для этой цели используют парные теги &lt;CODE&gt; (исходный текст программы), &lt;KBD&gt; (текст, вводимый с клавиатуры), &lt;SAMP&gt; (пример вывода программы) и &lt;VAR&gt; (программные переменные). Кроме того, переменные выводятся курсивом, а клавиатурный ввод (в некоторых браузерах) — полужирным шрифтом.</p> 2.7Списки <p> Язык HTML поддерживает пять видов списков, из которых два (списки меню и списки каталогов) считаются устаревшими и не рекомендуются к применению. Оставшиеся три типа — это упорядоченные списки, неупорядоченные списки и списки определений. Все списки представляют собой блочные элементы. Упорядоченные (нумерованные) и неупорядоченные (маркированные) списки создаются при помощи парных тегов: &lt;OL&gt; для упорядоченного списка и &lt;UL&gt; для неупорядоченного. Эти списки могут содержать только элементы списка, определяемые парным тегом &lt;LI&gt;. Закрывающий тег &lt;/LI&gt; можно опускать, так как его местонахождение легко восстановить. Открывающие теги могут содержать атрибуты, определяющие вид маркера (для неупорядоченного списка), способ и последовательность нумерации (для упорядоченного). Разрешается вложение списков друг в друга.</p> <p> Список определений задается парным тегом &lt;DL&gt;. Он содержит элементы двух типов: определяемые термины (парный тег &lt;DT&gt;) и определения (парный тег &lt;DD&gt;). Закрывающие теги &lt;/DT&gt; и &lt;/DD&gt; можно опускать. Обычно определяемые термины и определения чередуют, хотя это нигде не оговорено. Определения отображаются на экране с отступом от левого края.  </p> <p> <b>2.8 Таблицы</b></p> <p> Таблицы удобны для представления больших объемов данных, а многие web-дизайнеры используют их также для точного размещения элементов Web-страниц. Таблица в языке HTML задается при помощи парного тега &lt;ТАВLЕ&gt;. Она может содержать заголовок таблицы, определяемый парным тегом &lt;CAPTION&gt;, и строки таблицы, задаваемые при помощи парных тегов &lt;TR&gt;. Закрывающие теги &lt;/TR&gt; можно опускать.</p> <p> Каждая строка таблицы содержит ячейки таблицы, которые могут относиться к двум разным типам. Ячейки в заголовках столбцов и строк задают парным тегом &lt;ТН&gt;, а обычные ячейки — парным тегом &lt;TD&gt;. Закрывающие теги &lt;/ТН&gt; и &lt;/TD&gt; можно опускать. Например, «пустая» таблица с двумя строками и двумя столбцами может быть задана следующим образом:</p> <p> &lt;TABLE&gt;</p> <p> &lt;САРТION&gt;Пустая таблица&lt;/САРТION&gt;</p> <p> &lt;TR&gt;&lt;TD&gt;TD&gt;</p> <p> &lt;TR&gt;&lt;TD&gt;TD&gt;</p> <p> &lt;/TABLE&gt;</p> <p> <b>Таблица 1. Атрибуты элементов, используемых при создании таблицы</b></p>   <table cellpadding="7" cellspacing="0">
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">     <p><b>Атрибут</b></p>    </td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">     <p><b>Элемент</b></p>    </td>    <td style="border: 1px solid #000000; padding: 0in 0.08in;">     <p><b>Назначение</b></p>    </td>   </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">ALJGN=</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">Таблица,     заголовок,     строка, ячейка</td>    <td style="border: 1px solid #000000; padding: 0in 0.08in;">Выравнивание     таблицы по     горизонтали;     выравнивание     данных по     горизонтали;     размещение     заголовка     над или под     таблицей</td>   </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">VALIGN=</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">Строка,     ячейка</td>    <td style="border: 1px solid #000000; padding: 0in 0.08in;">Выравнивание     по вертикали</td>   </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">WIDTH=</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">Таблица,     ячейка</td>    <td style="border: 1px solid #000000; padding: 0in 0.08in;">Минимальная     ширина</td>   </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">НЕJGНТ=</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">Ячейка</td>    <td style="border: 1px solid #000000; padding: 0in 0.08in;">Минимальная     высота</td>   </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">COLSPAN=</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">Ячейка</td>    <td style="border: 1px solid #000000; padding: 0in 0.08in;">Протяженность     в несколько     столбцов</td>   </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">ROWSPAN=</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">Ячейка</td>    <td style="border: 1px solid #000000; padding: 0in 0.08in;">Протяженность     в несколько     строк</td>   </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">BGCOLOR=</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">Таблица,     ячейка</td>    <td style="border: 1px solid #000000; padding: 0in 0.08in;">Цвет     фона</td>   </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">CELLSPACING=</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">Таблица</td>    <td style="border: 1px solid #000000; padding: 0in 0.08in;">Зазор     между ячейками</td>   </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">CELLPADDlNG=</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">Таблица</td>    <td style="border: 1px solid #000000; padding: 0in 0.08in;">Зазор     между содержимым     ячейки и ее     границей</td>   </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">BORDER=</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">Таблица</td>    <td style="border: 1px solid #000000; padding: 0in 0.08in;">Отображение     границ ячеек     и внешней рамки     таблицы</td>   </tr>
</table>
<p> Каждая ячейка может содержать произвольный текст, а также любые теги HTML, допустимые в «теле» документа. В частности, ячейка таблицы может содержать вложенную таблицу или изображение.</p> <p> При отображении таблицы на экране компьютера происходит ее автоматическое форматирование с подбором размеров ячеек в соответствии с объемом размещаемой информации и заданными атрибутами. Атрибуты элементов позволяют сколь угодно причудливо оформить таблицу по своему вкусу.  </p> 2.8Отображение нескольких документов <p> Язык HTML позволяет в рамках одной WeB-страницы отобразить несколько документов. Для этого страница должна быть разбита на несколько областей — фреймов. Разбиение страницы описывается документом HTML особого рода, структура которого отличается от обычной. Тело документа заменяется описанием фреймов, задаваемым парным тегом &lt;FRAMESET&gt;. Элемент BODY в таком документе отсутствует, а при наличии — игнорируется браузером.</p> <p> Открывающий тег &lt;FRAMESET&gt; должен содержать обязательный атрибут COLS= или ROWS=, определяющий способ разбиения окна. В первом случае окно разбивается вертикальными линиями, во втором — горизонтальными. Если заданы оба атрибута, создается сетка фреймов. Значение любого из этих атрибутов — это перечисленные через запятую размеры отдельных фреймов.</p> <p> &lt;FRAMESET COLS="60%, 40%"&gt;</p> <p> Значения могут быть заданы в пикселах или в процентах от ширины окна. Последняя область может быть определена с помощью символа «*», что означает, что ей выделяется все оставшееся пространство.</p> <p> &lt;FRAMESET ROWS="40%, 40%,*"&gt;</p> <p> Между тегами &lt;FRAMESET&gt; и &lt;/FRAMESET&gt; должно располагаться ровно столько элементов, сколько областей создано с помощью атрибутов COLS= и ROWS=. При этом могут использоваться дополнительные элементы FRAMESET, описывающие дальнейшее разбиение на подобласти еще меньшего размера, или непарные теги &lt;FRAME&gt;, определяющие способ использования области.</p> <p> Тег &lt;FRAME&gt; должен содержать обязательный атрибут SRC=, с помощью которого указывается, какой документ первоначально загружается в соответствующую область. Значение этого атрибута — абсолютный или относительный адрес URL нужного документа.</p> <p> Среди прочих атрибутов выделяется атрибут NAME=, позволяющий задать «имя» созданной области в виде последовательности латинских букв и цифр, использованной как значение этого атрибута.</p> <p> &lt;FRAME SRC="text.htm" NAME="left"&gt;</p> <p> Это имя можно использовать, чтобы загружать новые документы в ранее созданную область. Для этого в тег &lt;А&gt;, определяющий гиперссылку, необходимо добавить атрибут TARGET=, значение которого совпадает с ранее определенным именем области. При переходе по данной гиперссылке новый документ загрузится в указанный фрейм.</p> <p> Например, предположим, что начальная страница Web-узла состоит из двух фреймов: слева располагается навигационная панель, а справа — текущая страница. Если правой области присвоено имя, используемое во всех ссылках, имеющихся в левой области, то щелчок на любой ссылке навигационной панели приведет к обновлению информации в соседней области, оставляя навигационную панель без изменений.</p> 2.9Интерактивные Web-страницы <p> Web-страницы являются интерактивными по самой своей природе, связанной с использованием гиперссылок. Но это пассивная интерактивность, жестко задана в рамках структуры Web-узла. Подлинная интерактивность, позволяющая получать от посетителей Web-страницы произвольные данные, достигается путем использования форм.</p> <p> Форма на Web-странице представляет собой лишь набор полей, которые можно также рассматривать как элементы управления (рис. 7). Посетитель в процессе работы с Web-страницей заполняет форму, после чего отправляет ее. Далее поступившие данные обычно передают специальной программе, предназначенной для ее обработки.</p> <p> Форма — это блочный элемент, описываемый парным тегом &lt;FORM&gt;. Теги, задающие поля формы, можно использовать только внутри этого элемента. Открывающий тег &lt;FORM&gt; определяет способ обработки формы при помощи нескольких атрибутов. Атрибут METHOD= определяет способ передачи представленных пользователем данных.  </p> <p> </p> <p> Рис. 7. Пример формы Web-страницы</p> <p> Внутри элемента формы располагаются поля формы. Они задаются при помощи различных тегов. Вот те, которые используются чаще всего.</p>   <p>  Непарный  тег &lt;INPUT&gt;  позволяет  создавать  различные  элементы управления,  в том числе  текстовые поля  и командные  кнопки.</p>  <p>  Парный тег  &lt;TEXTAREA&gt;  определяет  текстовые  области.</p>  <p>  Парный тег  &lt;SELECT&gt;  позволяет  создавать  обычные и  раскрывающиеся  списки. Отдельные  пункты задаются  при помощи  парного тега  &lt;OPTION&gt;,  который допустим  только внутри  данного элемента  (закрывающий  тег &lt;/OPTION&gt;  можно опускать).</p>  <p> Тег &lt;INPUT&gt; должен содержать обязательный атрибут TYPE=, определяющий конкретный тип элемента управления. Вот основные возможные значения этого атрибута:</p>   <p>  "TEXT" –  создается  текстовое  поле;</p>    <p>  "PASSWD"  – создается  текстовое  поле, но вводимая  информация  не отображается  на экране  («текстовое  поле для ввода  пароля»);</p>    <p>  "CHECKBOX"  – создается  флажок, который  может быть  установлен  или сброшен</p>  <p> •"RADIO" – создается переключатель (из группы переключателей может быть включен только один);</p> <p> •”SUBMIT" – создается кнопка отправки формы; IMAGE" — создается графическая кнопка отправки;</p> <p> •"RESET" – создается кнопка очистки формы, щелчок на которой возвращает форму к ее исходному состоянию.</p> <p> Организация передачи данных, введенных в форму, осуществляется следующим образом. Каждый из тегов, задающих поля формы, должен иметь атрибуты NAME= и VALLUE. Атрибут NAME= определяет имя поля формы, атрибут VALUE= – значение поля. Для текстового поля и текстовой области атрибут VALUE=  приобретает значение, соответствующее содержимому этого поля, заданному пользователем. Для элемента SELECT атрибут VALUE= соответствует содержимому выбранного элемента "OPTION. Все переключатели одной группы должны иметь одинаковые значения атрибута NАМЕ= и разные значения атрибута VALUE=.</p> <p> По щелчку на кнопке отправки данные из формы передаются в виде пар текущих значений атрибутов NAME= и VALUE=, соединенных знаком равенства. Информация о флажке передается только в том случае, если он установлен. Если атрибуты NAME= и VALUE= определены для использованной кнопки отправки, соответствующие данные также передаются (это позволяет включать в форму несколько кнопок отправки). Данные, поступающие в таком виде, удобны как для ручной, так и для автоматической обработки.  </p> <p> Создавая формы, следует иметь в виду, что информацию, передаваемую по электронной почте, нельзя считать конфиденциальной. Большинство браузеров может предупредить пользователя о возможности постороннего доступа к передаваемой информации. Эту особенность надо учитывать как при создании Web-страниц, содержащих формы, так и при заполнении форм на Web-страницах, встретившихся в Интернете.</p>
<br><br><p><b>Распознавание текста и изображений. Переключатели клавиатуры. Распознавание и синтез речи</b></p> <p>Любое сканированное изображение представляет собой графический файл. Но в графическом формате страница занимает слишком много места, и главное, такой текст нельзя редактировать. Существуют программы, способные перевести сканированный текст из графического в текстовый формат.  </p> <p>Программа распознавания текста обращается к той программе, которая используется для работы со сканером. Файл рисунка попадает прямо в распознавалку, которая выводит результаты в виде текста, причем воспроизводит в нем шрифтовое и абзацное оформление, разбиение на колонки, вставляет в текст иллюстрации, взятые со сканируемой страницы.  </p> <p>Текст можно править тут же, во встроенном редакторе программы – для этого в программу встраивается также проверка правописания. Можно удалять или перемещать рисунки.  </p> <p>Желательно научиться подбирать параметры изображения для оригиналов неважного качества в зависимости от вида этой «неважности». Одно дело, когда шрифт на листе слишком темный, с жирными заплывшими буквами (вроде второй копии машинописи под слишком свежую копирку), и совсем другое – когда у машинки бледная изношенная лента. И совсем третье – когда сканируется газетный текст на плохой бумаге и мелким шрифтом. </p> <p>Подобрав настройки сканера, можно уменьшить количество неверно распознанных букв до вполне приемлемой цифры.  </p> <p> <b>История создания</b></p> <p>В 1929 году Густав Таущек получил патент на метод оптического распознавания текста в Германии, после чего за ним последовал Гендель, получив патент на свой метод в США в 1933. В 1935 Таущек также получил патент США на свой метод. Машина Таущека представляла собой механическое устройство, которое использовало шаблоны и фотодетектор.</p> <p>В 1950 году Дэвид Х. Шепард, криптоаналитик из агентства безопасности вооружённых сил Соединённых Штатов, проанализировав задачу преобразования печатных сообщений в машинный язык для обработки компьютером, построил машину, решающую данную задачу. После того как он получил патент США, он сообщил об этом в «Вашингтон Дэйли Ньюз» (27 Апреля 1951) и в «Нью-Йорк Таймс» (26 декабря 1953). Затем Шепард основал компанию, разрабатывающую интеллектуальные машины, которая вскоре выпустила первые в мире коммерческие системы оптического распознавания символов.</p> <p>Первая коммерческая система была установлена на «Ридерс Дайджест» в 1955 году. Вторая система была продана компании «Стэндарт Ойл» для чтения кредитных карт для работы с чеками. Другие системы, поставляемые компанией Шепарда, были проданы в конце 1950-х годов, в том числе сканер страниц для национальных воздушных сил США, предназначенный для чтения и передачи по телетайпу машинописных сообщений. IBM позже получила лицензию на использование патентов Шепарда.</p> <p>Примерно в 1965 «Ридерс Дайджест» и «Ар-Си-Эй» начали сотрудничество с целью создать машину для чтения документов, использующую оптическое распознавание текста, предназначенную для оцифровки серийных номеров купонов «Ридерс Дайджест», вернувшихся из рекламных объявлений. Для печати на документах барабанным принтером «Ар-Си-Эй» был использован специальный шрифт OCR-A. Машина для чтения документов работала непосредственно с компьютером RCA 301 (один из первых массивных компьютеров). Скорость работы машины была 1500 документов в минуту: она проверяла каждый документ, исключая те, которые она не смогла обработать правильно.</p> <p>Почтовая служба Соединённых Штатов с 1965 года для сортировки почты использует машины, использующие оптическое распознавание текста, созданные на основе технологий, разработанных исследователем Яковом Рабиновым. В Европе первой организацией, использующей машины с оптическим распознаванием текста, был британский почтамт. Почта Канады использует системы оптического распознавания символов с 1971 года. На первом этапе в центре сортировки системы оптического распознавания символов считывают имя и адрес получателя и печатают на конверте штрих-код. Он наносится специальными чернилами, которые отчётливо видимы в ультрафиолетовом свете. Это делается, чтобы избежать путаницы с полем адреса, заполненным человеком, которое может быть в любом месте на конверте.</p> <p>В 1974 году Рэй Курцвейл создал компанию «Курцвейл Компьютер Продактс», и начал работать над развитием первой системы оптического распознавания символов, способной распознать текст, напечатанный любым шрифтом. Курцвейл считал, что лучшее применение этой технологии — создание машины чтения для слепых, которая позволила бы слепым людям иметь компьютер, умеющий читать текст вслух. Данное устройство требовало изобретения сразу двух технологий — ПЗС планшетного сканера и синтезатора, преобразующего текст в речь. Конечный продукт был представлен 13 января 1976 во время пресс-конференции, возглавляемой Курцвейлом и руководителями национальной федерации слепых.</p> <p>В 1978 году компания «Курцвейл Компьютер Продактс» начала продажи коммерческой версии компьютерной программы оптического распознавания символов. Два года спустя Курцвейл продал свою компанию корпорации «Ксерокс», которая были заинтересована в дальнейшей коммерциализации систем распознавания текста. «Курцвейл Компьютер Продактс» стала дочерней компанией «Ксерокс», известной как «Скансофт».</p> Текущее состояние технологии оптического распознавания текста <p>Точное распознавание латинских символов в печатном тексте в настоящее время возможно только если доступны чёткие изображения, такие как сканированные печатные документы. Точность при такой постановке задачи превышает 99 %, абсолютная точность может быть достигнута только путем последующего редактирования человеком. Проблемы распознавания рукописного «печатного» и стандартного рукописного текста, а также печатных текстов других форматов (особенно с очень большим числом символов) в настоящее время являются предметом активных исследований.</p> <p>Точность работы методов может быть измерена несколькими способами и поэтому может сильно варьироваться. К примеру, если встречается специализированное слово, не используемое для соответствующего программного обеспечения, при поиске несуществующих слов, ошибка может увеличиться.</p> <p>Распознавание символов он-лайн иногда путают с оптическим распознавания символов. Последний - это офф-лайн метод, работающий со статической формой представления текста, в то время как он-лайн распознавание символов учитывает движения во время письма. Например, в он-лайн распознавании, использующем PenPoint OS или планшетный ПК, можно определить, с какой стороны пишется строка: справа налево или слева направо.</p> <p>Он-лайн системы для распознавания рукописного текста «на лету» в последнее время стали широко известны в качестве коммерческих продуктов. Алгоритмы таких устройств используют тот факт, что порядок, скорость и направление отдельных участков линий ввода известны. Кроме того, пользователь научится использовать только конкретные формы письма. Эти методы не могут быть использованы в программном обеспечении, которое использует сканированные бумажные документы, поэтому проблема распознавания рукописного «печатного» текста по-прежнему остается открытой. На изображениях с рукописным «печатным» текстом без артефактов может быть достигнута точность в 80 % — 90 %, но с такой точностью изображение будет преобразовано с десятками ошибок на странице. Такая технология может быть полезна лишь в очень ограниченном числе приложений.</p> <p>Ещё одной широко исследуемой проблемой является распознавание рукописного текста. На данный момент достигнутая точность даже ниже, чем для рукописного «печатного» текста. Более высокие показатели могут быть достигнуты только с использованием контекстной и грамматической информации. Например, в процессе распознания искать целые слова в словаре легче, чем пытаться проанализировать отдельные символы из текста. Знание грамматики языка может также помочь определить, является ли слово глаголом или существительным. Формы отдельных рукописных символов иногда могут не содержать достаточно информации, чтобы точно (более 98 %) распознать весь рукописный текст.</p> <p>Для решения более сложных проблем в сфере распознавания используются, как правило, интеллектуальные системы распознавания, такие как искусственные нейронные сети.</p> Программы распознавания <p>Программа FineReader фирмы ABBYY – наиболее распространенная OCR-программа (Optical Character Recognition – оптическое распознавание символов) на нашем рынке. </p> <p>Помимо 176 обычных языков (включая искусственные вроде эсперанто), FineReader понимает также основные языки программирования и простые химические формулы, причем умеет распознавать разноязычный текст. Имеет функцию обучения. </p> <p>OCR CuneiForm один из главных конкурентов FineReader как на российском, так и на мировом рынке. Производителем является российский разработчик программного обеспечения Cognitive Technologies. По словам производителей, OCR CuneiForm выгодно отличается уровнем распознавания, особенно текстов низкого качества; удобным интерфейсом с наличием встроенных мастеров помощников в работе; встроенным текстовым редактором, не уступающим по своей функциональности популярным текстовым процессорам, и многими другими возможностями.</p> <p>OCR CuneiForm способна распознавать любые полиграфические и машинописные гарнитуры всех начертаний и шрифтов, получаемые с принтеров, за исключением декоративных и рукописных. Также программа способна распознавать таблицы различной структуры, в том числе и без линий и границ; редактировать и сохранять результаты в распространенных табличных форматах. Существенно облегчает работу и возможность прямого экспорта результатов в MS Word и MS Excel (для этого теперь не нужно сохранять результат в файл RTF, а затем открывать его с помощью MS Word).</p> <p>Также программа снабжена возможностями массового ввода возможностью пакетного сканирования, включая круглосуточное, сканирования с удаленных компьютеров локальной сети и организации распределенного параллельного сканирования в локальной сети.</p> <p>О высокой конкурентоспособности этой системы говорит тот факт, что ведущие мировые производители вычислительной техники поставляют свою продукцию с этой программой. Наиболее популярные в России сканеры и многофункциональные устройства Canon, Hewlett-Packard, OKI, Seiko Epson, Olivetti поставляются в комплекте с OCR CuneiForm.</p> <p>Ведущие производители программного обеспечения также лицензировали российскую информационную технологию для применения со своими продуктами. Популярные программные пакеты Corel Draw (Corel Corporation), FaxLine/OCR&amp;Business Card Wizard (Inzer Corporation) и многие другие встроена OCR-библиотека CuneiForm. Хочется отметить, что эта программа стала первой в России OCR-системой, получившей MS Windows Compatible Logo.</p> <p>Readiris Pro7 профессиональная программа распознавания текста. По словам производителей (I.R.I.S.), данная OCR отличается от аналогов высочайшей точностью преобразования обычных (каждодневных) печатных документов, таких как письма, факсы, журнальные статьи, газетные вырезки, в объекты, доступные для редактирования (включая файлы PDF). Основными достоинствами программы являются: возможность более или менее точного распознавания картинок, сжатых по максимуму (с максимальной потерей качества) методом JPEG, поддержка цифровых камер и автоопределения ориентации страницы. Поддержка до 92 языков (включая русский).</p> <p>OmniPage11 продукт компании ScanSoft. Ограниченная версия этой программы (OmniPage11 Limited Edition, OmniPage Lite) обычно поставляется в комплекте с новыми сканерами (на территории Европы и США). Разработчики утверждают, что их программа практически со 100% точностью распознает печатные документы, восстанавливая их форматирование, включая столбцы, таблицы, переносы (в том числе переносы частей слов), заголовки, названия глав, подписи, номера страниц, сноски, параграфы, нумерованные списки, красные строки, графики и картинки. Есть возможность сохранения в форматы Microsoft Office, PDF и в 20 других форматов, распознавания из файлов PDF, редактирование прямо в формате PDF. Система искусственного интеллекта позволяет автоматически обнаруживать и исправлять ошибки после первого исправления вручную. Новый специально разработанный модуль Despeckle позволяет распознавать документы с ухудшенным качеством (факсы, копии, копии копий ит.д.). Преимуществами программы являются возможность распознавания цветного текста и возможность корректировки голосом. Теперь версия OmniPage существует и для компьютеров Macintosh.</p> <p>AfterScan программа для чистки отсканированного текста. Борется с лишними пробелами между словами, в конце строки и в начале абзацев. Исправляет разнобой с длинными и короткими тире, а также с открывающими и закрывающими кавычками и многое другое. </p> <p> <b>Переключатели клавиатуры </b> </p> <p>Эти программы связаны с переключением и исправлением клавиатурной раскладки (в том числе, позволяют исправлять текст, введенный не в той клавиатурной раскладке).  </p> <p>SwitchIt – драйвер клавиатуры способный полностью заменить стандартный переключатель, либо сотрудничать с ним.  </p> <p>Punto Switcher – при вводе невозможных в русском или английском языке сочетаний букв (например, Цштвщцы), производится перекодировка и переключение раскладки.  </p> <p> <b>Распознавание и синтез речи</b></p> <p>Первое устройство для распознавания речи появилось в 1952 году, оно могло распознавать произнесённые человеком цифры. В 1964 году на ярмарке компьютерных технологий в Нью-Йорке было представлено устройство IBM Shoebox.</p> <p>Коммерческие программы по распознаванию речи появились в начале девяностых годов. Обычно их используют люди, которые из-за травмы руки не в состоянии набирать большое количество текста. Эти программы (например, Dragon NaturallySpeaking, VoiceNavigator) переводят голос пользователя в текст, таким образом, разгружая его руки. Надёжность перевода у таких программ не очень высока, но с годами она постепенно улучшается.</p> <p>Главным фактором, ускорившим развитие программ распознавания речи, было совершенствование компьютеров.</p> <p>Эти программы требуют большой вычислительной мощности и значительных объемов памяти. Чтобы использовать программы распознавания речи с полной отдачей, рекомендуется РС с процессором Pentium MMX/166 или аналогичным и жестким диском не менее 2 Гбайт. Перед его покупкой следует убедиться, что используемая программа распознавания речи поддерживает имеющуюся в РС звуковую карту.  </p> <p>Программы распознавания речи требуют всю эту мощь, поскольку они выполняют сложную работу. Сначала произносимые вами слова захватываются микрофоном и обрабатываются звуковой картой.</p> <p>Затем программа анализирует звук, чтобы отличить низкочастотные гласные от высокочастотных согласных. После этого результаты сравниваются с фонемами (частями слов), группами фонем и словами, чтобы подобрать наиболее точный эквивалент.</p> <p>Этот алгоритм должен быть не только аккуратным и быстрым, но пластичным, чтобы учитывать особенности произношения, модуляции голоса, скорость речи. После подбора наиболее точного слова программа анализирует контекст, что предугадать следующее слово. Это позволяет различить слова-омонимы, например, коса (вид прически), коса (береговая отмель), коса (сельскохозяйственный инструмент).</p> <p>NaturallySpeaking и ViaVoice могут работать сразу после того, как вы прочтете несколько предложений. Чтобы добиться лучших результатов следует, однако, произвести 30-минутную тренировку. Чтобы еще лучше подготовить программу следует прочитать текст или импортировать документы, содержащие наиболее часто употребляемые вами слова.</p> <p>Увеличение вычислительных мощностей мобильных устройств позволило и для них создать программы с функцией распознавания речи. Среди таких программ стоит отметить приложение Microsoft Voice Command, которое позволяет работать со многими приложениями при помощи голоса. Например, можно включить воспроизведение музыки в плеере или создать новый документ.</p> <p>Интеллектуальные речевые решения, позволяющие автоматически синтезировать и распознавать человеческую речь, являются следующей ступенью развития интерактивных голосовых систем (IVR). Использование интерактивного телефонного приложения в настоящее время не веяние моды, а жизненная необходимость. Снижение нагрузки на операторов контакт-центров и секретарей, сокращение расходов на оплату труда и повышение производительности систем обслуживания — вот только некоторые преимущества, доказывающие целесообразность подобных решений.</p> <p>Прогресс, однако, не стоит на месте и в последнее время в телефонных интерактивных приложениях все чаще стали использоваться системы автоматического распознавания и синтеза речи. В этом случае общение с голосовым порталом становится более естественным, так как выбор в нем может быть осуществлен не только с помощью тонового набора, но и с помощью голосовых команд. При этом системы распознавания являются независимыми от дикторов, то есть распознают голос любого человека. Основным преимуществом голосовых систем является дружелюбность к пользователю — он избавляется от необходимости «продираться» сквозь сложные и запутанные лабиринты голосовых меню. Теперь достаточно произнесения цели звонка, после чего голосовая система автоматически переместит звонящего в нужный пункт меню.</p> <p>Следующим шагом технологий распознавания речи можно считать развитие так называемых Silent Speech Interfaces (SSI) (Интерфейсов Безмолвного Доступа). Эти системы обработки речи базируются на получении и обработке речевых сигналов на ранней стадии артикулирования. Данный этап развития распознавания речи вызван двумя существенными недостатками современных систем распознавания: чрезмерная чувствительность к шумам, а также необходимость четкой и ясной речи при обращении к системе распознавания. Подход, основанный на SSI, заключается в том, чтобы использовать новые сенсоры, не подверженные влиянию шумов в качестве дополнения к обработанным акустическим сигналам.</p> <p>На сегодняшний день существует два типа систем распознавания речи - работающие "на клиенте" (client-based) и по принципу "клиент-сервер" (client-server). Второй вариант более популярен и прост в разработке: речевая команда вводится на устройстве пользователя и через Интернет передается на удаленный сервер, где обрабатывается и возвращается на устройство в виде команды (Google Voice, Vlingo, пр.). Второй вариант работает на иных математических алгоритмах и встречается редко (Speereo Software) - в этом случае команда вводится на устройстве пользователя и обрабатывается в нем же. Плюс обработки "на клиенте" в мобильности, независимости от наличия связи и работы удаленного оборудования. Так, система, работающая "на клиенте" кажется надежнее, но ограничивается, порой, мощностью устройства на стороне пользователя.</p>
<br><br><p><b>Электронные словари и переводчики </b> </p> <p><b>Программы перевода </b> </p> <p>Работы по созданию программы, полностью автоматизирующей процесс перевода, ведутся несколько десятилетий. </p> <p>Но машинные переводы пока выходят не очень качественно. </p> <p>Во-первых, все очень сильно зависит от характера текста. Наилучший результат достигается при переводе технических текстов, но обойтись без проверки и исправлений полученного перевода человеком не удается.  </p> <p>Во-вторых, при подключении специализированных словарей по теме данного конкретного документа качество перевода заметно возрастает. </p> <p>Чаще всего переводчики применяют в двух случаях: для перевода иноязычных web-страниц и для перевода обычных текстов в тестовых редакторах. Но можно с их помощью переводить и справочные системы, электронные таблицы и т.д. </p> <p>Далее перечислим некоторые из программ.  </p> <p><b>PROMT E</b>  </p> <p>Занимается переводом web-страниц с английского, немецкого, французского и обратно, а также с испанского и итальянского. </p> <p>Программа со всеми словарями занимает на диске 120 Мб, требует минимум 32 Мб оперативной памяти. При инсталляции встраивается в браузер Internet Explorer.  </p> <p><b>PROMT XT</b>  </p> <p>Переводчик встраивается в программы Microsoft Office 2000 и XP, требует Internet Explorer 5.0, а лучше 6.0.  </p> <p>Занимает на диске от 250 до 370 Мб.  </p> <p><b>Babylon</b> </p> <p>Программа позволяет по щелчку мыши по слову найти его значение, перевод и послушать, как оно звучит по-английски. </p> <p><b>Magic Gooddy</b>  </p> <p>Англо-русско-английский переводчик ориентированный на домашнего пользователя. В его словарную базу встроены словари по компьютерной технологии, бытовой технике, программному обеспечению и Интернет, а также специализированные словари для перевода кулинарных текстов.  </p> <p><b>SV-Translator</b> </p> <p>Переводчик с английского на русский. Содержит свыше 60 тыс. слов.  </p> <p><b>Сократ Профессиональный</b> </p> <p>Четырехъязычный (английский, французский, немецкий и русский) переводчик текстовых файлов. Все версии Сократа используют одну и ту же словарную базу. Предлагается 11 видов словарных комплектов объемом от 7 до 45 тыс.слов.  </p> <p> <b>Электронные словари </b> </p> <p>Переводчики и словари – вещи совершенно разные, как по своей структуре, так и по задачам. </p> <p>Известно, что любое слово в языке может иметь несколько вариантов толкования. Порой прямо противоположных. Когда с текстом работает программа-переводчик, она вынуждена ограничиваться одним-двумя вариантами перевода.  </p> <p>У словаря рабочая единица другая – слово, редко короткое выражение. Зато в этих рамках он предоставляет себе полную свободу действий, и может выдать пространный комментарий, со всеми возможными вариациями и толкованиями. </p> <p>Если для создания переводчика необходимо разработать алгоритм, то электронные словари – это просто копии «бумажных» изданий, переведенные в электронную форму и снабженные оболочкой. Хороший коммерческий электронный словарь может содержать информацию из десятков бумажных изданий – при этом он будет гораздо удобнее в работе. </p> <p>В каждом словаре реализован свой собственный оригинальный подход.  </p> <p>Имеются в виду, прежде всего, словари иностранных слов. Существуют также электронные словари русского языка, например, словари Даля, Ушакова, Ожегова. </p> <p>Перечислим некоторые из них.  </p> <p><b>МультиЛекс</b> </p> <p>Это семейство электронных словарей компании МедиаЛингва. </p> <p><b>Polyglossum</b> </p> <p>Семейство словарей Polyglossum фирмы ЭТС, пожалуй, самое богатое из всех. Оно включает в себя более двухсот пятидесяти словарей английского, немецкого, финского, французского и испанского языков – как общей лексики (например, «Большой общелексический словарь» на 600 тыс. терминов), так и специальных – по науке, технике, экономике, бизнесу и разным областям производства. Причем все словари обратимые. </p> <p><b>Lingvo</b> </p> <p>В состав электронного словаря Lingvo фирмы ABBYY входят русско-английский и англо-русский словари общей лексики размером 85 и 100 тыс. статей соответственно, а также специализированные словари (экономический, компьютерных терминов, политехнический, научных терминов, а также словарь по нефти и газу, медицинский и юридический). Общий объем словарной базы – более 1,2 млн словарных статей.  </p> <p>Кроме англо-русской версии, есть также многоязычная с поддержкой немецкого, французского и итальянского языков.  </p> <p>На сайте lingvo.ru можно получить некоторое количество бесплатных специализированных словарей (словари аббревиатур, бухгалтерских терминов, библейский, хакерский, интернетовский, латинско-английский, целый словарь Даля).  </p> <p><b>DicView</b> </p> <p>Оболочка для работы со словарями.  </p> <p><b>Magical Jellybean Dictionary</b>  </p> <p>Клиентская часть англо-язычного толкового словаря.  </p> <p><b>Translate Now!</b>  </p> <p>Довольно удобный в использовании англо-русский словарь.  </p> <p><b>Англо-Русский и Русско-Английский словарь</b>  </p> <p>Довольно простой в работе англо-русский и русско английский словарь в гипертекстовом формате CHM.  </p> <p><b>Контекст</b> </p> <p>Электронный словарь от разработчиков системы проверки орфографии ОРФО. Это система электронных словарей, включающая развитую программную оболочку и обширный набор многоязычных словарей.  </p>   <p>     </p>
<p>3</p>  <br><br><p><b>Программные ресурсы Internet </b> </p> <p><b>Службы Интернет </b> </p> <p>Вся информация, программы, кино, музыка, радио, компьютерные игры и многое другое предоставляется пользователю так называемыми службами Интернета. В широком смысле служба - это некий сервис. В узком смысле: в сетевой терминологии служба - это пара программ, взаимодействующих друг с другом заданным образом. Одна из программ называется сервером, а другая - клиентом. Чтобы воспользоваться службой, надо иметь эту пару программ. Клиента надо установить и запустить на своем компьютере, а к серверу надо подключится, правильно введя нужный адрес. Клиенты основных служб Интернета имеются в составе ОС Windows 98.  </p> <p>В основном применяются: </p>   <p><b>World  Wide Web (WWW) </b>- это огромное  собрание  статистических  и интерактивных  документов,  связанных  между собой.   </p>  <p><b>Электронная  почта</b> - E-mail - с ее  помощью можно  послать электронное  письмо (текст  или произвольный  файл) любому  пользователю  Internet. Время доставки  писем - обычно  не более нескольких  часов, а иногда  несколько  минут. В Internet действует  и другая служба  обмена почтовыми  сообщениями  - Web-mail (почта основанная  на WWW).   </p>  <p><b>Телеконференции</b>  (группы новостей)  - это обмен мнениями  с помощью  электронных  писем по поводу  тех или иных  тем. Каждый  пользователь  Internet может подписаться  на интересующие  его телеконференции  (всего их несколько  десятков тысяч,  и посвящены  они самым разным  темам - от проблем  использования  лазерных принтеров  до психологических  расстройств).  При этом пользователь  будет получать  все письма,  посылаемые  в соответствующие  телеконференции,  а может и сам  высказывать  свое мнение  или ответить  на чей-то вопрос.   </p>  <p><b>Серверы  новостей</b> - они  рассылают  новости по тем  или иным темам  в виде электронных  писем. Пользователь  Internet может подписаться,  например, на  получение  биржевых сводок,  политических  сплетен и т.д.   </p>  <p><b>Файловые  серверы (или  FTP-серверы) </b>-  хранилища  файлов. На них  хранятся тексты  документов,  программы,  тексты книг.  Каждый пользователь  Интернет может  получить оглавление  FTP-серверов или  любой из хранящихся  на нем файлов  в виде электронного  письма или  архива.   </p>  <p><b>Службы  поиска</b> - позволяет  найти нужный  документ на  включенных  в Интернет  FTP-серверах. Поиск  может вестись  по ключевым  словам и другим  характеристикам  документа.  Задать запрос  службе поиска  можно в диалоговом  режиме или,  послав ей специально  оформленное  письмо.   </p>  <p><b>Чат  (Internet Relay Chat (IRC)) </b>- для поддержания  так называемого  живого диалога.  Недавно выпущенное  программное  обеспечение  позволяет  проводить  реальные видео-  и аудиконференции.   </p>  <p> <b>WWW - всемирная паутина</b>  </p> <p> WWW представляет собой огромное количество Web-документов, связанных между собой с помощью гиперссылок. </p> <p> Гипертекст - текст, содержащий в себе связи с другими текстами, графической, видео- или звуковой информацией. </p> <p> Гиперссылки позволяют вам перемещаться от одного Web-документа к другому. Щелкнув на ссылке, вы переходите к новой Web-странице. Существуют текстовые гиперссылки и графические. Ссылки в виде текста обычно выделяются подчеркиванием и цветом, а графические рамкой. Если вы поместите указатель мыши на ссылку, он обычно изменяет свой вид и превращается в руку с вытянутым указательным пальцем. Щелкните в этом месте, и ваш броузер откроет Web-страницу, на которую указывает данная ссылка. </p> <p> Каждая Web-страница представляет собой текстовый файл, в который встроены специальные команды языка гипертекстовой разметки HTML (Hyper Text Markup Language).  </p> <p> Для просмотра Web-страниц используются Web-броузеры. Наибольшее распространение получили Internet Explorer и Netscape Navigator. Причем Internet Explorer есть в стандартной поставке Windows 98.  </p> <p> При просмотре некоторых Web-документов окно броузера разделяется на несколько панелей, называемых также кадрами, или фреймами. В различных фреймах отображаются различные данные. Фреймы упрощают работу с Web-страницами, например, в одном фрейме может отображаться оглавление, а в другом - текст документа. Если вы щелкните на одном из пунктов оглавления, содержимое другого фрейма изменится, но оглавление останется на экране, и глядя на него, вы сможете решить, какой документ вызвать следующим.  </p> <p> <b>Выбор кодировки</b> </p> <p> Путешествуя по всемирной паутине, можно наткнуться на Web-страницу, написанную на непонятном языке. Причина в том, что у нас нет единого стандарта кодировки для представления букв.  </p> <p> Часто заботы на себя берут администраторы серверов - в самом начале своих домашних страниц они предоставляют посетителям право выбора кодировки. Тогда надо пощелкать по предложенным ссылкам и остановиться на читаемом варианте. Иногда на странице есть выбор между русской и английской версией.  </p> <p> В тех случаях, когда на странице нет возможности выбрать метод кодировки, можно воспользоваться меню (вид - вид кодировки). Здесь можно включить автоматическое определение кодировки или выбрать кодировку из списка.  </p> <p> Существует, хотя и редко встречается, метод транслитерации: когда русский текст пишется английскими буквами.  </p> <p> Кроме выбора кодировки практически все браузеры позволяют выбрать размер шрифта.  </p> <p> <b>Сохранение Web-страниц</b>  </p> <p> Если мы хотим сохранить страницу в ПК, надо воспользоваться командой в меню Файл - сохранить как. Выбрать тип файла: текстовый, веб-страница только HTML, веб-страница полностью. В первом случае сохранится только текст: без рисунков, элементов форматирования, в том числе таблиц, списков и т.д. (компактно, не зависит от редактора, но возможна потеря информации). Во втором случае документ сохранится в формате HTML: с элементами форматирования, но без графических и других объектов. В третьем варианте страница сохранится полностью: в файле HTML - текстовое содержимое, и в дополнительной папке с тем же именем и расширением .files - все объекты, которые изображены на странице (например, рисунки). </p> <p> Для сохранения рисунка можно щелкнув правой клавишей на рисунке выбрать пункт Сохранить рисунок как. </p> <p> <b>Копирование файлов, найденных в WWW</b>  </p> <p> Для броузера загрузка файлов является вспомогательной и поэтому он справляется с ней не так хорошо, как с загрузкой Web-страниц. Файлы, найденные в Интернете, могут иметь объем от сотен Кбайт до десятков Мбайт, их загрузка может занимать несколько часов. Вы можете столкнуться с неприятной особенностью: если загружаемый файл был принят не полностью, то всю операцию приходится начинать заново. </p> <p> Во избежание подобных проблем, для загрузки больших файлов следует применять отдельные специализированные программы. Назначение подобных программ - облегчение и поддержка загрузки файлов из Интернета. Их называют менеджерами загрузки.  </p> <p> К подобным программам относятся: GetRight, NetVampire, ReGet и другие. </p> <p> <b>Поиск информации</b> </p> <p> Поиск информации - непростая задача. Проблема в том, что информации слишком много. </p> <p> Для поиска информации в сети используются специальные поисковые службы.  </p> <p> Принцип действия у разных поисковых служб может быть различным. </p> <p> Средства поиска разделяются на две категории: поисковые серверы и поисковые каталоги. Кроме этого существуют метапоисковые системы, порталы, рейтинговые службы.  </p> <p> <b>Поисковые серверы (указатели). </b> </p> <p> Обращаясь к поисковому серверу, мы формулируем запрос, в котором описываем то, что хотим найти. Служба формирует документ, состоящий из гиперссылок, ведущих к ресурсам, соответствующим нашему запросу. </p> <p> Основное отличие: полная автоматизация работы, поэтому количество найденных страниц намного больше, но и ниже качество. </p> <p> Поисковая система работает в три этапа:  </p>      <p>специальная   программа,   способная   путешествовать   по узлам и   просматривать   страницы, копирует   их содержание   на центральный   сервер поисковой   системы;    </p>   <p>в   результате   процесса индексации   образуется   база данных;     </p>   <p>упорядоченный   ответ на запрос   с учетом рейтинга.     </p>    <p> Каждая поисковая система предоставляет свои методы поиска и имеет свои особенности в правилах записи ключевых слов. Но если возникают проблемы, всегда можно обратиться к помощи.  </p> <p> <b>Поисковые каталоги. </b> </p> <p> Выбираем тему, затем категорию, подкатегорию, и так далее, и получаем список ресурсов, рекомендованных для просмотра. </p> <p> Основное свойство - "человеческий фактор". Данные проходят ручную обработку, в результате: высокое качество, но маленький объем ресурсов. </p> <p> <b>Метапоисковые системы</b> размещают запрос на нескольких поисковых серверах, собранную и обработанную информацию передают клиенту. Увеличенное время выполнения компенсируется качеством результата. </p> <p> <b>Порталом </b>называются начальные страницы, на которых собраны: полезные ссылки, новости, ссылки на поисковые системы и т.д. Многие поисковые системы превращаются в порталы.  </p> <p> <b>Рейтинговые службы </b>отображают тематические ссылки на наиболее популярные ресурсы. При выборе ссылки срабатывает счетчик, и рейтинг увеличивается. </p>
<br><p> <b>Лекция № 3 Поколения и классификация ЭВМ</b></p>  1.Поколения вычислительной техники   <p> Выделяют пять поколений ЭВМ.  </p> <p> Первое поколение (1945—1954) характеризуется появлением техники на электронных лампах. Это эпоха становления вычислительной техники. Большинство машин первого поколения были экспериментальными устройствами и создавались с целью проверки тех или иных теоретических положений. Вес и размеры этих компьютеров были такими, что они нередко требовали отдельных зданий.  </p> <p> Основоположниками компьютерной науки по праву считаются Клод Шеннон — создатель теории информации, Алан Тьюринг — математик, разработавший теорию программ и алгоритмов, и Джон фон Нейман — автор конструкции вычислительных устройств, которая до настоящего времени лежит в основе большинства компьютеров. В те же годы возникла еще одна новая наука, связанная с информатикой, — кибернетика — наука об управлении как одном из основных информационных процессов. Основателем кибернетики является американский математик Норберт Винер.  </p> <p> Во втором поколении (1955—1964) вместо электронных ламп использовались транзисторы, а в качестве устройств памяти стали применяться магнитные сердечники и барабаны — прототипы современных жестких дисков. Все это позволило сократить габариты и стоимость компьютеров, которые тогда впервые стали производиться на продажу.</p> <p> Но главные достижения этой эпохи относятся к области программ. Во втором поколении впервые появилось то, что сегодня называется операционной системой. Тогда же были разработаны первые языки высокого уровня — Фортран, Алгол, Кобол. Два этих важных усовершенствования позволили значительно упростить и ускорить написание программ для компьютеров.  </p> <p> При этом расширялась сфера применения компьютеров. Теперь уже не только ученые могли рассчитывать на доступ к вычислительной технике, поскольку компьютеры нашли применение в планировании и управлении, а некоторые крупные фирмы даже начали компьютеризировать свою бухгалтерию, предвосхищая этот процесс на двадцать лет.  </p> <p> В третьем поколении (1965—1974) впервые стали использоваться интегральные схемы — целые устройства и узлы из десятков и сотен транзисторов, выполненные на одном кристалле полупроводника (микросхемы). В то же время появилась полупроводниковая память, которая и до настоящего времени используется в персональных компьютерах в качестве оперативной.  </p> <p> В те годы производство компьютеров приняло промышленный размах. Фирма IBM первой реализовала серию полностью совместимых друг с другом компьютеров от самых маленьких, размером с небольшой шкаф (меньше тогда еще не делали), до самых мощных и дорогих моделей. Наиболее распространенным в те годы было семейство System/360 фирмы IBM, на основе которого в СССР была разработана серия ЕС ЭВМ. Еще в начале 1960-х гг. появились первые миникомпьютеры — маломощные компьютеры, доступные по цене небольшим фирмам или лабораториям. Мини-компьютеры были первым шагом на пути к персональным компьютерам, пробные образцы которых были выпущены только в середине 1970-х гг.  </p> <p> Между тем количество элементов и соединений, умещающихся в одной микросхеме, постоянно росло, и в 1970-е гг. интегральные схемы содержали уже тысячи транзисторов.  </p> <p> В 1971 г. фирма Intel выпустила первый микропроцессор, который предназначался для только появившихся настольных калькуляторов. Это изобретение произвело в следующем десятилетии настоящую революцию. Микропроцессор является главной составляющей частью современного персонального компьютера.  </p> <p> На рубеже 1960 —70-х гг. (1969) появилась первая глобальная компьютерная сеть ARPA, прототип современной сети Интернет. В том же 1969 г. одновременно появились операционная система Unix и язык программирования С ("Си"), оказавшие огромное влияние на программный мир и до сих пор сохраняющие свое главенствующее положение.  </p> <p> Четвертое поколение (1975 —1985) характеризуется небольшим количеством принципиальных новаций в компьютерной науке. Прогресс шел в основном по пути развития того, что уже изобретено и придумано, прежде всего, за счет повышения мощности и миниатюризации элементной базы и самих компьютеров.  </p> <p> Самая главная новация четвертого поколения — это появление в начале 1980-х гг. персональных компьютеров. Благодаря им вычислительная техника становится по-настоящему массовой и общедоступной. Несмотря на то, что персональные и мини-компьютеры по-прежнему по вычислительной мощности отстают от солидных машин, большая часть новшеств, таких как графический пользовательский интерфейс, новые периферийные устройства, глобальные сети, связана с появлением и развитием именно этой техники.  </p> <p> Большие компьютеры и суперкомпьютеры, конечно же, продолжают развиваться. Но теперь они уже не доминируют в компьютерном мире, как было раньше.  </p> <p> Некоторые характеристики вычислительной техники четырех поколений приведены в  </p> <table cellpadding="7" cellspacing="0">
<tr>
<td rowspan="2" style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">    <p><b>Характеристика</b></p>   </td>   <td colspan="4" valign="TOP" style="border: 1px solid #000000; padding: 0in 0.08in;">    <p><b>Положение</b></p>   </td>  </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">    <p><b>первое</b></p>   </td>   <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">    <p><b>второе</b></p>   </td>   <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">    <p><b>третье</b></p>   </td>   <td style="border: 1px solid #000000; padding: 0in 0.08in;">    <p><b>четвёртое</b></p>   </td>  </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">    <p><b>Основной    элемент</b></p>   </td>   <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">Электронная    лампа</td>   <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">Транзистор</td>   <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">Интегральная    схема</td>   <td style="border: 1px solid #000000; padding: 0in 0.08in;">Большая    интегральная    схема</td>  </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">    <p><b>Количество    ЭВМ в мире, шт.</b></p>   </td>   <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">Сотни</td>   <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">Тысячи</td>   <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">Десятки    тысяч</td>   <td style="border: 1px solid #000000; padding: 0in 0.08in;">Миллионы</td>  </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">    <p><b>Размер    ЭВМ</b></p>   </td>   <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">Большой</td>   <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">Значительно    меньший</td>   <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">Десятки    тысяч</td>   <td style="border: 1px solid #000000; padding: 0in 0.08in;">Микро    ЭВМ</td>  </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">    <p><b>Быстродействие    (условное)    операций/</b>с</p>   </td>   <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">Несколько    единиц</td>   <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">Несколько    десятков    единиц</td>   <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">Несколько    тысяч единиц</td>   <td style="border: 1px solid #000000; padding: 0in 0.08in;">Несколько    десятков тысяч    единиц</td>  </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">    <p><b>Носитель    информации</b></p>   </td>   <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">Перфокарта,    перфолента</td>   <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">Магнитная    лента</td>   <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">Диск</td>   <td style="border: 1px solid #000000; padding: 0in 0.08in;">Гибкий    диск</td>  </tr>
</table>
<p> Пятое поколение (1986 г. до настоящего времени) в значительной мере определяется результатами работы японского Комитета научных исследований в области ЭВМ, опубликованными в 1981г. Согласно этому проекту ЭВМ и вычислительные системы пятого поколения кроме высокой производительности и надежности при более низкой стоимости с помощью новейших технологий должны удовлетворять следующим качественно новым функциональным требованиям:  </p>   <p>обеспечить  простоту применения  ЭВМ путем реализации  систем ввода/вывода  информации  голосом, а также  диалоговой  обработки  информации  с использованием  естественных  языков;   </p>  <p>обеспечить  возможность  обучаемости,  ассоциативных  построений  и логических  выводов;   </p>  <p>упростить  процесс создания  программных  средств путем  автоматизации  синтеза программ  по спецификациям  исходных требований  на естественных  языках;   </p>  <p>улучшить  основные  характеристики  и эксплуатационные  качества  вычислительной  техники для  удовлетворения  различных  социальных  задач, улучшить  соотношения  затрат и результатов,  быстродействия,  легкости,  компактности  ЭВМ;   </p>  <p>обеспечить  разнообразие  вычислительной  техники, высокую  адаптируемость  к приложениям  и надежность  в эксплуатации.    </p>  <p> В настоящее время ведутся интенсивные работы по созданию оптоэлектронных ЭВМ с массовым параллелизмом и нейронной структурой, представляющих собой распределенную сеть большого числа (десятки тысяч) несложных микропроцессоров, моделирующих архитектуру нейронных биологических систем.</p>  2.Классификация электронно-вычислительных машин   <p> ЭВМ можно классифицировать по ряду признаков:</p>   <p>  По принципу  действия.</p>  <p>  По назначению  ЭВМ.</p>  <p>  По размерам  и функциональным  возможностям.</p> <br><p> </p> <p> <b>По принципу действия ЭВМ</b><b>:</b></p>   <p>  АВМ – аналоговые  вычислительные  машины непрерывного  действия, работают  с информацией,  представленной  в непрерывной  (аналоговой)  форме, т.е. в виде  непрерывного  ряда значений  какой-либо  физической  величины (чаще  всего электрического  напряжения);</p>  <p>  ЦВМ – цифровые  вычислительные  машины дискретного  действия, работают  с информацией,  представленной  в дискретной  (цифровой) форме;    </p>  <p>  ГВМ – гибридные  вычислительные  машины комбинированного  действия, работают  с информацией,  представленной  как в цифровой,  так и аналоговой  форме. ГВМ совмещают  в себе достоинства  АВМ и ЦВМ. Их  целесообразно  использовать  для решения  задач управления  сложными  быстродействующими  техническими  комплексами.</p>  <p> <b>По назначению ЭВМ</b><b>:</b></p>   <p>  универсальные  ЭВМ предназначены  для решения  самых различных  инженерно-технических  задач: экономических,  математических,  информационных  и других, отличающихся  сложностью  алгоритмов  и большим объемом  обрабатываемых  данных;</p>  <p>  проблемно-ориентированные  ЭВМ служат  для решения  более узкого  круга задач,  связанных, как  правило, с  управлением  технологическими  процессами;</p>  <p>  специализированные  ЭВМ используются  для решения  узкого круга  задач или реализации  строго определенной  группы функций.</p>  <p> <b>По размерам и функциональным</b><b>:</b></p>   <p>  сверхмалые  (микро ЭВМ)  обязаны своим  появлением  изобретению  микропроцессора,  наличие которого  первоначально  служило определяющим  признаком  микро ЭВМ, хотя  сейчас микропроцессоры  используются  во всех без  исключения  классах ЭВМ;</p>  <p>  малые (мини-ЭВМ)  используются  чаще всего для  управления  технологическими  процессами;</p>  <p>  большие  ЭВМ чаще  всего называют  мэйнфреймами  (mainframe). Основные  направления  эффективного  применения  мэйнфреймов  – это решение  научно-технических  задач, работа  в вычислительных  системах с  пакетной обработкой  информации,  работа с большими  базами данных,  управление  вычислительными  сетями и их  ресурсами;   </p>  <p>  сверхбольшие  (суперЭВМ) –  мощные многопроцессорные  вычислительные  машины быстродействием  десятки миллиардов  операций в  секунду и объемом  оперативной  памяти десятки  Гбайт.  </p>   3.Принципы строения и функционирования ЭВМ Джона фон Неймана <p> Большинство современных ЭВМ функционирует на основе принципов, сформулированных в 1945 г. американским ученым венгерского происхождения Джоном фон Нейманом.  </p> <p> 1. Принцип двоичного кодирования. Согласно этому, вся информация, поступающая в ЭВМ, кодируется с помощью двоичных символов (сигналов).</p> <p> 2. Принцип программного управления. Компьютерная программа состоит из набора команд, которые выполняются процессором автоматически друг за другом в определенной последовательности.</p> <p> 3. Принцип однородности памяти. Программы и данные хранятся в одной и той же памяти, поэтому ЭВМ не различает, что хранится в данной ячейке памяти — число, текст или команда. Над командами можно выполнять такие же действия, как и над данными.</p> <p> 4. Принцип адресности. Структурно основная память состоит из пронумерованных ячеек, любая из которых доступна процессору в любой момент времени.</p> <p> Согласно фон Нейману, ЭВМ состоит из следующих основных блоков:</p> <p> 1) устройство ввода/вывода информации;</p> <p> 2) память ЭВМ;</p> <p> 3) процессор, включающее устройство управления (УУ) и арифметико-логическое устройство (АЛУ).  </p> <p> </p> <p> В ходе работы ЭВМ информация через устройства ввода попадает в память. Процессор извлекает из памяти обрабатываемую информацию, работает с ней и помещает в нее результаты обработки. Полученные результаты через устройства вывода сообщаются человеку.</p> <p> Память ЭВМ состоит из двух видов памяти: внутренней (оперативной) и внешней (долговременной).  </p> <p> Оперативная память – это электронное устройство, которое хранит информацию, пока питается электроэнергией. Внешняя память – это различные магнитные носители (ленты, диски), оптические диски.  </p> <p> За прошедшие десятилетия процесс совершенствования ЭВМ шел в рамках приведенной обобщенной структуры.</p> <p></p>  4.Классификация персональных компьютеров   <p> Как указывалось выше, персональный компьютер (ПК) представляет собой универсальную однопользовательскую микро ЭВМ.  </p> <p> Персональный компьютер в первую очередь является общедоступной ЭВМ и обладает определенной универсальностью.  </p> <p> Для удовлетворения потребностей пользователя ПК должен обладать следующими свойствами:  </p>   <p>  иметь относительно  небольшую  стоимость,  быть доступным  для индивидуального  покупателя;    </p>  <p>  обеспечивать  автономность  эксплуатации  без специальных  требований  к условиям  окружающей  среды;   </p>  <p>  обеспечивать  гибкость  архитектуры,  делающей возможным  ее перестройку  для разнообразных  применений  в сфере управления,  науки, образования,  в быту;   </p>  <p>  операционная  система и  программное  обеспечение  должны быть  достаточно  простыми, чтобы  с ПК мог работать  пользователь  без профессиональной  специальной  подготовки;    </p>  <p>  иметь высокую  надежность  работы (более  5000 ч наработки  на отказ).   </p>  <p> В соответствии с международным стандартом-спецификацией РС99 ПК по назначению делятся на следующие категории:  </p>   <p>  массовый  ПК (Consumer);   </p>  <p>  деловой ПК  (Office PC);   </p>  <p>  портативный  ПК (Mobile PC);   </p>  <p>  рабочая  станция (Workstation PC);   </p>  <p>  развлекательный  ПК (Entertainment PC).   </p>  <p> Большинство ПК, имеющихся в настоящее время на рынке, являются массовыми. Для деловых ПК минимизированы требования к средствам воспроизведения графики, а к средствам работы со звуковыми данными требования вообще не предъявляются. Для портативных ПК обязательным является наличие средств для создания соединений удаленного доступа, т.е. средств компьютерной связи. В категории рабочих станций повышены требования к устройствам хранения данных, а в категории развлекательных ПК – к средствам воспроизведения звука и видео.  </p> <p> По поколениям ПК делятся:  </p>   <p>  на ПК 1-го  поколения,  используют  8-битные микропроцессоры;</p>  <p>  ПК 2-го поколения,  используют  16-битные микропроцессоры;    </p>  <p>  ПК 3-го поколения,  используют  32-битные микропроцессоры;    </p>  <p>  ПК 4-го поколения,  используют  64-битные микропроцессоры.    </p>  <p> ПК можно также разделить на две большие группы: стационарные и переносные. К переносным компьютерам относятся ноутбуки, электронные записные книжки, секретари и блокноты.</p>
<br><p> <b>Лекция № 2 Кодирование информации</b></p>  1.Кодирование данных двоичным кодом <p> Для автоматизации работы с данными, относящимися к различным типам, очень важно унифицировать их форму представления – для этого обычно используется приём кодирования, то есть выражение данных одного типа через данные другого типа.</p> <p> Набор правил кодирования той или иной разновидности информации называется форматом данных.</p> <p> Система кодирования существует и в вычислительной технике – она называется двоичным кодированием и основана на представлении данных последовательностью данных всего двух знаков: 0 и 1. Эти знаки называются двоичными цифрами, по-английски – binary digit, или, сокращённо, bit (бит). Одним битом могут быть выражены два понятия: 0 или 1 (да или нет, чёрное или белое, истина или ложь и т. п.). Если количество битов увеличить до двух, то уже можно выразить четыре различных понятия:</p>         <table cellpadding="7" cellspacing="0"><tr valign="TOP">
<td style="border: none; padding: 0in;">00</td>     <td style="border: none; padding: 0in;">01</td>     <td style="border: none; padding: 0in;">10</td>     <td style="border: none; padding: 0in;">11</td>    </tr></table>
<p> Тремя битами можно закодировать восемь различных значений:</p>         <table cellpadding="7" cellspacing="0"><tr valign="TOP">
<td style="border: none; padding: 0in;">000</td>     <td style="border: none; padding: 0in;">001</td>     <td style="border: none; padding: 0in;">010</td>     <td style="border: none; padding: 0in;">011</td>     <td style="border: none; padding: 0in;">100</td>     <td style="border: none; padding: 0in;">101</td>     <td style="border: none; padding: 0in;">110</td>     <td style="border: none; padding: 0in;">111</td>    </tr></table>
<p> Увеличивая на единицу количество разрядов в системе двоичного кодирования, мы увеличили в два раза количество значений, которое может быть выражено в данной системе, то есть общая формула имеет вид:</p> <p> N=2m, где:</p> <p> N – количество независимо кодируемых значений;</p> <p> m – разрядность двоичного кодирования, принятая в данной системе.</p>  2.Кодирование целых и действительных чисел <p> Целые числа двоичным кодом закодировать достаточно просто – достаточно перевести число, записанное в десятичной системе счисления, в двоичную.</p> <p> Для кодирования целых чисел от 0 до 255 достаточно иметь 8 разрядов двоичного кода (8 бит). Шестнадцать бит позволяет закодировать целые числа от 0 до 65536, а 24 бита – уже более 16,5 миллионов разных значений.</p> <p> Для кодирования действительных чисел используют 80-разрядное кодирование (т.е. используется 80 бит). При этом число предварительно преобразуется в нормальную форму:  </p> <p> 3,1415926 = 0,3145926·101  </p> <p> 300 000 = 0,3·106  </p> <p> 123 456 789 = 0,123456789·1010</p> <p> Первая часть называется мантиссой, а вторая – характеристикой. Большую часть из 80 бит отводят для характеристики мантиссы (вместе со знаком) и некоторое фиксированное количество разрядов отводят для хранения характеристики (то же со знаком).</p> <p> Для представления числовых данных в компьютере используется два принципиально разных формата:</p>   <p>  с фиксированной  точкой (запятой);</p>  <p>  с плавающей  точкой (запятой).</p>  <p> Формат с фиксированной точкой предназначен для абсолютно точного представления целых чисел. С плавающей точкой используют только нецелых чисел.</p> <p> Представлять числа в компьютере принято виде разрядной сетки.  </p> <p> Так запись числа 18 в восьмиразрядной сетке будет выглядеть следующим образом.</p>   <table cellpadding="7" cellspacing="0">
<tr valign="TOP">
<td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">7     р</td>    <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">6     р</td>    <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">5     р</td>    <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">4     р</td>    <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">3     р</td>    <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">2     р</td>    <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">1     р</td>    <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">0 р</td>   </tr>
<tr valign="TOP">
<td style="border-top: 1.50pt solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">0</td>    <td style="border-top: 1.50pt solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">0</td>    <td style="border-top: 1.50pt solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">0</td>    <td style="border-top: 1.50pt solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">1</td>    <td style="border-top: 1.50pt solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">0</td>    <td style="border-top: 1.50pt solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">0</td>    <td style="border-top: 1.50pt solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">1</td>    <td style="border-top: 1.50pt solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: 1px solid #000000; padding: 0in 0.08in;">0</td>   </tr>
</table>
<p> Максимальное число, которое можно записать в той или иной разрядной сетке будет определяться соотношением 2N-1, где N – значение старшего разряда, т.е. для восьмиразрядной сетки это будет число 127.</p> <p> Как известно целые числа могут быть как положительными, так и отрицательными. Тогда для целого числа -18 запись в восьми разрядной сетке будет выглядеть.</p>   <table cellpadding="7" cellspacing="0">
<tr valign="TOP">
<td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">7     р</td>    <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">6     р</td>    <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">5     р</td>    <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">4     р</td>    <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">3     р</td>    <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">2     р</td>    <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">1     р</td>    <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">0 р</td>   </tr>
<tr valign="TOP">
<td style="border-top: 1.50pt solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">1</td>    <td style="border-top: 1.50pt solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">0</td>    <td style="border-top: 1.50pt solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">0</td>    <td style="border-top: 1.50pt solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">1</td>    <td style="border-top: 1.50pt solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">0</td>    <td style="border-top: 1.50pt solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">0</td>    <td style="border-top: 1.50pt solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">1</td>    <td style="border-top: 1.50pt solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: 1px solid #000000; padding: 0in 0.08in;">0</td>   </tr>
</table>
<p> Старший разряд (7) – знаковый разряд. Если в старшем разряде стоит 1 – отрицательное число, 0 – число положительное.</p> <p> Запись числа с плавающей точкой в виде 80-ти разрядного кода выглядит так:</p>   <table cellpadding="7" cellspacing="0">
<tr valign="TOP">
<td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: 1.50pt solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">Код     знака числа</td>    <td colspan="4" style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: 1.50pt solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">     <p>     Код     порядка</p>     <p>15бит</p>    </td>    <td colspan="9" style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: 1.50pt solid #000000; border-right: 1.50pt solid #000000; padding: 0in 0.08in;">     <p>     Код     мантиссы</p>     <p>64 бита</p>    </td>   </tr>
<tr valign="TOP">
<td style="border-top: 1.50pt solid #000000; border-bottom: 1.50pt solid #000000; border-left: 1.50pt solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">79     р</td>    <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: 1.50pt solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">78     р</td>    <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">……</td>    <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">65р</td>    <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">64р</td>    <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: 1.50pt solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">63р……8р</td>    <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">7     р</td>    <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">6     р</td>    <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">5     р</td>    <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">4     р</td>    <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">3     р</td>    <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">2     р</td>    <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">1     р</td>    <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: 1.50pt solid #000000; padding-top: 0in; padding-bottom: 0in; padding-left: 0in; padding-right: 0.08in;">0 р</td>   </tr>
<tr valign="TOP">
<td style="border-top: 1.50pt solid #000000; border-bottom: 1px solid #000000; border-left: 1.50pt solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">1</td>    <td style="border-top: 1.50pt solid #000000; border-bottom: 1px solid #000000; border-left: 1.50pt solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">0</td>    <td style="border-top: 1.50pt solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">……</td>    <td style="border-top: 1.50pt solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">0</td>    <td style="border-top: 1.50pt solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">0</td>    <td style="border-top: 1.50pt solid #000000; border-bottom: 1px solid #000000; border-left: 1.50pt solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">0…….0</td>    <td style="border-top: 1.50pt solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">1</td>    <td style="border-top: 1.50pt solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">0</td>    <td style="border-top: 1.50pt solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">0</td>    <td style="border-top: 1.50pt solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">1</td>    <td style="border-top: 1.50pt solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">0</td>    <td style="border-top: 1.50pt solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">0</td>    <td style="border-top: 1.50pt solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">1</td>    <td style="border-top: 1.50pt solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: 1.50pt solid #000000; padding: 0in 0.08in;">0</td>   </tr>
</table>   3.Кодирование текстовых данных <p> Начиная с 60-х годов, компьютеры все больше стали использовать для обработки текстовой информации и в настоящее время большая часть ПК в мире занято обработкой именно текстовой информации.</p> <p> Традиционно для кодирования одного символа используется количество информации = 1 байту (1 байт = 8 битов).</p> <p> Для кодирования <b>одного символа</b> требуется <b>один байт</b> информации.</p> <p> Учитывая, что каждый бит принимает значение 1 или 0, получаем, что с помощью 1 байта можно закодировать 28=256 различных символов.</p> <p> Кодирование заключается в том, что каждому символу ставится в соответствие уникальный двоичный код от 00000000 до 11111111 (или десятичный код от 0 до 255).</p> <p> Важно, что присвоение символу конкретного кода – это вопрос соглашения, которое фиксируется кодовой таблицей.</p> <p> Таблица кодировки</p> <p> Таблица, в которой всем символам компьютерного алфавита поставлены в соответствие порядковые номера (коды), называется таблицей кодировки.</p> <p> Для разных типов ЭВМ используются различные кодировки. С распространением IBM PC международным стандартом стала таблица кодировки <b>ASCII</b> (American Standart Code for Information Interchange) – Американский стандартный код для информационного обмена.</p> <p> Таблица кодировки ASCII.</p> <p> Стандартной в этой таблице является только первая половина, т.е. символы с номерами от 0 (00000000) до 127 (0111111). Сюда входят буква латинского алфавита, цифры, знаки препинания, скобки и некоторые другие символы.</p> <p> Остальные 128 кодов (с 128 по 255) используются в разных вариантах. В русских кодировках размещаются символы русского алфавита.</p>   <table cellpadding="7" cellspacing="0">
<tr>
<td style="border-top: 1.50pt solid #000000; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">Символ</td>     <td style="border-top: 1.50pt solid #000000; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">Двоичный      код</td>     <td style="border-top: 1.50pt solid #000000; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">Символ</td>     <td style="border-top: 1.50pt solid #000000; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">Двоичный      код</td>     <td style="border-top: 1.50pt solid #000000; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">Символ</td>     <td style="border-top: 1.50pt solid #000000; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">Двоичный      код</td>     <td style="border-top: 1.50pt solid #000000; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">Символ</td>     <td style="border-top: 1.50pt solid #000000; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">Двоичный      код</td>    </tr>
<tr valign="TOP">
<td style="border-top: 1.50pt solid #000000; border-bottom: none; border-left: none; border-right: none; padding: 0in;">      <p><b>А</b></p>     </td>     <td style="border-top: 1.50pt solid #000000; border-bottom: none; border-left: none; border-right: none; padding: 0in;">10000000</td>     <td style="border-top: 1.50pt solid #000000; border-bottom: none; border-left: none; border-right: none; padding: 0in;">      <p><b>И</b></p>     </td>     <td style="border-top: 1.50pt solid #000000; border-bottom: none; border-left: none; border-right: none; padding: 0in;">10001000</td>     <td style="border-top: 1.50pt solid #000000; border-bottom: none; border-left: none; border-right: none; padding: 0in;">      <p><b>Р</b></p>     </td>     <td style="border-top: 1.50pt solid #000000; border-bottom: none; border-left: none; border-right: none; padding: 0in;">10010000</td>     <td style="border-top: 1.50pt solid #000000; border-bottom: none; border-left: none; border-right: none; padding: 0in;">      <p><b>Ш</b></p>     </td>     <td style="border-top: 1.50pt solid #000000; border-bottom: none; border-left: none; border-right: none; padding: 0in;">10011000</td>    </tr>
<tr valign="TOP">
<td style="border: none; padding: 0in;">      <p><b>Б</b></p>     </td>     <td style="border: none; padding: 0in;">10000001</td>     <td style="border: none; padding: 0in;">      <p><b>Й</b></p>     </td>     <td style="border: none; padding: 0in;">10001001</td>     <td style="border: none; padding: 0in;">      <p><b>С</b></p>     </td>     <td style="border: none; padding: 0in;">10010001</td>     <td style="border: none; padding: 0in;">      <p><b>Щ</b></p>     </td>     <td style="border: none; padding: 0in;">10011001</td>    </tr>
<tr valign="TOP">
<td style="border: none; padding: 0in;">      <p><b>В</b></p>     </td>     <td style="border: none; padding: 0in;">10000010</td>     <td style="border: none; padding: 0in;">      <p><b>К</b></p>     </td>     <td style="border: none; padding: 0in;">10001010</td>     <td style="border: none; padding: 0in;">      <p><b>Т</b></p>     </td>     <td style="border: none; padding: 0in;">10010010</td>     <td style="border: none; padding: 0in;">      <p><b>Ъ</b></p>     </td>     <td style="border: none; padding: 0in;">10011010</td>    </tr>
<tr valign="TOP">
<td style="border: none; padding: 0in;">      <p><b>Г</b></p>     </td>     <td style="border: none; padding: 0in;">10000011</td>     <td style="border: none; padding: 0in;">      <p><b>Л</b></p>     </td>     <td style="border: none; padding: 0in;">10001011</td>     <td style="border: none; padding: 0in;">      <p><b>У</b></p>     </td>     <td style="border: none; padding: 0in;">10010011</td>     <td style="border: none; padding: 0in;">      <p><b>Ы</b></p>     </td>     <td style="border: none; padding: 0in;">10011011</td>    </tr>
<tr valign="TOP">
<td style="border: none; padding: 0in;">      <p><b>Д</b></p>     </td>     <td style="border: none; padding: 0in;">10000100</td>     <td style="border: none; padding: 0in;">      <p><b>М</b></p>     </td>     <td style="border: none; padding: 0in;">10001100</td>     <td style="border: none; padding: 0in;">      <p><b>Ф</b></p>     </td>     <td style="border: none; padding: 0in;">10010100</td>     <td style="border: none; padding: 0in;">      <p><b>Ь</b></p>     </td>     <td style="border: none; padding: 0in;">10011100</td>    </tr>
<tr valign="TOP">
<td style="border: none; padding: 0in;">      <p><b>Е</b></p>     </td>     <td style="border: none; padding: 0in;">10000101</td>     <td style="border: none; padding: 0in;">      <p><b>Н</b></p>     </td>     <td style="border: none; padding: 0in;">10001101</td>     <td style="border: none; padding: 0in;">      <p><b>Х</b></p>     </td>     <td style="border: none; padding: 0in;">10010101</td>     <td style="border: none; padding: 0in;">      <p><b>Э</b></p>     </td>     <td style="border: none; padding: 0in;">10011101</td>    </tr>
<tr valign="TOP">
<td style="border: none; padding: 0in;">      <p><b>Ж</b></p>     </td>     <td style="border: none; padding: 0in;">10000110</td>     <td style="border: none; padding: 0in;">      <p><b>О</b></p>     </td>     <td style="border: none; padding: 0in;">10001110</td>     <td style="border: none; padding: 0in;">      <p><b>Ц</b></p>     </td>     <td style="border: none; padding: 0in;">10010110</td>     <td style="border: none; padding: 0in;">      <p><b>Ю</b></p>     </td>     <td style="border: none; padding: 0in;">10011110</td>    </tr>
<tr valign="TOP">
<td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">      <p><b>З</b></p>     </td>     <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">10000111</td>     <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">      <p><b>П</b></p>     </td>     <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">10001111</td>     <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">      <p><b>Ч</b></p>     </td>     <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">10010111</td>     <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">      <p><b>Я</b></p>     </td>     <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">10011111</td>    </tr>
</table>
<p> Отсутствие стандартов в этой области привело к множественности одновременно действующих кодировок. Так, например, кодировка символов русского алфавита, известная как кодировка Windows-1251, была введена «извне» – компанией Microsoft, но учитывая широкое распространение операционных систем и других продуктов этой компании на постсоветском пространстве, она глубоко закрепилась и нашла широкое распространение.</p> <p> В настоящее время существует 5 разных кодовых таблиц для русских букв (КОИ-7, КОИ-8, СР1251, СР866, Mac, ISO).</p> <p> КОИ – код обмена информации семизначный (восьмизначный).</p> <p> СР – Code Page (кодовая страница).</p> <p> В настоящее время получил широкое распространение новый международный стандарт Unicode – универсальная система кодирования, который отводит на каждый символ два байта. С его помощью можно закодировать 65536 (216= 65536) различных символов.</p>  4.Кодирование графических данных <p> Если рассмотреть с помощью увеличительного стекла чёрно – белое изображение, напечатанное на бумаге, то можно увидеть, что оно состоит из мельчайших точек, образующий характерный узор, называемый растром.</p> <p> </p> <p> Растровое изображение представляет собой совокупность точек (пикселей) разных цветов.</p> <p> Поскольку линейные координаты и индивидуальные свойства каждой точки (т.е. яркость) можно выразить с помощью целых чисел, то можно сказать, что растровое координирование позволяет использовать двоичный код для представления графических данных. Общепринятым на сегодняшний день считается представление чёрно-белых иллюстраций в виде комбинации точек с 256 градациями серого цвета, и таким образом, для кодирования яркости любой точки обычно достаточно восьмиразрядного двоичного числа.</p> <p> Для кодирования графических изображений применяется принцип декомпозиции произвольного цвета на основные составляющие. В качестве таких составляющих используют три основные цвета:</p>   <p>  красный  – (Red,  R);</p>  <p>  зелёный – (Green,  G);</p>  <p>  синий –  (Blue,  B);</p>  <p> На практике считается (хотя теоретически это не совсем так), что любой цвет, видимый человеческим глазом, можно получить путём механического смешивания этих трёх основных цветов. Такая система называется RGB по первым буквам названий основного цвета.</p> <p> Если для кодирования яркости каждой из основных составляющих соответствует 256 значений (восемь двоичных разрядов), как принято в полутоновых чёрно-белых изображений, то на кодирования цвета одной точки надо затратить 24 разряда. При этом система кодирования обеспечивает однозначное определение около 17 млн различных цветов, что на самом деле близко к чувствительности человеческого глаза. Режим представления цветной графики с использованием 24 двоичных разрядов называется полноцветным режимом (True Color).</p> <p> Каждому из основных цветов можно поставить в соответствие дополнительный цвет, то есть, дополняющий основной цвет до белого. Нетрудно заметить, что для любого из основных цветов дополнительным будет цвет, образованный суммой пары остальных основных цветов. Соответственно дополнительными цветами являются:</p>   <p>  голубой (Cyan,  C);</p>  <p>  пурпуровый  (Magenta, M);</p>  <p>  жёлтый (Yellow,  Y).</p>  <p> Принцип декомпозиции произвольного цвета на составляющие компоненты можно применять не только для основных цветов, но и для дополнительных, то есть любой цвет можно представить в виде суммы голубой, пурпуровой и жёлтой составляющей. Такой метод кодирования цвета принят в полиграфии, но в полиграфии используется ещё и четвёртая краска – чёрная (Black, B). Поэтому данная система кодирования обозначается четырьмя буквами CMYK (чёрный цвет обозначается буквой K потому, что буква B уже занята синим цветом), и для представления цветовой графики в этой системе координат надо иметь 32 двоичных разряда. Такой режим тоже называется полноцветным режимом (True Color).</p> <p> Если уменьшить количество двоичных разрядов, используемых для кодирования цвета каждой точки, то можно сократить объём данных, но при этом диапазон кодированных цветов заметно сокращается. Кодирование цветной графики 16-разрядными двоичными числами называется режимом High Color.</p> <p> При кодировании информации о цвете с помощью восьми бит данных можно передать только 256 цветовых оттенков. Такой метод кодирования называется индексным. Смысл названия в том, что поскольку 256 значений совершенно недостаточно, чтобы передать весь диапазон цветов, но достаточно, чтобы передать номер (индекс) цвета в некой справочной таблице называемой палитрой.  </p>  5.Кодирование звуковой информации <p> Приёмы и методы работы со звуковой информацией в вычислительной техники появились значительно позже. К тому же в отличие от числовых, текстовых и графических данных у звукозаписей не было столь же длительной и проверенной истории кодирования. В итоге методы кодирования звуковой информации далеки от стандартизации. Множество отдельных компаний разработали свои корпоративные стандарты, но если говорить обобщенно, то можно выделить два основных направления. </p> <p> Метод FM (Frequency Modulation) основан на том, что любой сложный звук можно разбить на последовательность простейших гармонических сигналов разных частот, каждый из которых представляет правильную синусоиду, а следовательно, может быть описан числовыми параметрами, то есть кодом. В природе звуковые сигналы имеют непрерывный спектр, то есть являются аналоговыми. Их разложение в гармонические ряды и представление в виде дискретных цифровых сигналов выполняют специальные устройства – аналого-цифровые преобразователи (АЦП). Обратное преобразование для воспроизведения звука, закодированным двоичным кодом, выполняют цифро-аналоговые преобразователи (ЦАП). При таких преобразованиях неизбежны потери информации, связанные с методами кодирования, поэтому качество звукозаписи обычно получается не вполне удовлетворительным, соответствует качеству простейших музыкальных инструментов с окрасом, характерным для электронной музыки. В то же время, данный метод кодирования обеспечивает весьма компактный код, и поэтому нашёл применение ещё в те годы, когда ресурсы и средства вычислительной техники были недостаточны. </p> <p> Метод таблично-волнового (Wave-Table) синтеза лучше соответствует современному уровню развития техники. Если говорить упрощенно, то можно сказать, что где-то в заранее подготовленных таблицах хранятся образцы звуков для множества различных электромузыкальных инструментов (хотя не только для них). В технике такие образцы называются сэмплами. Числовые коды выражают тип инструмента, номер его модели, высоту тона, продолжительность и интенсивность звука, динамику его изменения, некоторые параметры его среды, в которой происходит звучание, а также прочие параметры, характеризующие особенности звука. Поскольку в качестве образцов используются «реальные» звуки, то качество звука, полученное в результате синтеза, получается очень высоким и приближается к качеству реальных музыкальных инструментов.</p>  6.Единицы представления данных <p> Существует множество систем представления данных. С одной из них, принятой в информатике и вычислительной технике, двоичным кодом, мы познакомились выше. Наименьшей единицей такого представления является бит (двоичный разряд). Совокупность двоичных разрядов, выражающих числовые или иные данные, образуют некий битовый рисунок. Практика показывает, что битовым представлением удобнее работать, если этот рисунок имеет регулярную форму. В настоящее время в качестве таких форм используются группы из восьми битов, которые называют байтами.</p>   <table cellpadding="7" cellspacing="0">
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">     <p><b>Десятичное     число</b></p>    </td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">     <p><b>Двоичное     число</b></p>    </td>    <td style="border: 1px solid #000000; padding: 0in 0.08in;">     <p><b>Байт</b></p>    </td>   </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">1</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">1</td>    <td style="border: 1px solid #000000; padding: 0in 0.08in;">0000 0001</td>   </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">2</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">10</td>    <td style="border: 1px solid #000000; padding: 0in 0.08in;">0000 0010</td>   </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">…</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">…</td>    <td style="border: 1px solid #000000; padding: 0in 0.08in;">…</td>   </tr>
<tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">255</td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">11111111</td>    <td style="border: 1px solid #000000; padding: 0in 0.08in;">1111 1111</td>   </tr>
</table>
<p> Понятие о байте как о группе взаимосвязанных битов появились вместе с первыми образцами электронной вычислительной техники. Долгое время понятие байта было машинно-зависимым, то есть в различных вычислительных машинах длина байта была разной. Только в конце 60-х годов понятие байта стало универсальным и машинно-независимым. </p> <p> Выше мы видели, что во многих случаях целесообразно использовать не восьмиразрядное кодирование, 16-разрядное, 24-разрядное, 32-разрядное и более. Группа из 16-ти взаимосвязанных бит (двух взаимосвязанных байтов) в информатике называется словом. Соответственно, группа из четырёх взаимосвязанных байтов (32 разряда) называются удвоенным словом, а группа из восьми байтов (64 разряда) – учетверённым словом.  </p>  7.Единицы измерения данных   <p> Существует много систем и единиц измерения данных. Каждая научная дисциплина и каждая область человеческой деятельности может использовать свои, наиболее удобные и традиционно устоявшиеся единицы. В информатике для измерения данных используют тот факт, что разные типы данных имеют универсальное двоичное представление и поэтому вводят свои единицы данных, основанные на нём.</p> <p> Наименьшей единицей измерения является байт. Поскольку одним байтом, как правило, кодируется один символ текстовой информации, то для текстовых документов размер в байтах соответствует лексическому объёму в символах (пока исключение составляет универсальная кодировка UNICODE).</p> <p> Более крупная единица – килобайт (Кбайт). Условно можно считать 1 Кбайт примерно равен 1000 байт. Условность связана с тем, что для вычислительной техники, работающей с двоичными числами, более удобно представление чисел в виде степени двойки и потому на самом деле 1 Кбайт равен 210 байт (1024 байт). </p> <p> В килобайтах измеряют сравнительно небольшие объёмы данных. Условно можно считать, что одна страница неформатированного машинного текста составляет около 2 Кбайт.</p> <p> Более крупные единицы измерения данных образуются добавлением префиксов мега-, гига-, тера-, пента-, экса-, зета-, йотта-.</p>   <table cellpadding="7" cellspacing="0">
<tr valign="TOP">
<td style="border-top: 1.50pt solid #000000; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">      <p><b>Единицы</b></p>     </td>     <td style="border-top: 1.50pt solid #000000; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">      <p><b>Значения</b></p>     </td>     <td style="border-top: 1.50pt solid #000000; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">      <p><b>Метрический      аналог</b></p>     </td>    </tr>
<tr valign="TOP">
<td style="border-top: 1.50pt solid #000000; border-bottom: none; border-left: none; border-right: none; padding: 0in;">1 Кбайт</td>     <td style="border-top: 1.50pt solid #000000; border-bottom: none; border-left: none; border-right: none; padding: 0in;">1024 байта      (210 )</td>     <td style="border-top: 1.50pt solid #000000; border-bottom: none; border-left: none; border-right: none; padding: 0in;">1000 (102)</td>    </tr>
<tr valign="TOP">
<td style="border: none; padding: 0in;">1 Мбайт</td>     <td style="border: none; padding: 0in;">1024 Кбайт (220      )</td>     <td style="border: none; padding: 0in;">1000000 (106)</td>    </tr>
<tr valign="TOP">
<td style="border: none; padding: 0in;">1 Гбайт</td>     <td style="border: none; padding: 0in;">1024 Мбайт (230      )</td>     <td style="border: none; padding: 0in;">109</td>    </tr>
<tr valign="TOP">
<td style="border: none; padding: 0in;">1 Тбайт</td>     <td style="border: none; padding: 0in;">1024 Гбайт      (240)</td>     <td style="border: none; padding: 0in;">1012</td>    </tr>
<tr valign="TOP">
<td style="border: none; padding: 0in;">1 Пбайт</td>     <td style="border: none; padding: 0in;">1024 Тбайт      (250 )</td>     <td style="border: none; padding: 0in;">1015</td>    </tr>
<tr valign="TOP">
<td style="border: none; padding: 0in;">1 Эбайт</td>     <td style="border: none; padding: 0in;">1024 Пбайт      (260 )</td>     <td style="border: none; padding: 0in;">1018</td>    </tr>
<tr valign="TOP">
<td style="border: none; padding: 0in;">1 Збайт</td>     <td style="border: none; padding: 0in;">1024 Эбайт      (270)</td>     <td style="border: none; padding: 0in;">1021</td>    </tr>
<tr valign="TOP">
<td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">1 Йбайт</td>     <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">1024 Збайт      (280)</td>     <td style="border-top: none; border-bottom: 1.50pt solid #000000; border-left: none; border-right: none; padding: 0in;">1024</td>    </tr>
</table>
<p> Особо обратим внимание на то, что при переходе к более крупным единицам «инженерная» погрешность, связанная с округлением, накапливается и становится недопустимой, поэтому на старших единицах измерения округления производятся реже.</p>  8.Единицы хранения данных <p> При хранении данных решается две проблемы: как сохранить данные в наиболее компактном виде и как обеспечить удобный и быстрый доступ.  </p> <p> Для обеспечения доступа необходимо, чтобы данные имели упорядоченную структуру, а при этом образуется «паразитная нагрузка» в виде адресных данных. Без них нельзя получить доступ к нужным элементам данных, входящих в структуру.</p> <p> Поскольку адресные данные тоже имеют размер и тоже подлежат хранению, хранить данные в виде мелких единиц, таких как байт, неудобно. Их неудобно хранить и в более крупных единицах (килобайт, мегабайт и т.п.), поскольку неполное заполнение одной единицы хранения приводит к неэффективности хранения.</p> <p> В качестве единицы хранения данных принят объект переменной длины, называемый файлом. Файл – это последовательность произвольного числа байтов, обладающая уникальным собственным именем. Обычно в отдельном файле хранят данные, относящиеся к одному типу. В этом случае тип данных определяет тип файла.</p> <p> Проще всего представить себе файл в виде безразмерного канцелярского досье, в которое можно пожеланию добавлять содержимое или извлекать оттуда. Поскольку в определении файла нет ограничений на размер, можно представить себе файл, имеющий 0 байт (пустой файл), и файл, имеющий любое число байтов.</p> <p> В определении файл особое внимание уделяется имени. Оно фактически несёт в себе адресные данные, без которых данные, хранящиеся файле, не станут информацией из-за отсутствия метода доступа к ним. Кроме функций, связанных с адресацией имя файла может хранить и сведения о типе данных, заключённых в нём. Для автоматических средств работы с данными это важно, поскольку по имени файла они могут автоматически определить адекватный метод извлечения информации из файла.</p> <br><br><p> <b>Лекция № 4 Типовой комплект персонального компьютера</b></p>     Типовой  комплект  персонального  компьютера      <p> В соответствии со структурой ЭВМ Джона фон Неймана (см. рис. 2.1) типовой комплект ПК должен обеспечивать функционирование основных структурных составляющих. </p> <p> Конструктивно типовой комплект состоит из системного блока, монитора, клавиатуры, мыши и печатающего устройства (принтера).  </p> <p> Внутри системного блока находятся две из трех (см. параграф 2.3) основных структурных составляющих: процессор и память.  </p> <p> Системный блок включает: </p> <p> 1) системную (материнскую) плату, где расположены процессор, оперативная и постоянная память, которые выполнены в виде больших интегральных микросхем (БИС). Кроме них на системной плате расположены генератор тактовых импульсов (ГТИ) и специальные переключатели, которые необходимы для обеспечения работы компьютера при выбранном составе внешних устройств;  </p> <p> 2) адаптеры, контроллеры и порты — устройства, обеспечивающие связь с внешними устройствами; </p> <p> 3) накопители на жестких магнитных дисках (НЖМД), на гибких магнитных дисках (НГМД), на оптических дисках (НОД);  </p> <p> 4) блок питания. </p> <p> Примечание. Конструктивно адаптеры, контроллеры могут располагаться непосредственно на системной плате.  </p> <p> Монитор, клавиатура, мышь и принтер являются базовыми устройствами ввода/вывода, обеспечивающими минимально необходимые функции ПК.  </p> <p> С помощью клавиатуры в ПК пользователем вводится символьно-цифровая информация. </p> <p> Монитор (экран) служит для отображения информации в удобном для пользователя виде. В настоящее время имеются мониторы с электронно-лучевой трубкой и жидкокристаллические. Размеры мониторов измеряются в дюймах (”) по диагонали. Стандартными являются 14”, 15”,17”, 19”, 21” мониторы. Кроме размеров важнейшей характеристикой монитора является частота обновления. Чем выше частота обновления, тем лучше качество изображения. Современные мониторы работают на частоте 75, 85, 100 или 120 Гц. Наилучшим качеством отличаются мониторы фирм LG и Samsung.  </p> <p> Мышь позволяет в графической среде Windows осуществлять управление курсором на экране монитора, а также запускать выполнение команд и программ. Мыши бывают механические и оптические. </p> <p> С помощью принтера осуществляется вывод информации на бумажные носители. В зависимости от способа и принципа печати принтеры делятся на лазерные, струйные (чернильные) и матричные (игольчатые). Наиболее распространены в настоящее время на рынке принтеры фирм Hewlett Packard, Epson, Lexmark, Xerox.</p>     Структурная  схема персонального  компьютера,  внутреннее  устройство      <p> Структурная схема ПК представлена на рис. 1.  </p> <p> Микропроцессор (МП) является основным элементом ПК и предназначен для управления работой всего ПК, а также для выполнения арифметических и логических операций. В настоящее время наиболее распространенными моделями являются микропроцессоры Pentium, Celeron фирмы Intel и Athlon фирмы AMD. В состав микропроцессора входят:  </p> <p> • арифметико-логическое устройство (АЛУ) предназначено для выполнения всех арифметических и логических операций над числовой и символьной информацией (в некоторых моделях ПК для ускорения выполнения операций к АЛУ подключается дополнительный математический сопроцессор); </p> <p> • регистры общего назначения (РОН) — быстродействующие ячейки памяти, используемые в основном как различные счетчики и указатели на адресное пространство ПК. В современных микропроцессорах имеется шестнадцать 64-битных регистров общего назначения. Обращение к регистрам позволяет значительно увеличить быстродействие выполняемой программы;  </p> <p> • кэш-память — блок высокоскоростной памяти, в которую копируются данные, извлеченные из оперативной памяти. Такое сохранение основных команд позволяет повысить производительность процессора. Современные микропроцессоры имеют кэш-память первого (L1) и второго (L2) уровней. Кэш-память первого уровня (L1), как правило, имеет объем 128 Кбайт, емкость кэш-памяти второго уровня достигает 1 Мбайта;  </p> <p> • устройство управления (УУ) формирует и подает во все элементы ПК в нужные моменты времени определенные сигналы управления (управляющие импульсы), обусловленные спецификой выполняемой операции и результатами предыдущих операций;  </p> <p> • схемы управления шиной реализуют сопряжение и связь с другими устройствами ПК через системную шину. Системная шина обеспечивает сопряжение и связь всех устройств ПК между собой, передачу информации между всеми устройствами системного блока. Современные системные шины имеют разрядность 64 бита и тактовую частоту до 800 МГц.  </p> <p> Генератор тактовых импульсов (ГТИ) генерирует последовательность электрических импульсов. Промежуток времени между соседними импульсами определяет время одного такта работы машины или просто такт работы машины. Частота генератора тактовых импульсов является одной из основных характеристик ПК и во многом определяет скорость его работы, так как каждая операция в машине выполняется за определенное количество тактов. Современные ПК имеют тактовую частоту до 3,6 ГГц.  </p> <p> Внутренняя память предназначена для хранения и обмена информацией, содержит два вида запоминающих устройств:  </p> <p> • постоянное запоминающее устройство (ПЗУ, ROM — read only memory) служит для хранения неизменяемой (постоянной) программной и справочной информации, позволяет оперативно только считывать хранящуюся в нем информацию (изменить информацию в ПЗУ нельзя). В ПЗУ хранятся программы самотестирования ПК при включении питания, программы начальной загрузки операционной системы, программы установки конфигурации системы и некоторые другие. Наряду с постоянной памятью используется энергонезависимая полупостоянная память (ППЗУ, CMOS), хранящая параметры конфигурации компьютера, она может быть изменена;</p> <p> • оперативное запоминающее устройство (ОЗУ, RAM – random access memory) предназначено для оперативной записи, хранения и считывания информации (программ и данных), непосредственно участвующей в информационно-вычислительном процессе, выполняемом ПК в текущий период. Главными достоинствами оперативной памяти являются ее высокое быстродействие и возможность обращения к каждой ячейке памяти отдельно (прямой адресный доступ к ячейке). В качестве недостатка ОЗУ следует отметить невозможность сохранения информации в ней после выключения питания машины (энергозависимость). Современные ПК имеет ОЗУ объемом 1 или 2 Гбайт.  </p> <p> Видеоадаптеры (видеокарты) предназначены для подключения монитора к компьютеру. Физически они осуществляют формирование сигнала для отображения на дисплее данных синхронизирующими сигналами — горизонтальной (строчной) и вертикальной (кадровой) развертки. В настоящее время широко используется стандарт SVGA (Super Video Graphics Array). Видеоустройства, поддерживающие стандарт SVGA, способны отображать до 16,8 млн цветов и обеспечивают максимально качественное изображение, приближенное к натуральному цвету.  </p> <p> Контроллеры НЖМД, НГМД и НОД представляют собой специализированные устройства, обеспечивающие подключение и функционирование накопителя на жестких магнитных диска (НЖМД—винчестер), накопителя на гибких магнитных дисках (НГМД – дискета) и накопителя на оптических дисках (CD-диск) соответственно. </p> <p> Сетевой адаптер (сетевая плата) является устройством для подключения ПК к локальной компьютерной сети. Наиболее распространенными в настоящее время являются сетевые адаптеры, функционирующие на основе технологии Ethernet и Fast Ethernet и обеспечивающие скорости передачи данных 10 и 100 Мбит/с соответственно. </p> <p> Порты (интерфейсы) представляют собой совокупность программных и аппаратных средств для подключения внешних устройств. Конструктивно порты на системном блоке представляют собой стандартные разъемы. Параллельные порты (LPT) позволяют передавать за один такт целый байт информации и применяются для быстрой связи на небольших расстояниях. Последовательные порты (СОМ) за один такт передают один бит информации и работают медленнее, но позволяют передавать данные на большие расстояния. Следует, однако, отметить, что современные последовательные порты типа TJSB и IEEE 1394 превосходят по скорости параллельные и поэтому вытесняют последние. Специальные порты служат для подключения клавиатуры, микрофона и динамиков (для управления последними используется звуковая карта – мультимедийное устройство, позволяющее воспроизводить музыку и внятную человеческую речь). Игровой порт служит для подключения специального механического устройства джойстика, используемого в компьютерных играх.  </p> <p> Слоты расширения представляют собой пустые разъемы на системной плате, куда могут вставляться дополнительные внутренние устройства.</p>
<br><p></p> <p></p>     Внешнее  устройство  персонального  компьютера      <p> Внешнее устройство ПК обеспечивает взаимодействие машины с окружающей средой пользователями, объектами управления и другими ЭВМ. Внешние устройства весьма разнообразны и могут быть классифицированы по ряду признаков. В частности, по назначению можно выделить следующие виды внешних устройств: </p> <p> • внешние запоминающие устройства (ВЗУ), или внешняя память ПК;  </p> <p> • диалоговые средства пользователя; </p> <p> • устройства ввода информации; </p> <p> • устройства вывода информации; </p> <p> • средства связи и телекоммуникации.</p> <p> Некоторые внешние устройства (монитор, принтер, клавиатура, мышь) являются типовыми внешними устройствами. Следует также отметить, что номенклатура внешних устройств все время меняется, и это связано с постоянными попытками упростить процесс общения человека с машиной.  </p> <p> Среди наиболее распространенных в настоящее время внешних устройств ПК отметим сканер, модем, принтер. </p> <p> <b>Сканер</b> предназначен для считывания с бумажных носителей и ввода в ПК машинописных текстов, графиков, рисунков, чертежей. Сканеры можно классифицировать по ряду признаков: </p>   <p>  по способу  использования  (ручные, планшетные,  пакетной обработки);</p>  <p>  скорости обработки  (количество  листов в минуту);  методу сканирования  (однопроходной,  двухпроходной);</p>  <p>  разрешающей  способности  (величина dpi  — количество  точек на дюйм)  т.д.</p>  <p> Сканеры, как правило, позволяют представлять информацию как в текстовом режиме с распознаванием символов, так и в графическом виде. Наиболее распространенными на рынке являются сканеры фирм Xerox, Ricoh.  </p> <p> <b>Модем</b> служит для подключения ПК к глобальной компьютерной сети Интернет по телефонным линиям связи. Модемы преобразуют цифровой сигнал в аналоговый с помощью методов аналоговой модуляции. В зависимости от режимов работы различные модемы обеспечивают различные скорости передачи данных: от 1,2 до 56,0 Кбит/с.  </p>
<br><br><br><p> <b>Лекция № 5 Иерархия памяти персонального компьютера</b></p>  1.Иерархия памяти персонального компьютера <p> <b>Память ПК</b> – это совокупность отдельных устройств, которые запоминают, хранят и выдают информацию. Отдельные устройства памяти называются запоминающими устройствами (ЗУ). Производительность ПК во многом зависит от состава и характеристик запоминающих устройств, которые, в свою очередь, различаются принципом действия и назначением. Основными операциями с памятью являются процедуры записи и считывания (выборки). Общее название указанных процедур – обращение к памяти. Основные характеристики памяти – это емкость и быстродействие (время обращения к памяти).  </p> <p> Емкость ЗУ измеряется в байтах (1 байт = 8 бит), килобайтах (1 Кбайт= 1024 байт), мегабайтах </p> <p> (1 Мбайт= 1024 Кбайт), гигабайтах (1 Гбайт = 1024 Мбайт), терабайтах (1Тбайт= 1024 Гбайт).</p> <p> Быстродействие измеряется в секундах и находится в пределах от 10-2 до 10-9 с в зависимости от способа доступа к информации. </p> <p> По способу доступа к хранящейся в них информации запоминающие устройства делятся на ЗУ с произвольным, прямым и последовательным доступом.  </p> <p> В ЗУ с произвольным доступом время обращения не зависит от места нахождения данных.  </p> <p> Такой доступ реализован в регистрах общего назначения, кэш-памяти и внутренней памяти ПК.  </p> <p> Носитель информации в ЗУ с прямым доступом непрерывно вращается, в результате данные доступны через некоторый фиксированный промежуток времени. К ЗУ с прямым доступом относятся НЖМД, НМГД, НОД.  </p> <p> ЗУ с последовательным доступом прежде, чем найти необходимые данные, "просматривает" все предыдущие участки памяти. Последовательный доступ реализована в ЗУ использующих магнитную ленту, например в стримерах. </p> <p> Следует отметить, что требования, предъявляемые к емкости и быстродействию ЗУ, являются взаимно противоречивыми с точки зрения технической реализации. Поэтому для эффективного функционирования в ПК память строится по иерархическому принципу, где на разных уровнях иерархии находятся ЗУ, обладающие различными характеристиками. Иерархическая структура памяти ПК представлена на рис. 2.3.  </p> <p> При движении от 1-го до 3-го уровня иерархии быстродействие ЗУ уменьшается, а емкость увеличивается.  </p> <p> Иерархическая организация памяти позволяет повысить производительность ПК и предоставить пользователю практически неограниченную емкость памяти. </p> <p> Назначение и основные характеристики ЗУ 1-го уровня были описаны в пункте в предыдущей лекции. Рассмотрим 2-й и 3-й уровни иерархии памяти ПК.  </p> <p> <b>НЖМД</b> (HDD — hard disk drive) в обиходе называют винчестером. В отличие от оперативной памяти НЖМД гарантируют долговременное хранение информации, для чего не требуется постоянное питание компьютера от внешнего источника электроэнергии. Для записи данных в жестких дисках используется магнитный слой, который покрывает пластины (диски), вращающиеся внутри винчестера с огромными скоростями. Вдоль пластин перемещаются головки чтения/записи. Основными характеристика современных НЖМД являются: емкость (до 100 Гбайт ); количество пластин (до 10 штук); среднее время поиска информации (меньше 20 мс); скорость вращения пластин (до 15 000 об/мин); вес (меньше 100 г). Основными производителями НЖМД являются фирмы IBM, Seegate, Toshiba, Fujitsu, Samsung.  </p> <p> <b>НГМД</b> (FDD — floppy disk drive) представляет собой устройство чтения/записи сменных гибких дисков (флоппи-дисков, дискет). Флоппи-диски размером 3,5 " (89 мм) используются только для переноса относительно небольших (1,44 Мбайт) объемов информации между компьютерами. Данные на гибких дисках хранятся подобно данным на винчестере за тем лишь исключением, что диск во флоппи-дисководе вращается с меньшей скоростью и он всего один. Из-за недостаточной герметизации дискеты часто выходят из строя. Таким образом, как носитель информации флоппи-диск крайне ненадежен и в настоящее время применяется все реже.  </p> <p> <b>НОД</b> являются в настоящее время самыми надежными и распространенными ЗУ внешней памяти. Считывание информации с оптического диска происходит за счет регистрации изменений интенсивности отраженного от алюминиевого слоя излучения маломощного лазера. НОД делятся на CD-ROM (Compact Disc Read Only Memory) – компакт-диск только для чтения; CD-R (Compact Disc Recordable) – однократно записываемый компакт-диск; CD-R W (Compact Disc Rewritable) – перезаписываемый компакт-диск; DVD (Digital Versatile Disk) — универсальный цифровой диск. </p> <p> Стандартный оптический диск CD имеет емкость 650 – 800 Мбайт, емкость DVD диска составляет от 4,7 до 17 Гбайт.</p> <p> <b>Архивная память ПК</b> предназначена для длительного и надежного хранения программ и данных. Как видно из рис. 2.3, хранить информацию можно на дискетах, оптических дисках, магнитной ленте, съемных НЖМД и флэш-памяти. Поскольку три первых носителя информации описаны выше, а съемный НЖМД принципиально не отличается от обычного НЖМД, отметим основные свойства флэш-памяти. </p> <p> Флэш-память представляет собой особый вид энергонезависимой перезаписываемой полупроводниковой памяти. Это означает, что она не требует дополнительной энергии для хранения данных (энергия требуется только для записи), допускает изменение (перезапись) хранимых в ней данных, не содержит механически движущихся частей (как обычные НЖМД или НОД) и построена на основе интегральных микросхем.  </p> <p> Информация, записанная на флэш-память, может храниться длительное время (несколько десятков лет) и способна выдерживать значительные механические нагрузки (в 5—10 раз превышающие предельно допустимые для обычных НЖМД).  </p> <p> Размер носителя флэш-памяти: длина и ширина — от 20 до 40 мм, толщина – до 3 мм, емкость достигает 10 Гбайт, в зависимости от типа флэш-памяти возможна перезапись информации до одного миллиона раз.  </p> <p> Благодаря низкому энергопотреблению, компактности, долговечности и относительно высокому быстродействию, флэш-память идеально подходит для использования в качестве накопителя не только в ПК, но и в таких портативных устройствах, как цифровые фото- и видеокамеры, мобильные телефоны, портативные компьютеры, МРЗ-плейеры, цифровые диктофоны и др. В ближайшие годы флэш-память станет самым применяемым компактным накопителем информации, постепенно вытесняя привычные дискеты.</p> <p></p>
<br><p>Рис. 2.3 Иерархия памяти ПК</p>  2.Конфигурация персонального компьютера   <p> Конфигурацией ПК называются состав и характеристики устройств, входящих в данный компьютер. Конфигурация подбирается в зависимости от задач, которые необходимо решать ПК.  </p> <p> Конфигурация ПК может быть задана следующим образом: Intel Celeron 2000, Intel Audio &amp; Video (16 – 32 Mb), RAM DIMM DDR SDRAM 256 Mb, FDD 3.5 " 1,44 Mb, HDD Seagate 80 GB 7200, Net 10/100 (неинтегрированная), CD-ROM, ATX 300W, PS/2, mouse PS/2 + scroll, Samsung 17’’ (1024x768x85 Гц), HP LaserJet 1150, Epson Perfection 3200 Photo (A4, 3200x6400 dpi, USB), USB flash 512 Mb.  </p> <p> В приведенной выше конфигурации можно выделить: </p> <p> • микропроцессор Intel Celeron с тактовой частотой 2ГГц; </p> <p> • универсальную аудио/видео карту Intel Audio &amp; Video с памятью 16 – 32 Мбайта);  </p> <p> • ОЗУ RAM DIMM DDR SDRAM емкостью 256 Мбайт;  </p> <p> • НМГД для дискет 1,44 Мбайта;  </p> <p> • НЖМД фирмы Seagate с емкостью 80 Гбайт и скоростью вращения 7200 об/мин; </p> <p> • сетевую плату для Ethernet (10 Мбит/с) и Fast Ethernet (100 Мбит/с);  </p> <p> • НОД типа CD-ROM;  </p> <p> • корпус системного блока типа ATX 300W;  </p> <p> • клавиатуру с разъемом PS/2;  </p> <p> • мышь с прокруткой и разъемом PS/2;  </p> <p> • монитор Samsung с размером экрана 17 дюймов, разрешающей способностью 1024 на 768 точек и частотой восстановления 85 Гц;  </p> <p> • лазерный принтер HP LaserJet 1150;  </p> <p> • сканер Epson Perfection 3200 Photo для формата А4, с разрешающей способностью 3200x6400 dpi и подключаемый к последовательному USB-порту;  </p> <p> • флэш-память емкостью 512 Мбайт, подключаемая к последовательному USB-порту.  </p> <p> Модульность, масштабируемость и стандартизуемость отдельных блоков современных ПК позволяет быстро и гибко менять его конфигурацию.</p>  3.Параметры, влияющие на производительность персонального компьютера <p> Производительность ПК является важнейшей его характеристикой. Все факторы и параметры, влияющие на производительность ПК, можно разделить на программные и аппаратные. </p> <p> Влияние программных факторов на производительность ПК определяется правильным выбором и настройкой как операционной системы, так и конкретных программных приложений. </p> <p> Среди множества аппаратных параметров, влияющих на производительность ПК, наиболее важными являются: </p> <p> • быстродействие микропроцессора – определяется тактовой частотой ГТИ;  </p> <p> • пропускная способность системной шины — определяется скоростью обмена с внешними устройствами ПК;  </p> <p> • время обращения как к внутренним, так и внешним ЗУ;  </p> <p> • емкость памяти как у внутренних, так и внешних ЗУ;  </p> <p> • быстродействие внешних устройств, подключаемых к ПК.  </p> <p> Следует также отметить, что на производительность ПК большое влияние оказывают подготовленность и компетентность пользователя.</p>  4.Тенденции развития вычислительной техники   <p> По мнению специалистов, в первом десятилетии XXI в. будут повышаться значимость программного обеспечения, возрастание проблем его совместимости и обеспечения безопасности. </p> <p> Среди операционных систем дальнейшее развитие получат системы Linux и Windows. С точки зрения конечного пользователя, уже в ближайшие годы должны произойти серьезные изменения в стиле его общения с компьютером. Во-первых, будет шире использоваться графический ввод данных, в том числе в режиме автоматического распознавания рукописного ввода. Во-вторых, будет использоваться голосовой ввод — сначала для управления командами, а потом будет осваиваться и автоматическая оцифровка речи. Для решения вышеуказанных задач будут разрабатываться соответствующие внешние устройства. </p> <p> Огромное значение в будущем будут иметь работы в области интеллектуальной обработки неструктурированных данных, в первую очередь текстов, а затем графики, звука, видео. </p> <p> Одним из наиболее перспективных направлений развития вычислительной техники является реализация концепции сетевых вычислений, использующая идею привлечения для вычислений свободных ресурсов компьютеров. Эта концепция получила название Grid и включает в себя пять ключевых пунктов: </p> <p> • применение открытых стандартов; </p> <p> • объединение разнородных систем;  </p> <p> • совместное использование данных;  </p> <p> • динамическое выделение ресурсов;  </p> <p> • объединение вычислительных сетей множества предприятий и организаций. </p> <p> Развитие ЭВМ будет идти по пути создания оптоэлектронных ЭВМ с массовым параллелизмом и нейронной структурой, представляющих собой распределенную сеть большого числа (десятки тысяч) несложных микропроцессоров, моделирующих архитектуру нейронных биологических систем.  </p> <p> Дальнейшее развитие получат переносные персональные компьютеры с беспроводным подключением к глобальной сети Интернет. </p> <p> Следует отметить, что развитие вычислительной техники всецело зависит от тенденций развития мировой экономической системы.</p>
<br><br><p> <b>Лекция № 7 Виды операционных и файловых систем</b></p>  1.Функции операционной системы   <p> Операционная система является связующим звеном, с одной стороны, между аппаратурой компьютера и выполняемыми программами, с другой стороны, между аппаратурой компьютера и пользователем.  </p> <p> Операционную систему можно назвать программным продолжением устройства управления компьютера. Образуя прослойку между пользователем и аппаратурой, она скрывает от него сложные и ненужные подробности функционирования компьютера и освобождает от трудоемкой работы по организации вычислительного процесса.</p> <p> В функции операционной системы входят:  </p> <p> • поддержка диалога с пользователем;  </p> <p> • ввод/вывод и управление данными;  </p> <p> • планирование и организация процесса обработки программ;  </p> <p> • распределение ресурсов (оперативной и кэш-памяти, процессора, внешних устройств);  </p> <p> • запуск программ на выполнение;  </p> <p> • выполнение вспомогательных операций обслуживания;  </p> <p> • передача информации между различными внутренними устройствами;  </p> <p> • поддержка работы периферийных устройств (дисплея, клавиатуры, накопителей на гибких и жестких дисках, принтера и др.).  </p> <p> В соответствии с выполняемыми функциями в структуре ОС можно выделить следующие основные компоненты:  </p> <p> • модули, обеспечивающие пользовательский интерфейс;  </p> <p> • модуль, управляющий файловой системой;  </p> <p> • модуль, расшифровывающий и выполняющий команды (командный процессор);  </p> <p> • драйверы периферийных устройств.  </p> <p> Операционная система хранится во внешней памяти компьютера. При включении компьютера часть ее (ядро – резидентная часть ОС) считывается с винчестера и размещается в ОЗУ. Этот процесс называется загрузкой операционной системы. При работе ядро постоянно находится в ОЗУ, остальные модули операционной системы для выполнения своих функций подзагружаются по мере необходимости, а затем на их место загружаются следующие модули (транзитная часть ОС).</p>  2.Виды операционных систем   <p> Операционные системы можно классифицировать по различным признакам: числу решаемых задач, одновременно работающих пользователей, количеству поддерживаемых процессоров, поддержке сетевой работы, базовому общению пользователя с системой, типу аппаратной платформы, числу разрядов адресной шины и др.  </p> <p> По числу параллельно решаемых на компьютере задач ОС разделяют:  </p> <p> • на однозадачные (например, MS DOS);  </p> <p> • многозадачные (например, OS/2, UNIX, Windows 95 и выше).  </p> <p> В настоящее время на смену однозадачным ОС пришли многозадачные, которые обеспечивают одновременное решение нескольких задач и управляют распределением совместно используемых ими ресурсов (процессор, оперативная память, файлы и внешние устройства).  </p> <p> По числу одновременно работающих пользователей ОС разделяют:  </p> <p> • на однопользовательские (например, MS DOS, Windows 3.x);  </p> <p> • многопользовательские (например, Unix, Linux, Windows 2000).  </p> <p> Главным отличием многопользовательских систем от однопользовательских является наличие средств защиты информации каждого пользователя от несанкционированного доступа других.  </p> <p> Каждая операционная система имеет свои средства для выполнения пользователем тех или иных действий (запуск прикладной программы, копирование файла, форматирование диска и т.д.). Поэтому в качестве признака классификации можно назвать пользовательский интерфейс ОС. Различают ОС, обеспечивающие взаимодействие с пользователем посредством:  </p> <p> • командного интерфейса (например MS DOS);  </p> <p> • графического интерфейса (например Windows).</p> <p> На характеристики операционных систем, как правило, влияет специфика аппаратных средств, на которые она ориентирована. По типу аппаратуры различают операционные системы для персональных компьютеров различных платформ (IBM-совместимых, Apple, Macintosh), миникомпьютеров, мэйнфреймов, кластеров и сетей ЭВМ. Среди этих типов компьютеров могут встречаться как однопроцессорные варианты, так и многопроцессорные.  </p> <p> По числу разрядов адресной шины компьютеров, на которые ориентирована ОС, операционные системы разделяют на 16 (MS DOS), 32 (Windows 2000) и 64-разрядные (Windows 2003).  </p> <p> На рынке операционных систем представлены разработки различных фирм, которые отличаются ориентацией на аппаратные средства, решение определенного круга задач, запросы потребителя и др. Можно выделить операционные системы, обладающие определенными общими чертами: один производитель, единый подход к организации и функционированию, что позволяет классифицировать их по семействам и линейкам. Например, можно выделить такие семейства, как Windows (Microsoft), Unix (различные разработчики), Solaris (Sun Microsystems) и др. В семействе Windows принято различать линейку Windows 9.x (Millenium) и Windows NT (XP).</p>  3.Файловая система.  <p> Совокупность средств операционной системы, обеспечивающих доступ к информации на внешних носителях, называется <b>системой управления файлами</b>, или <b>файловой системой</b><IDXSKIP>.</IDXSKIP></p> <p> Основная задача файловой системы – обеспечение взаимодействия программ и физических устройств ввода/вывода (накопителей на жестких дисках, магнитных лентах и т.д.). Она также определяет структуру хранения файлов и каталогов на диске, правила задания имен файлов, допустимые атрибуты файлов, права доступа и др. Обычно файловую систему воспринимают и как средство управления файлами, и как общее хранилище файлов.  </p> <p> Функциональные возможности файловой системы можно условно разделить на группы:  </p> <p> 1) функции для работы с файлами: создание, удаление, переименование, изменение атрибутов (свойств файлов), определение структуры файлов;  </p> <p> 2) функции для работы с данными: чтение, запись, поиск данных, хранящихся в файлах, и т.д.;  </p> <p> 3) оптимизация операций ввода/вывода.  </p>  4.Логические диски. <p> Одно из понятий файловой системы – логический диск. Каждый логический диск имеет свое <b>уникальное имя</b><IDXSKIP>.</IDXSKIP></p> <p> В качестве имени логического диска используются буквы английского алфавита от <b>A</b> до <b>Z</b> (включительно).</p> <p> Таким образом, количество логических дисков, может быть не более 26.</p> <p> Буквы <b>A</b> и <b>B</b> – отведены строго под имеющиеся в IBM PC дисководы FDD.</p> <p> Начиная с буквы <b>C</b> именуются<b> логические диски (разделы) </b>жесткого диска (рис. 3).</p> <p> В случае, если данный IBM PC имеет только один FDD, буква <b>B </b>пропускается (см. рис. 4).</p> <p> Как правило, только логические диски <b>A</b> и <b>C</b> могут быть <b>системными</b><b>.</b></p> <p> </p>   <table cellpadding="0" cellspacing="0"><tr>
<td style="border: none; padding: 0in;">Рис.     3. Разделение     на логические     диски в системе     с двумя дисководами.</td>    <td style="border: none; padding: 0in;">Рис.     4. Разделение     на логические     диски в системе     с одним дисководом.</td>   </tr></table>   5.Файловая структура <p> Для обеспечения доступа к файлам файловая система OC организует и поддерживает на логическом диске определенную <b>файловую структуру</b>(рис. 1).</p> <p></p> <p> Рис. 1. Файловая структура на дискете емкостью 360 кбайт</p>
<br><p> <b>Элементы файловой структуры:</b></p>   <p><b>стартовый  сектор</b>  (сектор начальной  загрузки,  <b>Boot-сектор</b>);</p>  <p><b>таблица  размещения  файлов</b>  (<b>FAT</b>  – File Allocation Table);</p>  <p><b>корневой  каталог</b>(Root  Directory);</p>  <p><b>область  данных </b>(оставшееся  свободным  дисковое  пространство).</p>  <p> Эти элементы создаются специальными программами в среде OC в процессе инициализации диска.</p>  6.Стартовый сектор (сектор начальной загрузки, Boot-сектор) <p> Здесь записана информация, необходимая OC для работы с диском:</p>   <p>идентификатор  ОС (если диск  системный);</p>  <p>размер  сектора диска;</p>  <p>количество  секторов в  кластере;</p>  <p>количество  резервных  секторов в  начале диска;</p>  <p>количество  копий FAT на диске  (стандарт –  две);</p>  <p>количество  элементов в  каталоге;</p>  <p>количество  секторов на  диске;</p>  <p>тип  формата диска;</p>  <p>количество  секторов в  FAT;</p>  <p>количество  секторов на  дорожку;</p>  <p>количество  поверхностей;</p>  <p>блок  начальной  загрузки ОС.</p>   7.Корневой каталог. <p> <b>Корневой Каталог</b><b>. </b>Это определенная область диска, создаваемая в процессе инициализации (форматировании) диска, где содержится информация о файлах и каталогах, хранящихся на диске. Корневой каталог всегда существует на отформатированном диске. На одном диске бывает только один корневой каталог. Размер корневого каталога для данного диска – величина фиксированная (только для FAT-16), поэтому максимальное количество "привязанных" к нему файлов и других (дочерних) каталогов (подкаталогов) – строго определенное.</p> <p> <b>Каталоги</b> <b>(подкаталоги)</b>. Каталог – это определенное место на диске (в области данных диска), где содержится информация о файлах и подкаталогах, привязанных к данному каталогу.</p> <p> В отличие от корневого каталога, остальные каталоги (подкаталоги) создаются с помощью команд ОС. Основная цель такой структуры каталогов – организация эффективного хранения большого количества файлов на диске.</p> <p> Каждый каталог, кроме корневого, имеет "родителя", т.е. другой каталог, в котором зарегистрирован данный каталог. ОС рассматривает каждый каталог, кроме корневого, как файл.</p> <p> В Windows каталог называется папкой. С папками (каталогами) и файлами могут выполняться операции создания, удаления, копирования и перемещения, а также изменение их свойств и управление доступом.  </p>  8.Область данных <p> Вся область данных диска делится на кластеры (cluster, скопление), которые представляют собой пронумерованные неделимые блоки данных одного размера на диске. В самом начале диска размещается таблица FAT, содержащая столько записей, сколько кластеров доступно на диске. В ней отмечены используемые, неиспользуемые, содержащие нулевую информацию, а также поврежденные кластеры, которые помечаются определенным значением, после чего они уже никогда не употребляются.  </p> <p> Таблица FAT содержит сведения о номерах кластеров, в которых размещается файл. Наличие у каждого кластера индивидуального номера позволяет найти область расположения файла, причем необязательно, чтобы его кластеры располагались рядом. Если разные фрагменты файла располагаются в несмежных кластерах, то говорят о фрагментации файла. Каждый кластер файла содержит номер следующего в цепочке его кластеров. Таким образом, достаточно знать номер первого кластера в цепочке, который хранится в оглавлении диска, чтобы по таблице FAT определить номера всех кластеров, содержащих данный файл. Занимаемый файлом объем (&lt;количество кластеров файла&gt; * &lt;размер кластера&gt;) кратен количеству кластеров.  </p> <p> На диске может храниться огромное количество разнообразных файлов. Для удобства работы с файлами, их систематизации по назначению, содержанию, авторству или другим признакам на диске создаются каталоги, структура которых определяет логическую организацию данных.  </p>  9.Принципы хранения информации в компьютерных системах <p> Ядром операционной системы является модуль, который обеспечивает управление файлами, — файловая система.  </p> <p> Файл — это поименованная последовательность любых данных, стандартная структура которой обеспечивает ее размещение в памяти машины, представляющая собой наименьшую единицу хранения информации. Файл может содержать программу, числовые данные, текст, закодированное изображение и др. В каком-то смысле файл является синонимом документа.  </p> <p> Основным атрибутом файла является его имя. Имя файла — это символьная строка, правила построения которой зависят от конкретной файловой системы. Например, в файловой системе FAT, используемой в MS DOS, длина имени файла не может превышать 11 символов, три из которых предназначены для расширения. Расширение отделяется от имени точкой. Расширение имени файла является необязательным атрибутом и, как правило, информирует о типе данных, хранимых в файле, поэтому его иногда называют типом файла. Например, bat, com, ехе — исполняемые файлы, для их выполнения можно указать только имя. Именно эти файлы могут быть "стартовыми" файлами компьютерных игр, текстовых редакторов и др.; txt — текстовые файлы.</p> <p> Помимо имени атрибутами файла являются: текущий размер и максимальный размер файла; длина записи; время создания, последнего доступа и последнего изменения; владелец файла; создатель файла; пароль для доступа, признак "только чтение" и др.  </p>  10.Способы удаления файлов и каталогов на диске. <p> Средства удаления данных не менее важны для операционной системы, чем средства их создания, поскольку ни один носитель данных не обладает бесконечной емкостью. Существует как минимум три режима удаления данных: удаление, уничтожение и стирание, хотя операционные системы обеспечивают только два первых режима (режим надежного стирания данных можно обеспечить лишь специальными программными средствами).</p> <p> Удаление файлов является временным. В операционных системах семейства Windows оно организовано с помощью специальной папки, которая называется Корзина. При удалении файлов и папок они перемещаются в Корзину. Эта операция происходит на уровне файловой структуры операционной системы (изменяется только путь доступа к файлам). На уровне файловой системы жесткого диска ничего не происходит — файлы остаются в тех же секторах, где и были записаны.</p> <p> Уничтожение файлов происходит при их удалении в операционной системе MS-DOS или при очистке Корзины в операционных системах семейства Windows. В этом случае файл полностью удаляется из файловой структуры операционной системы, но на уровне файловой системы диска с ним происходят лишь незначительные изменения. В таблице размещения файлов он помечается как удаленный, хотя физически остается там же, где и был. Это сделано для минимизации времени операции. При этом открывается возможность записи новых файлов в кластеры, помеченные как «свободные».</p> <p> Для справки укажем, что операция стирания файлов, выполняемая специальными служебными программами, состоит именно в том, чтобы заполнить якобы свободные кластеры, оставшиеся после уничтоженного файла, случайными данными. Поскольку даже после перезаписи данных их еще можно восстановить специальными аппаратными средствами (путем анализа остаточного магнитного гистерезиса), для надежного стирания файлов требуется провести не менее пяти актов случайной перезаписи в одни и те же сектора. Эта операция весьма продолжительна, и, поскольку массовому потребителю она не нужна, её не включают в стандартные функции операционных систем.</p>  11.Типы файловых систем <p> Файловая система, с одной стороны, — это часть ОС, предназначенная для организации работы с хранящимися на диске данными и обеспечения совместного использования файлов несколькими пользователями и процессами, с другой стороны, — сами файлы, хранящиеся на устройствах ввода/вывода. Драйвер файловой системы обеспечивает доступ к информации, записанной на магнитный диск, по имени файла и распределяет пространство на магнитном диске между файлами.  </p> <p> Выделяют различные типы файловых систем, например, FAT, NTFS, CDFS.  </p> <p> FAT (File Allocation Table) разрабатывалась для гибких дисков и представляет собой таблицу размещения файлов MS DOS и Windows 9x. Существуют несколько ее разновидностей:  </p> <p> FAT12, FAT16, FAT32. Система имеет низкую отказоустойчивость и при отключении питания велика вероятность потери данных. Ее преимуществом является поддержка большинством ОС.  </p> <p> NTFS (New Technology File System), разработанная Microsoft специально для Windows NT, поддерживает длинные имена файлов (до 255 символов); гарантирует сохранность данных в случае копирования даже при программно-аппаратном сбое или отключении электропитания; превосходит FAT по скорости работы и по эффективности использования ресурсов; обеспечивает построение компьютерных систем от рабочей станции до сервера класса мэйнфреймов; предоставляет средства для разграничения доступа и защиты информации. NTFS в именах использует набор символов Unicode , автоматически для каждого файла генерирует поддерживаемое MS DOS имя (восемь плюс три символа), что дает возможность работать операционным системам MS DOS и OS/2 с файлами NTFS через сеть. Это особенно важно для файловых серверов сети, к которой подключены персональные компьютеры с этими операционными системами.  </p> <p> CDFS (Compact Disk File System) — специальная файловая система для CD-ROM.  </p>  12.Тенденции развития операционных систем   <p> Основные направления развития операционных систем следующие:  </p> <p> 1. Расширяемость — возможность внесения дополнительных функций без разрушения целостности системы (вспомните ОС Linux).  </p> <p> 2. Переносимость — возможность использования на различных аппаратных платформах.  </p> <p> 3. Надежность и отказоустойчивость — защищенность от внутренних и внешних сбоев и ошибок, т.е. от некорректных действий прикладных программ, пользователей, оборудования и самой операционной системы. Требования к именам каталогов такие же, как и к именам файлов. Расширения для имен каталогов не используются.</p> <p> 4. Совместимость — поддержка выполнения прикладных программ, написанных для других операционных систем, а также взаимодействие между различными ОС, функционирующими в корпоративной среде.  </p> <p> 5. Безопасность — очень важное требование, особенно в сетевой среде и в условиях все более широкого использования сети Интернет в корпоративной деятельности.  </p> <p> 6. Производительность — соответствие быстродействия операционной системы возможностям современных аппаратных средств.  </p> <p> 7. Интеграция с сетью Интернет — поддержка соответствующих протоколов, сервисов и Web-серверов.  </p> <p> 8. Сетевые возможности — поддержка эффективного использования сетевых ресурсов, организация удаленного доступа, разграничение доступа и др.  </p> <p> 9. Поддержка многопроцессорной обработки данных.</p>
<br><br><p> <b>Лекция № 6 Программный принцип управления компьютером</b></p>  1.Программный принцип управления компьютером <p> Компьютер является универсальным инструментом для решения разнообразных задач по преобразованию информации, но его универсальность определяется не столько аппаратным обеспечением, сколько установленными программными средствами, другими словами, все "знания" компьютера сосредоточены в программах, которые представляют собой точную и подробную последовательность инструкций, представленных на понятном для компьютера языке, по обработке информации. Меняя программы, можно превратить компьютер в рабочее место дизайнера, бухгалтера, конструктора, статистика или агронома, использовать его для прослушивания музыки, просмотра кинофильмов и других развлечений.  </p> <p> Основные принципы построения компьютеров, описанные Джоном фон Нейманом, до сих пор являются стандартом практически для всех компьютеров. Одним из них является <b>программное управление</b>.  </p> <p> В основе принципа программного управления лежит представление алгоритма решения любой задачи в виде программы вычислений.  </p> <p> <b>Алгоритм</b> – точное предписание, определяющее процесс преобразования исходных данных в конечный результат. При решении задачи применяется общий алгоритм:</p> <p> 1) получить исходные данные;</p> <p> 2) найти решение;</p> <p> 3) сообщить ответ.  </p> <p> <b>Программа</b> (для компьютера) – это упорядоченная последовательность команд, подлежащая обработке; описывает операции, которые нужно выполнить процессору компьютера для решения поставленной задачи.  </p> <p> <b>Команда</b> – это инструкция машине на выполнение элементарной операции. Набор операций, которые может выполнять компьютер, и правил их записи образуют машинный язык.  </p> <p> Структура команды в общем виде имеет следующий вид:</p>   <table cellpadding="7" cellspacing="0"><tr valign="TOP">
<td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">     <p>КОП</p>     <p>Код     операции</p>    </td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">     <p>А1</p>     <p>Адрес     первого операнда</p>    </td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">     <p>А2</p>     <p>Адрес     второго операнда</p>    </td>    <td style="border-top: 1px solid #000000; border-bottom: 1px solid #000000; border-left: 1px solid #000000; border-right: none; padding-top: 0in; padding-bottom: 0in; padding-left: 0.08in; padding-right: 0in;">     <p>А3</p>     <p>Адрес     третьего операнда</p>    </td>    <td style="border: 1px solid #000000; padding: 0in 0.08in;">     <p>А4</p>     <p>Адрес     четвертого     операнда</p>    </td>   </tr></table>
<p> До недавнего времени разработчики считали, что чем больше команд в латинском языке, тем более широкими возможностями по обработке данных обладает компьютер. В настоящее время совершается переход на RISC-процессоры, основной характеристикой которых является сокращение набора команд и упрощение их структуры.  </p> <p> Суть принципа программного управления заключается в следующем:  </p> <p> • все вычисления, предписанные алгоритмом решения задачи, должны быть представлены в виде программы, состоящей из последовательности управляющих слов-команд;  </p> <p> • каждая команда содержит указания на конкретную выполняемую операцию, место нахождения (адрес) операндов и ряд служебных признаков. Операнды – это переменные, значения которых участвуют в операциях преобразования данных. Список всех переменных (входных и данных, промежуточных значений и результатов вычислений) является неотъемлемым элементом любой программы;  </p> <p> • для доступа к программам, командам и операндам используются их адреса, в качестве которых выступают номера ячеек памяти компьютера, предназначенных для хранения объектов;  </p> <p> • команды программы расположены в памяти друг за другом, что позволяет микропроцессору организовывать выборку цепочки команд из последовательно расположенных ячеек памяти и выполнять команду за командой;  </p> <p> • для перехода к выполнению не следующей по порядку команды, а к какой-то другой используются команды условного или безусловного переходов. Выборка команд из памяти прекращается после достижения конца программы или выполнения команды "стоп". Таким образом, процессор исполняет программу автоматически, без вмешательства человека.  </p> <p> Обычно программы хранятся во внешней памяти компьютера и для выполнения передаются в оперативную память. Некоторые программы постоянно размещаются в памяти (ядро операционной системы, архиватор Zip Magic, монитор антивирусной программы Касперский АнтиВирус и др.) и называются резидентными, а другие загружаются только на время выполнения, а затем удаляются из памяти и называются транзитными.  </p> <p> Часть машинных программ, обеспечивающих автоматическое управление вычислениями и используемых наиболее часто, может размещаться в постоянном запоминающем устройстве — реализовываться аппаратно. Программы, записанные в ПЗУ, составляют базовую систему ввода/вывода (BIOS), которая является промежуточным звеном между программным обеспечением компьютера и его электронными компонентами. Ее компоненты обеспечивают выполнение всех операций ввода/вывода в соответствии со специфическими особенностями работы каждого из периферийных устройств данного компьютера (драйверы стандартных устройств), тестируют работу памяти и устройств компьютера при включении электропитания (тест), а также выполняют загрузку операционной системы.</p>  2.Классификация программного обеспечения персонального компьютера   <p> <b>Программное обеспечение</b> (software) — это совокупность программ, обеспечивающих функционирование компьютеров и решение с их помощью задач предметных областей. Программное обеспечение (ПО) представляет собой неотъемлемую часть компьютерной системы, является логическим продолжением технических средств и определяет сферу применения компьютера.  </p> <p> ПО современных компьютеров включает множество разнообразных программ, которые можно условно разделить на три группы (рис. 3.1).  </p> <p> 1. Системное программное обеспечение (системные программы).  </p> <p> 2. Прикладное программное обеспечение (прикладные программы).  </p> <p> 3. Инструментальное обеспечение (инструментальные системы).  </p> <p></p> <p> <b>Системное программное обеспечение</b> (СПО) – это программы, управляющие работой компьютера и выполняющие различные вспомогательные функции, например, управление ресурсами компьютера, создание копий информации, проверка работоспособности устройств компьютера, выдача справочной информации о компьютере и др. Они предназначены для эффективной работы компьютера и всех категорий пользователей, а также эффективного выполнения прикладных программ.</p> <p> Центральное место среди системных программ занимают операционные системы (operating systems). Операционная система (ОС) — это комплекс программ, предназначенных для управления загрузкой, запуском и выполнением других пользовательских программ, а также для планирования и управления вычислительными ресурсами ЭВМ, т.е. управления работой ПЭВМ с момента включения до момента выключения питания. Она загружается автоматически при включении компьютера, ведет диалог с пользователем, осуществляет управление компьютером, его ресурсами (оперативной памятью, дисковым пространством и др.), запускает другие программы на выполнение и обеспечивает пользователю и программам удобный способ общения — интерфейс — с устройствами компьютера. Другими словами, операционная система обеспечивает функционирование и взаимосвязь всех компонентов компьютера, а также предоставляет пользователю доступ к его аппаратным возможностям.  </p> <p> ОС определяет производительность системы, степень защиты данных, выбор программ, с которыми можно работать на компьютере, требования к аппаратным средствам. Примерами ОС являются MS DOS, OS/2, Unix, Windows 9x, Windows XP.  </p> <p> Сервисные системы расширяют возможности ОС по обслуживанию системы, обеспечивают удобство работы пользователя. К этой категории относят системы технического обслуживания, программные оболочки и среды ОС, а также служебные программы.  </p> <p> Системы технического обслуживания — это совокупность программно-аппаратных средств ПК, которые выполняют контроль, тестирование и диагностику и используются для проверки функционирования устройств компьютера и обнаружения неисправностей в процессе работы. Они являются инструментом специалистов по эксплуатации и ремонту технических средств компьютера.  </p> <p> Для организации более удобного и наглядного интерфейса пользователя с компьютером используются программные оболочки операционных систем — программы, которые предоставляют пользователю более удобные и эффективные, чем возможности ОС, средства управления ресурсами компьютера. К числу наиболее популярных оболочек относятся пакеты Norton Commander (Symantec), FAR (File and Archive manageR).</p> <p> <b>Служебные программы</b> (утилиты, от лат. utilitas – польза) — это вспомогательные программы, предоставляющие пользователю ряд дополнительных услуг по реализации часто выполняемых работ или же повышающие удобство и комфортность работы. К ним относятся:  </p> <p> • программы-упаковщики (архиваторы), которые позволяют более плотно записывать информацию на дисках, а также объединять копии нескольких файлов в один, так называемый архивный файл (архив);  </p> <p> • антивирусные программы, предназначенные для предотвращения заражения компьютерными вирусами и ликвидации последствий заражения;  </p> <p> • программы оптимизации и контроля качества дискового пространства;  </p> <p> • программы восстановления информации, форматирования, защиты данных;  </p> <p> • программы для записи компакт-дисков; 1</p> <p> • драйверы  — программы, расширяющие возможности операционной системы по управлению устройствами ввода/вывода, оперативной памятью и др. При подключении к компьютеру новых устройств необходимо установить соответствующие драйверы;  </p> <p> • коммуникационные программы, организующие обмен информацией между компьютерами и др.  </p> <p> Некоторые утилиты входят в состав операционной системы, а некоторые поставляются на рынок как самостоятельные программные продукты, например многофункциональный пакет сервисных утилит Norton Utilities (Symantec).  </p> <p> <b>Прикладное программное обеспечение</b> (ППО) предназначено для решения задач пользователя. В его состав входят <b>прикладные программы пользователей</b> и <b>пакеты прикладных программ</b> (ППП) различного назначения.  </p> <p> Прикладная программа пользователя — это любая программа, способствующая решению какой-либо задачи в пределах данной проблемной области. Прикладные программы могут использоваться либо автономно, либо в составе программных комплексов или пакетов.  </p> <p> Пакеты прикладных программ (ППП) — это специальным образом организованные программные комплексы, рассчитанные на общее применение в определенной проблемной области и дополненные соответствующей технической документацией. Различают следующие типы ППП.  </p> <p> • ППП общего назначения — универсальные программные продукты, предназначенные для автоматизации широкого класса задач пользователя. К ним относятся:  </p> <p> - текстовые редакторы (например, MS Word, Word Perfect, Лексикон);  </p> <p> - табличные процессоры (например, MS Excel, Lotus 1-2-3, Quattro Pro);  </p> <p> - системы динамических презентаций (например, MS Power Point, Freelance Graphics, Harvard Graphics);  </p> <p> - системы управления базами данных (например, MS Access, Oracle, MS SQL Server, Informix);  </p> <p> - графические редакторы (например, Corel Draw, Adobe Photoshop);  </p> <p> - издательские системы (например, Page Maker, Venture Publisher);  </p> <p> - системы автоматизации проектирования (например, BpWin, ErWin);  </p> <p> - электронные словари и системы перевода (например, Prompt, Сократ, Лингво, Контекст);  </p> <p> - системы распознавания текста (например, Fine Reader, Cunei Form). Системы общего назначения часто интегрируются в многокомпонентные пакеты для автоматизации офисной деятельности — офисные пакеты — Microsoft Office, StarOffice и др.  </p> <p> • Методо-ориентированные ППП, в основе которых лежит реализация математических методов решения задач. К ним относятся, например, системы математической обработки данных (Mathematica, MathCad, Maple),  системы статистической обработки данных (Statistica, Stat).  </p> <p> • Проблемно-ориентированные ППП предназначены для решения определенной задачи в конкретной предметной области. Например, информационно-правовые системы ЮрЭксперт, ЮрИнформ; пакеты бухгалтерского учета и контроля 1С: Бухгалтерия, Галактика, Анжелика; в области маркетинга — Касатка, Marketing Expert; банковская система СТБанк.  </p> <p> • Интегрированные ППП представляют собой набор нескольких программных продуктов, объединенных в единый инструмент. Наиболее развитые из них включают в себя текстовый редактор, персональный менеджер (органайзер), электронную таблицу, систему управления базами данных, средства поддержки электронной почты, программу создания презентационной графики. Результаты, полученные отдельными подпрограммами, могут быть объединены в окончательный документ, содержащий табличный, графический и текстовый материал. К ним относят, например, MS Works. Интегрированные пакеты, как правило, содержат некоторое ядро, обеспечивающее возможность тесного взаимодействия между составляющими.  </p> <p> Обычно пакеты прикладных программ имеют средства настройки, что позволяет при эксплуатации адаптировать их к специфике предметной области.  </p> <p> <b>К инструментальному программному обеспечению</b> относят: системы программирования – для разработки новых программ, например, Паскаль, Бейсик. Обычно они включают: редактор текстов, обеспечивающий создание и редактирование программ на исходном языке программирования (исходных программ), транслятор, а также библиотеки подпрограмм; инструментальные среды для разработки приложений, например, C++, Delphi, Visual Basic, Java, которые включают средства визуального программирования; системы моделирования, например, система имитационного моделирования  MatLab,  системы моделирования бизнес-процессов BpWin и баз данных ErWin и др.  </p> <p> Транслятор (от англ. translator — переводчик) — это программа-переводчик, которая преобразует программу с языка высокого уровня в программу, состоящую из машинных команд.  </p> <p> Трансляторы реализуются в виде компиляторов или интерпретаторов, которые существенно различаются по принципам работы.  </p> <p> Компилятор (от англ. compiler — составитель, собиратель) читает всю программу целиком, делает ее перевод и создает законченный вариант программы на машинном языке, который затем и выполняется. После компилирования получается исполняемая программа, при выполнении которой не нужны ни исходная программа, ни компилятор.  </p> <p> Интерпретатор (от англ. interpreter — истолкователь, устный переводчик) переводит и выполняет программу строка за строкой. Программа, обрабатываемая интерпретатором, должна заново переводиться на машинный язык при каждом ее очередном запуске.  </p> <p> Откомпилированные программы работают быстрее, но интерпретируемые проще исправлять и изменять.</p>  3.Классификация прикладных программных средств <p> <b>Текстовые редакторы. </b>Основные функции этого класса прикладных программ заключаются во вводе и редактировании текстовых данных. (Блокнот).</p> <p> <b>Текстовые процессоры. </b>Основное отличие текстовых процессоров от текстовых редакторов в том, что они позволяют не только вводить и редактировать текст, но и форматировать его, то есть оформлять. (MS Word).</p> <p> <b>Графические редакторы. </b>Это обширный класс программ, предназначенных для создания и (или) обработки графических изображений. В данном классе различают следующие категории: растровые редакторы (Photoshop), векторные редакторы (CorelDraw) и программные средства для создания и обработки трехмерной графики (3D-редакторы, 3D Max).</p> <p> <b>Системы управления базами данных. </b>Базами данных называют огромные массивы данных, организованных в табличные структуры. Основными функциями систем управления базами данных являются:</p>   <p>  создание  пустой (незаполненной)  структуры базы  данных;</p>  <p>  предоставление  средств ее  заполнения  или импорта  данных из таблиц  другой базы;</p>  <p>  обеспечение  возможности  доступа к данным,  а также предоставление  средств поиска  и фильтрации.    </p>  <p> <b>Электронные таблицы. </b>Электронные таблицы предоставляют комплексные средства для хранения различных типов данных и их обработки.  </p> <p> <b>Системы автоматизированного проектирования (CAD-системы). </b>Предназначены для автоматизации проектно-конструкторских работ. Применяются в машиностроении, приборостроении, архитектуре. (AutoCad))</p> <p> <b>Настольные издательские системы. </b>Назначение программ этого класса состоит в автоматизации процесса верстки полиграфических изданий. (Publisher).</p> <p> <b>Экспертные системы. </b>Предназначены для анализа данных, содержащихся в базах знаний, и выдачи рекомендаций по запросу пользователя.  </p> <p> <b>Web</b><b>-редакторы. </b>Это особый класс редакторов, объединяющих в себе свойства текстовых и графических редакторов. Они предназначены для создания и редактирования так называемых Web-документов (Web-страниц Интернета). Web-документы – это электронные документы, при подготовке которых следует учитывать ряд особенностей, связанных с приемом-передачей информации в Интернете.</p> <p> <b>Браузеры (обозреватели, средства просмотра Web). </b>К этой категории относятся программные средства, предназначенные для просмотра электронных документов, выполненных в формате HTML (документы этого формата используются в качестве Web-документов). Современные браузеры воспроизводят не только текст и графику. Они могут воспроизводить музыку, человеческую речь, обеспечивать прослушивание радиопередач в Интернете, просмотр видеоконференций, работу со службами электронной почты, с системой телеконференций (групп новостей) и многое другое (Internet Explorer, Opera).</p> <p> <b>Интегрированные системы делопроизводства. </b>Представляют собой программные средства автоматизации рабочего места руководителя.  </p> <p> <b>Бухгалтерские системы. </b>Это специализированные системы, сочетающие в себе функции текстовых и табличных редакторов, электронных таблиц и систем управления базами данных.  </p> <p> <b>Финансовые аналитические системы. </b>Программы этого класса используются в банковских и биржевых структурах. Они позволяют контролировать и прогнозировать ситуацию на финансовых, товарных и сырьевых рынках, производить анализ текущих событий, готовить сводки и отчеты.</p> <p> <b>Геоинформационные системы (ГИС). </b>Предназначены для автоматизации картографических и геодезических работ на основе информации, полученной топографическими или аэрокосмическими методами.</p> <p> <b>Системы видеомонтажа</b>. Предназначены для цифровой обработки видеоматериалов, их монтажа, создания видеоэффектов, устранения дефектов, наложения звука, титров и субтитров.</p>  4.Классификация служебных программных средств <p> <b>Диспетчеры файлов (файловые менеджеры).</b> С помощью программ данного класса выполняется большинство операций, связанных с обслуживанием файловой структуры: копирование, перемещение и переименование файлов, создание каталогов (папок), удаление файлов и каталогов, поиск файлов и навигация в файловой структуре.  </p> <p> <b>Средства сжатия данных (архиваторы).</b> Предназначены для создания архивов.  </p> <p> <b>Средства просмотра и воспроизведения.</b> Обычно для работы с файлами данных необходимо загрузить их в «родительскую» прикладную систему, с помощью которой они были созданы.  </p> <p> <b>Средства диагностики.</b> Предназначены для автоматизации процессов диагностики программного и аппаратного обеспечения.  </p> <p> <b>Средства контроля (мониторинга).</b> Программные средства контроля иногда называют мониторами.  </p> <p> <b>Мониторы установки.</b> Программы этой категории предназначены для контроля над установкой программного обеспечения.</p> <p> <b>Средства коммуникации (коммуникационные программы).</b> С появлением электронной связи и компьютерных сетей программы этого класса приобрели очень большое значение.  </p> <p> <b>Средства обеспечения компьютерной безопасности</b>. К этой весьма широкой категории относятся средства пассивной и активной защиты данных от повреждения, а также средства защиты от несанкционированного доступа, просмотра и изменения данных.</p> <p> В качестве средств пассивной защиты используют служебные программы, предназначенные для резервного копирования. Нередко они обладают и базовыми свойствами диспетчеров архивов (архиваторов). В качестве средств активной защиты применяют антивирусное программное обеспечение. Для защиты данных от несанкционированного доступа, их просмотра и изменения служат специальные системы основанные на криптографии.</p>
<br><br><p> <b>Информация в материальном мире. </b> </p> <p><b>Понятие информации</b></p> <p> Любая деятельность человека представляет собой процесс сбора и переработки информации, принятия на ее основе решении и их выполнения. С появлением современных средств вычислительной техники информация стала выступать в качестве одного из важнейших ресурсов научно-технического прогресса.</p> <p> Информация содержится в человеческой речи, текстах книг, журналов и газет, сообщениях радио и телевидения, показаниях приборов и т. д. Человек воспринимает информацию с помощью органов чувств, хранит и перерабатывает ее с помощью мозга и центральной нервной системы. Передаваемая информация обычно касается каких-то предметов или нас самих и связана с событиями, происходящими в окружающем нас мире.</p> <p> <b>Информация</b> относится к классу первичных понятий, по которым нельзя дать точного определения.  </p> <p> Оно предполагает:</p>   <p>наличие  материального  носителя информации;</p>  <p>источника  информации;</p>  <p>передатчика  информации;</p>  <p>приемника  информации;</p>  <p>канала  связи между  источником  и приемником.</p>  <p></p> <p>Рис. 1. Понятие информации</p> <p> Понятие информации используется во всех сферах: науке, технике, культуре, социологии и повседневной жизни. Конкретное толкование элементов, связанных с понятием информации, зависит от метода конкретной науки, цели исследования или просто от наших представлений.</p> <p> Термин<b> «информация» </b>происходит от латинского informatio — разъяснение, изложение, осведомленность. Энциклопедический словарь (М.: Сов. энциклопедия, 1990) определяет информацию в исторической эволюции: первоначально – сведения, передаваемые людьми устным, письменным или другим способом (с помощью условных сигналов, технических средств и т. д.); с середины XX века – общенаучное понятие, включающее обмен сведениями между людьми, человеком и автоматом, обмен сигналами в животном и растительном мире (передача признаков от клетки к клетке, от организма к организму).</p> <p> Более узкое определение дается в технике, где это понятие включает в себя все сведения, являющиеся объектом хранения, передачи и преобразования.</p> <p> Наиболее общее определение имеет место в философии, где под информацией понимается отражение реального мира. Информацию как философскую категорию рассматривают как один из атрибутов материи, отражающий ее структуру.</p> <p> В эволюционном ряду вещество –&gt; энергия –&gt; информация каждое последующее проявление материи отличается от предыдущего тем, что людям было труднее его распознать, выделить и использовать в чистом виде. Именно сложность выделения различных проявлений материи обусловила, наверное, указанную последовательность познания природы человечеством.</p> <p> В итоге понятие информации можно определить следующей формулировкой.</p> <p> <b>Информация</b> (information) – совокупность фактов, явлений, событий, представляющих интерес, подлежащих регистрации и обработке.</p> <p> Формы и виды информации</p> <p> С понятием информации связаны такие понятия, как сигнал, сообщение и данные.</p> <p> <b>Сигнал</b> (от латинского signum – знак) представляет собой любой процесс, несущий информацию.</p> <p> <b>Данные</b> – это информация, представленная в формализованном виде и предназначенная для обработки ее техническими средствами, например ЭВМ. (Данные – это зарегистрированные сигналы).</p> <p> <b>Сообщение</b> – это информация, представленная в определенной форме и предназначенная для передачи. (Данные, предназначенные для передачи).</p> <p> Различают две формы представления информации – <b>непрерывную</b><b>(аналоговую) и</b><b>дискретную</b><b>.</b> Поскольку носителями информации являются сигналы, то в качестве последних могут использоваться физические процессы различной природы. Например, процесс протекания электрического тока в цепи, процесс механического перемещения тела, процесс распространения света и т. д. Информация представляется (отражается) значением одного или нескольких параметров физического процесса (сигнала), либо комбинацией нескольких параметров.</p> <p> Сигнал называется непрерывным, если его параметр в заданных пределах может принимать любые промежуточные значения. Сигнал называется дискретным, если его параметр в заданных пределах может принимать отдельные фиксированные значения.</p> <p> Следует различать непрерывность или дискретность сигнала по уровню и во времени.</p> <p> На рис. 2 в виде графиков изображены: а) непрерывный по уровню и во времени сигнал Хнн; б) дискретный по уровню и непрерывный во времени сигнал Хдн; в) непрерывный по уровню и дискретный во времени сигнал Хнд; г) дискретный по уровню и во времени сигнал Хдд.</p>
<br><p></p> <p>Рис. 2. Форма представления информации</p> <p> Наконец, все многообразие окружающей нас информации можно сгруппировать по различным признакам, т. е. классифицировать по видам. Например, в зависимости от <b>области возникновения</b>:</p>   <p>информацию,  отражающую  процессы и  явления неодушевленной  при­роды, называют  <b>элементарной</b>,</p>  <p>информацию  о процессах  животного и  растительного  мира – <b>биологиче­ской</b>,</p>  <p>информацию  человеческого  общества –  <b>социальной</b><IDXSKIP>.</IDXSKIP></p>  <p> По <b>способу передачи</b> и восприятия различают следующие виды информации:</p>   <p><b>визуальную</b>  – передаваемую  видимыми образами  и символами;</p>  <p><b>аудиальную</b>  –  звуками;</p>  <p><b>тактильную  </b>–  ощущениями;</p>  <p><b>органолептическую  </b>–  запахами и  вкусом;</p>  <p><b>машинную</b>  – выдаваемую  и воспринимаемую  средствами  вычислительной  техники, и т.  д.</p>  <p>Свойства информации</p> <p> С точки зрения информатики наиболее важными представляются следующие свойства:</p>   <p>  объективность;</p>  <p>  полнота;</p>  <p>  достоверность;</p>  <p>  адекватность;</p>  <p>  доступность;</p>  <p>  актуальность.</p>  <p> <b>Объективность и субъективность информации.</b> Понятие объективности и субъективности информации является относительным. Это понятно, если учесть что методы являются субъективными. Более объективной принято считать ту информацию, в которую методы вносят меньший субъективный элемент. Так например, принято считать, что в результате наблюдения фотоснимка природного объекта или явления образуется более объективная информация, чем в результате наблюдения рисунка того же объекта, выполненного человеком.</p> <p> <b>Полнота информации.</b> Полнота информации во многом характеризует качество информации и определяет достаточность данных для принятия решений или для создания для создания новых данных на основе имеющихся.</p> <p> <b>Достоверность информации.</b> Данные возникают в момент регистрации сигналов, но не все сигналы являются «полезными» – всегда присутствует какой – то уровень посторонних сигналов, в результате чего полезные данные сопровождаются определённым уровнем «информационного шума».</p> <p> </p> <p>Рис. 3. Форма представления информации</p> <p> <b>Адекватность информации</b> – это степень соответствия реальному объективному состояния дела. Неадекватная информация может образоваться при создании новой информации на основе неполных и недостоверных данных.</p> <p> <b>Доступность</b> <b>информации</b> – мера возможности получить ту или иную информацию. На степень доступности информации влияют одновременно как доступность данных, так и доступность адекватных методов для их интерпретации.</p> <p> <b>Актуальность</b> <b>информации</b> – это степень соответствия информации текущему моменту времени. Нередко с актуальностью, как и с полнотой, связывают коммерческую ценность информации. Поскольку информационные процессы растянуты во времени, то достоверная и адекватная, но устаревающая информация может приводить к ошибочным решениям.</p> <p> Количество информации</p> <p> <b>Количеством информации</b> называют числовую характеристику сигнала, отражающую ту степень неопределенности (неполноту знаний), которая исчезает после получения сообщения в виде данного сигнала. Эту меру неопределенности в теории информации называют<b>энтропией</b><b>.</b></p> <p> Если в результате получения сообщения достигается полная ясность в каком-то вопросе, говорят, что была получена полная или исчерпывающая информация и необходимости в получении дополнительной информации нет. И, наоборот, если после получения сообщения неопределенность осталась прежней, значит, информации получено не было (нулевая информация).</p> <p> Приведенные рассуждения показывают, что между понятиями информация, неопределенность и возможность выбора существует тесная связь. Так, любая неопределенность предполагает возможность выбора, а любая информация, уменьшая неопределенность, уменьшает и возможность выбора. При полной информации выбора нет. Частичная информация уменьшает число вариантов выбора, сокращая тем самым неопределенность.</p> <p> Пример. Человек бросает монету и наблюдает, какой стороной она упадет. Обе стороны монеты равноправны, поэтому одинаково вероятно, что выпадет одна или другая сторона. Такой ситуации приписывается начальная неопределенность, характеризуемая двумя возможностями. После того, как монета упадет, достигается полная ясность и неопределенность исчезает (становится равной нулю).</p> <p> Приведенный пример относится к группе событий, применительно к которым может быть поставлен вопрос типа «да-нет». Количество информации, которое можно получить при ответе на вопрос типа «да-нет», называется<b>битом</b> (англ. bit — сокращенное от binary digit — двоичная единица).</p> <p> <b>Бит</b> – минимальная единица количества информации, ибо получить информацию меньшую, чем 1 бит, невозможно. При получении информации в 1 бит неопределенность уменьшается в 2 раза. Таким образом, каждое бросание монеты дает нам информацию в 1 бит.</p> <p> Рассмотрим систему из двух электрических лампочек, которые независимо друг от друга могут быть включены или выключены. Для такой системы возможны следующие состояния:</p>   <table cellpadding="7" cellspacing="0">
<tr valign="TOP">
<td style="border: none; padding: 0in;">Лампа     А</td>    <td style="border: none; padding: 0in;">0</td>    <td style="border: none; padding: 0in;">0</td>    <td style="border: none; padding: 0in;">1</td>    <td style="border: none; padding: 0in;">1</td>   </tr>
<tr valign="TOP">
<td style="border: none; padding: 0in;">Лампа     В</td>    <td style="border: none; padding: 0in;">0</td>    <td style="border: none; padding: 0in;">1</td>    <td style="border: none; padding: 0in;">0</td>    <td style="border: none; padding: 0in;">1</td>   </tr>
</table>
<p> Чтобы получить полную информацию о состоянии системы, необходимо задать два вопроса типа «да-нет» – по лампочке А и лампочке В соответственно. В этом случае количество информации, содержащейся в данной системе, определяется уже в 2 бита, а число возможных состояний системы – 4. Если взять три лампочки, то необходимо задать уже три вопроса и получить 3 бита информации. Количество состояний такой системы равно 8 и т. д.</p> <p> Связь между количеством информации и числом состояний системы устанавливается формулой Хартли:</p> <p>i=log2N, где i — количество информации в битах; N – число возможных состояний. Ту же формулу можно представить иначе: N =2i.</p> <p>Информационная революция</p> <p> Для того чтобы показать, что это не преувеличение, и мы действительно вступаем в новую информационную эпоху, рассмотрим график, который показывает изменение со временем относительной доли занятых в трех основных секторах общественного производства: сельском хозяйстве, промышленности и нематериальной сфере управлении и обработки информации.</p> <p> В эпоху средневековья основная часть населения была занята в аграрном секторе, промышленные мануфактуры были неразвиты, а сфера духовной жизни была представлена дворянством, немногочисленным чиновничеством и служителями церкви.</p> <p> Новое время, отсчет которого традиционно ведется с английской буржуазной революции середины XVII века, характеризуется бурным ростом промышленного производства. Капиталистические преобразования и великие изобретения конца XVIII - начала XIX веков превратили Европу в царство заводов и фабрик, насыщенное железнодорожными линиями, оснащенное телеграфной и быстрой почтовой связью. Число занятых в промышленности стремительно возросло, сравнявшись в передовых странах с числом аграриев.  </p> <p> Точка пересечения соответствующих двух кривых вполне объективно может быть отождествлена с промышленной революцией, в результате которой человечество перешло от аграрной эпохи к индустриальной. Конечно, промышленная революция произошла не мгновенно и не одновременно в разных странах, однако в целом привязка ее к концу XVIII века не вызывает сомнений.  </p> <p> Результатом повсеместной индустриализации было резкое повышение производительности труда в сфере материального производства. Если в аграрную эпоху сельские жители с трудом могли прокормить себя, то к концу XX века в передовых странах 5-10% населения обеспечивает потребность общества в продуктах питания. То же самое относится к промышленности, где при постоянном увеличении объемов производства количество работающих уменьшается.</p> <p> С другой стороны, научно-технический прогресс приводит к постоянному увеличению количества информации, циркулирующей в обществе, соответственно увеличивается доля работников, занятых ее сбором, хранением, передачей, переработкой, распространением. Сфера нематериального производства (управление, наука, культура, искусство, образование и т. п.) в большинстве стран развивалась значительно более высокими темпами, к концу XX века доля «белых воротничков» среди всех занятых в общественном производстве стала преобладающей. Этот факт свидетельствует о наступлении «второй промышленной» или, точнее, информационной революции и переходе человечества от индустриальной к постиндустриальной, информационной эпохе.</p> <p> Однако простым увеличением числа работающих справиться с возрастающим потоком информации невозможно. Дело в том, что количество информации растет со временем не линейно, а экспоненциально. Например, накопленные человечеством знания в области науки и техники удваиваются каждые несколько лет, причем даже скорость этого обновления постоянно возрастает. Еще в XVIII веке один ученый-энциклопедист мог прочитать все научные труды предшественников и удержать в своей памяти все знания, считавшиеся на тот момент научными, сейчас же за 2-3 года создается такой же объем новых знаний, который накапливался за всю предшествующую историю. Это явление названо информационным взрывом. Если бы производительность труда в информационной сфере оставалась неизменной, то все занятое население со временем вынуждено бы было переместиться в нематериальное производство, и некому было бы его кормить и одевать. Человечеству объективно понадобился инструмент, способный резко усилить мыслительные возможности человека, подобно тому, как в эпоху первой промышленной революции были изобретены машины, умножившие его физические возможности. Этим инструментом стала вычислительная машина – компьютер.</p> <p> Компьютер – необходимый, но не единственный рычаг информационной революции. Он может хранить и обрабатывать информацию, но не способен передавать ее на расстояние.</p> <p> Связь – тот же транспорт, но для информации. В наступившую информационную эпоху ее значение невозможно переоценить. Не случайно обобщенный показатель развития сети электросвязи – телефонная плотность, то есть количество телефонов на 100 жителей – входит в число шести основных критериев Международного валютного фонда, определяющих экономический уровень развития страны. В промышленно развитых странах он достигает значения 40 и более, в России приближается к 20, однако в последние годы электросвязь в нашей стране развивается очень быстрыми темпами, так что перспективы попасть в информационно развитые страны у России остается.</p> <p> Компьютер и связь – два ключевых понятия, два равноценных рычага информационной революции. Долгое время они развивались независимо друг от друга, но в 80-х и 90-х годах начался процесс их интенсивного сближения. С одной стороны, электросвязь дала компьютерам возможность объединяться в локальные и глобальные компьютерные сети. С другой стороны, все современные средства связи, будь то телефонная станция или студийный телевизионный комплекс, по сути представляют собой сложные программно-управляемые микропроцессорные системы.</p> <p> Технические и социальные последствия интеграции коммуникационных и компьютерных технологий столь значительны, что специалисты сравнивают этот процесс со слиянием двух половинок ядерного заряда в атомной бомбе. В результате в последние несколько лет мы наблюдаем информационной взрыв невиданной силы. Сотовые телефоны, Интернет, пластиковые деньги, электронная торговля, дистанционное образование – первые проявления этого необыкновенного явления.</p></div></div></div>
      

      
      
      
    </div>

    
      <div class="links-container">

        
      </div>

    
    
      <div class="clearfix">

        
      </div>

    
  </div><!--end node container-->

</div><!--end node-->

<div class="bannerup-listing-abst">



<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Skyscraper 300x600 Resh -->
<ins class="adsbygoogle"
     style="display:inline-block;width:300px;height:600px"
     data-ad-client="ca-pub-5843187647206475"
     data-ad-slot="5977734478"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>



</div>  </div>
</div> <!-- /block --></div>
<!-- end region -->
          </div>

          <!--end drupal content-->



          


          

        </div>

        <!--end main content-->

	 			

          
		    		

		    
		    

        
						

						

				


      

      </div>

      <!--end innerContent-->





      
    </div>

    <!--end contentWrapper-->



	</div>

  <!--close page border Wrapper-->



  


</div>

<!--end framework container-->



<!-- Google -->



<script>

  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){

  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),

  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)

  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');



  ga('create', 'UA-45994083-1', 'reshebniki-online.ru');

  ga('send', 'pageview');



</script>



<!--end Google  -->






	  
	</body><!--end body-->

</html>
<!-- Page cached by Boost @ 2017-06-24 15:12:59, expires @ 2017-10-14 15:12:59, lifetime 3 months 3 weeks -->
