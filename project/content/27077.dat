0zn.ru/programmirovanie_i_komp-ry/obuchayushhaya_programma_grafika.html
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">

<HTML>


<HEAD>

<meta http-equiv="content-type" content="text/html;charset=windows-1251">



<title>Обучающая программа Графика программированию в графическом режиме на языке turbo-pascal 7.x - БОЛЬШАЯ НАУЧНАЯ БИБЛИОТЕКА</title>

<META  name="Description" content="Обучающая программа Графика программированию в графическом режиме на языке turbo-pascal 7.x СОДЕРЖАНИЕ ВВЕДЕНИЕ...................................................... 7 1. НАЗНАЧЕНИЕ ОБУЧАЮЩЕЙ ПРО...">
<META  name="keywords" content="рефераты бесплатно, реферат бесплатно, курсовые работы, Обучающая программа Графика программированию в графическом режиме на языке turbo-pascal 7.x, реферат, доклады, рефераты, рефераты скачать">





<link rel="stylesheet" type="text/css" href="/style.css">



</HEAD>


<BODY>


<table cellpadding="0" cellspacing="0" border="0" width="100%" height="100%" title="рефераты">

<tr title="рефераты"><td>

<table cellpadding="0" cellspacing="0" border="0" width="100%" title="рефераты">

<tr title="рефераты">

<IDXSKIP><td title="рефераты">&nbsp;</td></IDXSKIP>

<td width="100%" valign="top">

<table cellpadding="0" cellspacing="0" border="0" width="100%" title="рефераты">

<IDXSKIP><tr title="рефераты"><td class="qqq" title="рефераты">

<table cellpadding="0" cellspacing="0" border="0" width="100%" title="рефераты">

<tr title="рефераты">

<td width="19" title="рефераты">&nbsp;</td>

<td align="center" valign="bottom" title="рефераты"><font color="#05326E" size="+1">БОЛЬШАЯ НАУЧНАЯ БИБЛИОТЕКА</font></td>

<td width="19" title="рефераты">&nbsp;</td>
</tr>
</table>			

</td></tr></IDXSKIP>

<IDXSKIP><tr title="рефераты"><td title="рефераты"><img src="/logo.gif" align="рефераты"><img src="/logo2.gif" width="363" height="112" alt="рефераты"></td>
</tr></IDXSKIP>

<tr title="рефераты"><td title="рефераты">

<table cellpadding="0" cellspacing="0" border="0" width="100%" title="рефераты">

<tr title="рефераты">

<td class="wwww" title="рефераты"><IDXSKIP>Добро пожаловать на сайт Большой Научной Библиотеки!</IDXSKIP><!--qqq--></td>

<IDXSKIP><td title="рефераты" width="251"><img src="/pics/3_news.png" width="251" height="39" border="0" alt="рефераты"></td></IDXSKIP>
</tr>
</table>			

</td></tr>
</table>		

</td>

</tr>

</table>

</td></tr>

<tr title="рефераты"><td height="100%" title="рефераты">

<table cellpadding="0" cellspacing="0" border="0" width="100%" style="height:100%" title="рефераты">

<tr title="рефераты">

<td class="eeee" title="рефераты">

<table cellpadding="0" cellspacing="0" border="0" width="100%" style="height:100%" title="рефераты">

<tr title="рефераты"><td title="рефераты">

<!--aaa--></td></tr>

<IDXSKIP><tr title="рефераты"><td title="рефераты"><img src="/pics/menu_end.png" width="217" height="11" border="0" alt="рефераты"></td></tr></IDXSKIP>

<tr title="рефераты"><td class="rrrr" title="рефераты">



<table cellpadding="0" cellspacing="0" border="0" width="100%" title="рефераты"><IDXSKIP><tr title="рефераты"><th>Меню</th></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/index.html">Главная</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/nalogi_2.html">Налоги</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/nachertatelnaya_geometriya.html">Начертательная геометрия</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/okkultizm_i_ufologiya.html">Оккультизм и уфология</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/pedagogika.html">Педагогика</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/poligrafiya.html">Полиграфия</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/politologiya.html">Политология</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/pravo.html">Право</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/predprinimatelstvo.html">Предпринимательство</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/programmirovanie_i_komp-ry.html">Программирование и комп-ры</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/radioelektronika.html">Радиоэлектроника</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/regionalnaya_ekonomika.html">Региональная экономика</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/rezhushhij_instrument.html">Режущий инструмент</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/reklama_i_pr.html">Реклама и PR</a></td></tr></IDXSKIP>
<tr title="рефераты"><td class="tttt" title="рефераты"><a href="/restoranno-gostinichnyj_biznes_bytovoe.html"><IDXSKIP>Ресторанно-гостиничный бизнес бытовое обслуживан</IDXSKIP></a></td></tr>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/rimskoe_pravo.html">Римское право</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/russkij_yazyk_kultura_rechi.html">Русский язык культура речи</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/rcb_cennye_bumagi.html">РЦБ ценные бумаги</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/sapr_2.html">САПР</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/seksologiya.html">Сексология</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/semejnoe_pravo_3.html">Семейное право</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/sociologiya.html">Социология</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/straxovoe_pravo.html">Страховое право</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/stroitelstvo_arxitektura.html">Строительство архитектура</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/tamozhennoe_pravo.html">Таможенное право</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/teoriya_gosudarstva_i_prava_2.html">Теория государства и права</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/texnologiya.html">Технология</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/tamozhennaya_sistema.html">Таможенная система</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/transport.html">Транспорт</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/fizika_i_energetika.html">Физика и энергетика</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/filosofiya.html">Философия</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/finansy_dengi_i_nalogi.html">Финансы деньги и налоги</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/fizkultura_i_sport.html">Физкультура и спорт</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/fotografiya.html">Фотография</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/ximiya.html">Химия</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/xozyajstvennoe_pravo.html">Хозяйственное право</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/cifrovye_ustrojstva_2.html">Цифровые устройства</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/ekologicheskoe_pravo.html">Экологическое право</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/ekologiya.html">Экология</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/ekonomika.html">Экономика</a></td></tr></IDXSKIP>
<tr title="рефераты"><td class="tttt" title="рефераты"><a href="/ekonomiko-matematicheskoe_modelirovanie.html"><IDXSKIP>Экономико-математическое моделирование</IDXSKIP></a></td></tr>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/ekonomicheskaya_geografiya.html">Экономическая география</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/ekonomicheskaya_teoriya_3.html">Экономическая теория</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/ergonomika_4.html">Эргономика</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/etika_i_estetika.html">Этика и эстетика</a></td></tr></IDXSKIP>
<tr title="рефераты"><td class="tttt" title="рефераты"><a href="/sochineniya_po_literature_i_russkomu.html"><IDXSKIP>Сочинения по литературе и русскому языку</IDXSKIP></a></td></tr>
<tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_teorii_gosudarstva_i_prava.html"><IDXSKIP>Рефераты по теории государства и права</IDXSKIP></a></td></tr>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_teorii_organizacii.html">Рефераты по теории организации</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_teplotexnike.html">Рефераты по теплотехнике</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_tovarovedeniyu.html">Рефераты по товароведению</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_trudovomu_pravu.html">Рефераты по трудовому праву</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_turizmu.html">Рефераты по туризму</a></td></tr></IDXSKIP>
<tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_ugolovnomu_pravu_i_processu.html"><IDXSKIP>Рефераты по уголовному праву и процессу</IDXSKIP></a></td></tr>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_upravleniyu.html">Рефераты по управлению</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_menedzhmentu.html">Рефераты по менеджменту</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_metallurgii.html">Рефераты по металлургии</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_municipalnomu_pravu.html">Рефераты по муниципальному праву</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/biografii.html">Биографии</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_psixologii.html">Рефераты по психологии</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_ritorike.html">Рефераты по риторике</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_statistike.html">Рефераты по статистике</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_straxovaniyu.html">Рефераты по страхованию</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_sxemotexnike.html">Рефераты по схемотехнике</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_nauke_i_texnike.html">Рефераты по науке и технике</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_kulinarii.html">Рефераты по кулинарии</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_kulturologii.html">Рефераты по культурологии</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_zarubezhnoj_literature.html">Рефераты по зарубежной литературе</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_logike.html">Рефераты по логике</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_logistike.html">Рефераты по логистике</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_marketingu.html">Рефераты по маркетингу</a></td></tr></IDXSKIP>
<tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_mezhdunarodnomu_publichnomu.html"><IDXSKIP>Рефераты по международному публичному праву</IDXSKIP></a></td></tr>
<tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_mezhdunarodnomu_chastnomu.html"><IDXSKIP>Рефераты по международному частному праву</IDXSKIP></a></td></tr>
<tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_mezhdunarodnym_otnosheniyam.html"><IDXSKIP>Рефераты по международным отношениям</IDXSKIP></a></td></tr>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_kulture_i_iskusstvu.html">Рефераты по культуре и искусству</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_kreditovaniyu.html">Рефераты по кредитованию</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_estestvoznaniyu.html">Рефераты по естествознанию</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_istorii_texniki.html">Рефераты по истории техники</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_zhurnalistike.html">Рефераты по журналистике</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_zoologii.html">Рефераты по зоологии</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_investiciyam.html">Рефераты по инвестициям</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_informatike.html">Рефераты по информатике</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/istoricheskie_lichnosti.html">Исторические личности</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_kibernetike.html">Рефераты по кибернетике</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_kommunikacii_i_svyazi.html">Рефераты по коммуникации и связи</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_kosmetologii.html">Рефераты по косметологии</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_kriminalistike.html">Рефераты по криминалистике</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/referaty_po_kriminologii.html">Рефераты по криминологии</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/novye_ili_neperechislennye.html">Новые или неперечисленные</a></td></tr></IDXSKIP>
<IDXSKIP><tr title="рефераты"><td class="tttt" title="рефераты"><a href="/bez_kategorii.html">Без категории</a></td></tr></IDXSKIP></table>







<table cellpadding="0" cellspacing="0" border="0" width="100%" title="рефераты">

<tr title="рефераты">

<td class="tttt" title="рефераты">

<!-- www --> 

</td>

</tr>

<tr>

</table>

<!--eeee--></td></tr>

</table>

</td>

<td class="yyyyy" title="рефераты"><!--rrr-->
  <!-- tttt -->
<h1 class="gggg1" title="рефераты">Обучающая программа Графика программированию в графическом режиме на языке turbo-pascal 7.x</h1>
<!--yyy-->
			
<p><h1>Обучающая программа Графика программированию в графическом режиме на языке turbo-pascal 7.x</h1></p>
<IDXSKIP><p>СОДЕРЖАНИЕ</p></IDXSKIP>
<p>ВВЕДЕНИЕ...................................................... 7</p>
<p>1. НАЗНАЧЕНИЕ ОБУЧАЮЩЕЙ ПРОГРАММЫ............................. 9</p>
<p>1.1. Обзор существующих обучающих средств и методов........... 9</p>
<p>1.2. Назначение программы для обучения работе в графическом</p>
<p>режиме........................................................ 12</p>
<p>1.2.1. Роль ЭВМ в учебном процессе СПГУАП..................... 12</p>
<p>1.2.2. Методика обучения с помощью обучающей программы........ 13</p>
<p>1.2.3. Возможности языка TURBO-PASCAL 6.0\7.О ................ 16</p>
<p>1.3. Техническое задание...................................... 17</p>
<p>1.3.1. Постановка задачи...................................... 17</p>
<p>1.3.2. Выбор технических средств и программного обеспечения... 18</p>
<p>1.3.3. Технико-экономическое обоснование ..................... 18</p>
<p>2. ОПИСАНИЕ БАЗЫ ДАННЫХ....................................... 20</p>
<p>2.1. Методическое оснащение базы данных....................... 20</p>
<p>2.2. Структура базы данных.................................... 22</p>
<p>2.3. Возможности изменения или обновления .................... 25</p>
<p>2.3.1. Теория................................................. 25</p>
<p>2.3.2. Вопросы................................................ 26</p>
<p>2.3.3. Справки ............................................... 28</p>
<p>3. ОПИСАНИЕ ПРОГРАММЫ......................................... 30</p>
<p>3.1. Общие сведения........................................... 30</p>
<p>3.2. Функциональное назначение................................ 31</p>
<p>3.3. Описание логической структуры............................ 32</p>
<p>3.4. Используемые технические средства........................ 38</p>
<p>3.5. Вызов и загрузка......................................... 39</p>
<p>3.6. Входные и выходные данные................................ 39</p>
<p>4. ОПИСАНИЕ ПРИМЕНЕНИЯ........................................ 41</p>
<p>4.1. Назначение программы..................................... 41</p>
<p>4.2. Условия применения....................................... 41</p>
<p>4.2.1. Технические средства................................... 41</p>
<p>4.2.2. Общие характеристики входной и выходной информации..... 42</p>
<p>4.3. Пример использования..................................... 42</p>
<p>5. РУКОВОДСТВО ПРОГРАММИСТА................................... 45</p>
<p>5.1. Назначение и условия применения программы................ 45</p>
<p>5.2. Характеристики программы................................. 45</p>
<p>5.3. Обращение к программе.................................... 46</p>
<p>5.4. Входные и выходные данные................................ 46</p>
<p>6. РУКОВОДСТВО ОПЕРАТОРА...................................... 47</p>
<p>6.1. Назначение программы .................................... 47</p>
<p>6.2. Условия выполнения программы............................. 47</p>
<p>6.3. Выполнение программы..................................... 47</p>
<p>6.4. Сообщения оператору...................................... 48</p>
<p>7. ТЕХНОЛОГИЯ ИСПОЛЬЗОВАНИЯ ОБУЧАЮЩЕЙ ПРОГРАММЫ............... 49</p>
<p>8. ПЛАНИРОВАНИЕ РАБОТ ПО СОЗДАНИЮ  ОБУЧАЮЩЕЙ ПРОГРАММЫ.</p>
<p>СМЕТА ЗАТРАТ.................................................. 51</p>
<p>8.1. Построение ленточного  графика........................... 51</p>
<p>8.2. Расчет  сметы  затрат ................................... 54</p>
<p>9. ВОПРОСЫ ОХРАНЫ ТРУДА И ОКРУЖАЮЩЕЙ СРЕДЫ.БЕЗОПАСНОСТЬ И</p>
<p>ХАРАКТЕРИСТИКА САНИТАРНО-ГИГИЕНИЧЕСКИХ УСЛОВИЙ ТРУДА НА</p>
<p>РАБОЧЕМ МЕСТЕ ПОЛЬЗОВАТЕЛЯ.................................... 57</p>
<p>9.1. Основные санитарно-технические требования к помещению ... 57</p>
<p>9.2. Характеристика санитарно-гигиенических условий труда..... 57</p>
<p>9.2.1. Микроклимат производственного помещения................ 57</p>
<p>9.2.2. Вредные вещества и пыль................................ 59</p>
<p>9.2.3. Излучение.............................................. 60</p>
<p>9.2.4. Освещенность........................................... 60</p>
<p>9.2.5. Шум.................................................... 61</p>
<p>9.3. Расчет необходимого воздухообмена........................ 61</p>
<p>9.4. Система освещения........................................ 62</p>
<p>9.5. Инженерно-технические мероприятия по созданию</p>
<p>благоприятных условий труда................................... 62</p>
<p>9.5.1. Защита от шума......................................... 62</p>
<p>9.5.2. Защита от излучения.................................... 63</p>
<p>9.5.3. Меры защиты от поражения электрическим током........... 63</p>
<p>9.6.  Организация рабочего места пользователя при работе</p>
<p>с терминалом.................................................. 65</p>
<p>9.7. Противопожарные требования............................... 65</p>
<p>9.8.Приборы контроля параметров среды ........................ 66</p>
<p>ЗАКЛЮЧЕНИЕ.................................................... 68</p>
<p>СПИСОК ИСПОЛЬЗОВАННЫХ ИСТОЧНИКОВ.............................. 69</p>
<p>ПРИЛОЖЕНИЕ 1  Текст программы................................. 70</p>
<p>ПРИЛОЖЕНИЕ 2  База данных..................................... 107</p>
<p>ПРИЛОЖЕНИЕ 3  Экранные формы  ................................ 157</p>
<IDXSKIP><p>                                  ВВЕДЕНИЕ</p></IDXSKIP>
<p>      Обучение - очень  важный  процесс  в  современном  обществе.  От  того</p>
<p>насколько  качественно  и  эффективно  оно  будет   осуществляться   зависит</p>
<p>благосостояние народа. В  нынешней  сложной  экономической  ситуации  крайне</p>
<p>необходим прилив новых хорошо подготовленных кадров во все  сферы  народного</p>
<p>хозяйства. Необходимо быстрое внедрение всех достижений науки  и  техники  в</p>
<p>производство-    Возрождение    отечественного    производства    -    залог</p>
<p>экономического подъема, роста социального благосостояния народа.</p>
<p>      Компьютер - одно из главных изобретений века. В последнее  десятилетие</p>
<p>он стал неотъемлемой частью жизни  человека.  Компьютер  применяют  в  самых</p>
<p>различных  областях   жизнедеятельности   начиная   с   решения   простейших</p>
<p>математических  задач,  моделирования  различных  процессов,  применение   в</p>
<p>банковском деле, медицине,  образовании,  издательском  деле,  использование</p>
<p>компьютера для  управления  различной  техникой  в  том  числе  автомобилем,</p>
<p>самолетом, космическим кораблем до использования в быту, играх.</p>
<p>      Идея обучения с помощью компьютера родилась давно. Связана она была  с</p>
<p>видимостью человекоподобного поведения  компьютера,  его  способности  вести</p>
<p>осмысленный диалог с человеком.</p>
<p>      Первые попытки внедрить компьютер В обучение были сделаны еще  в  50-х</p>
<p>годах , когда в качестве устройства ввода/вывода  использовался  телеграфный</p>
<p>аппарат.  В  течение  последующих  40-лет  ведутся  непрерывные  интенсивные</p>
<p>исследования в этой области. За это время компьютерная  техника  изменилась,</p>
<p>стала   более   совершенной,    появились    персональные    компьютеры    ,</p>
<p>микрокомпьютеры.  Разработано  программное  обеспечение   ,   обеспечивающее</p>
<p>довольно широкое использовать технический возможности  компьютера.  Снижение</p>
<p>стоимости компьютерной  техники  позволило  внедрить  ее  в  образовательных</p>
<p>учреждениях. Теперь компьютеры пошли в школы, институты и  в  количественном</p>
<p>выражении Компьютеризация образования идет  высокими  темпами:  в  отдельных</p>
<p>странах число школьных компьютере составляет уже десятки и сотни тысяч, а  в</p>
<p>США - миллионы. И в нашей стране школьники старших  классов  уже  в  течение</p>
<p>семи лет изучают такой предмет как информатика, знакомятся с компьютерами  и</p>
<p>основами работы на них.  Однако,  обучение  с  помощью  компьютера  остается</p>
<p>малоэффективным.  Основная  причина  состоит   в   том,   что   разработчики</p>
<p>автоматизированных  обучающих   систем   преследуют   цель   компьютеризация</p>
<p>обучения ради самой компьютеризацию!. Мало внимания уделяется дидактике.</p>
<p>      Возможности  применения  компьютера   в   учебном   процессе,   весьма</p>
<p>многообразны. Он может  служить  для  моделирования  изучаемых  явлений  или</p>
<p>систем, для реализации учебных игр, применяться для выполнения вычислений  ,</p>
<p>для редактирования текстов,  в  качестве  различного  рода  тренажеров,  как</p>
<p>инструмент   автоматизации   проектирования,   программируемого   управления</p>
<p>экспериментами,  как  информационно-поисковая  или  экспертная   система   и</p>
<p>наконец как средство практического обучения  самой  компьютерной  технике  и</p>
<p>программированию .</p>
<p>      В настоящее время уже создано множество  средств  обучения  с  помощью</p>
<p>компьютера-  Их  можно  квалифицировать  следующим   образом:   компьютерные</p>
<p>учебники,   предметно-ориентированные   среды    (микромиры,    моделирующие</p>
<p>программы,   учебные    пакеты),    лабораторные    практикумы    тренажеры,</p>
<p>контролирующие программы.</p>
<p>      Компьютеры  прочно  вошли  в   учебный   процесс   Санкт-Петербургской</p>
<p>государственной академии аэрокосмического приборостроения.  Компьютер  здесь</p>
<p>служит не Только предмета изучения, но и средством обучения. Уже внедрены  и</p>
<p>применяются ряд компьютерных программ для обучения и контроля,  в  частности</p>
<p>контролирующие  программы,  моделирующие  с  элементами  контроля  по  таким</p>
<p>предметам как  "Охрана  труда",  "Экономика  и  планирование  производства",</p>
<p>"Схемотехника", "Кодирование информации" и др...</p>
<p>      Однако, потребности академии в компьютерных  обучающих  программах  не</p>
<p>удовлетворены.  Именно  поэтому  темой  данной  дипломной  разработки  стала</p>
<p>программа  для  обучения  работе  в  графическом  режиме.  В  учебном  плане</p>
<p>академии отсутствует лекционный курс по теме "Графический режим языка Turbo-</p>
<p>Pascal".  Это  делает  сложным  работу   со   студентами   на   лабораторных</p>
<p>практикумах,  вызывает  много  вопросов  у  студентов  и  усложняет   работу</p>
<p>преподавателей.  Среди  уже  существующих  обучающих  программ   отсутствует</p>
<p>программа обучения  работе  в  графическом  режиме.  К  требуемой  программе</p>
<p>предъявлялись  совершенно  конкретные   специальные   требования   .   Перед</p>
<p>разработчиком была поставлена  задача  создания  программы  для  обучения  с</p>
<p>элементами  контроля,  дающей  возможность  повторного  изучения  материала,</p>
<p>поясняющей ошибки обучаемому студенту.  Программа  должна  включать  в  себя</p>
<p>соответствующий  методический  материал  по  заданной  теме,   подобрать   и</p>
<p>оформить который предстояло также разработчику.</p>
<p>      Именно  такая  программа  была  создана.  Программа   имеет   название</p>
<p>"Графика" , содержит теоретический материал по  заданной  теме,  контрольные</p>
<p>вопросы с необходимыми поясняющими справками.</p>
<p>Разработчик  надеется,  что  цель  восполнения  пробела  лекционного  курса,</p>
<p>повышения качества и  интенсивности  обучения  студентов  с    '  "  помощью</p>
<p>данной программы, им достигнута.</p>
<p>      1. НАЗНАЧЕНИЕ ОБУЧАЮЩЕЙ ПРОГРАММЫ</p>
<p>        1. Обзор существующих обучающих средств и методов</p>
<p>      Известно, что возможности применения компьютеров  в  учебном  процессе</p>
<p>весьма многообразны. Он может служить для  моделирования  изучаемых  явлений</p>
<p>или  систем,  для  реализации  учебных  игр,  применяться   для   выполнения</p>
<p>вычислений,  для  редактирования  текстов,  в   качестве   различного   рода</p>
<p>тренажеров,   а   также   как   инструмент   автоматизации   проектирования,</p>
<p>программируемого управления экспериментами, как информационно-поисковая  или</p>
<p>экспертная система,  наконец,  как  средство  практического  обучения  самой</p>
<p>компьютерной технике  и  программированию.  Вместе  с  тем,  особый  интерес</p>
<p>представляет использование компьютера в качестве дидактического  инструмента</p>
<p>общего назначения, применимого для обучения любым знаниям.</p>
<p>      Идея обучения с помощью компьютера  появилась  давно.  Первые  попытки</p>
<p>относятся к концу 50-х годов. В то время уже имелась  возможность  "общения"</p>
<p>человека с  компьютером  посредством  используемого  в  качестве  устройства</p>
<p>ввода/вывода    телеграфного    аппарата-телетайпа.    Надлежащим    образом</p>
<p>запрограммированный компьютер заносит в свою память набираемый человеком  на</p>
<p>клавиатуре телетайпа текст  запроса,  а  по  окончании  ввода  этого  текста</p>
<p>производит  некоторый  анализ  его   и   печатает   на   телетайпе   заранее</p>
<p>заготовленный, или конструируемый из подходящих элементов текст ответа.  Или</p>
<p>проще - компьютер выдает на телетайп текст  вопроса  или  условия  задачи  и</p>
<p>ждет  ввода  с  клавиатуры  ответа,  который  затем  сверяется  с  имеющимся</p>
<p>эталоном, чтобы выдать  оценку:  верно/неверно.  С  тех  пор  во  всем  мире</p>
<p>ведутся непрерывные научные поиски решения проблемы эффективного и  дешевого</p>
<p>способа обучения с помощью компьютера.</p>
<p>      Проблему  дороговизны  попробовали  решить  в  70-е  годы  специалисты</p>
<p>Иллинойского  университета.  Их  силами  была  создана   поражавшая   своими</p>
<p>техническими возможностями суперсистема  PLATOIY.  Каждому  учащемуся  здесь</p>
<p>был предоставлен уже не телетайп, а комфортабельный  терминал  с  плазменным</p>
<p>дисплеем, обеспечивающим выдачу  произвольного  текста,  графики  и  цветных</p>
<p>кадров с микрофишей в  сопровождении  звука.  Расчеты  на  низкую  стоимость</p>
<p>системы не оправдались и после проведенных  испытаний  в  условиях  обучения</p>
<p>школьным предметам  выявилась  сложность,  дидактическая  неэффективность  и</p>
<p>трудоемкость подготовки учебных  материалов.  Создание  компьютерных  систем</p>
<p>обучения приняло широкий размах и в связи с  этим  говорили  о  революции  в</p>
<p>образовании.  Но  в  действительности  существенного  влияния  на   практику</p>
<p>обучения разрабатываемые системы не оказали, и ни одна из  них  не  получила</p>
<p>сколько-нибудь значительного применения: системы создавались сами  по  себе,</p>
<p>а обучение людей  производилось  с  помощью  книг  и  лекций.  С  появлением</p>
<p>массового    производства    недорогих    и    удобных    в    использовании</p>
<p>микрокомпьютеров,  компьютеризация  в  настоящее  время   в   количественном</p>
<p>выражении идет высокими темпами.</p>
<p>      В конце 80-х годов проблемной лабораторией электронных  вычислительных</p>
<p>машин    Московского    государственного    университета    была     создана</p>
<p>микрокомпьютерная система обучения "Наставник".  Эта  система  предназначена</p>
<p>для  обучения  предметам  теоретического  характера  в  вузах,   техникумах,</p>
<p>профессионально-технических училищах,  общеобразовательных  школах,  центрах</p>
<p>подготовки, переподготовки и повышения квалификации кадров на  предприятиях.</p>
<p>Типовой вариант системы рассчитан на обучение одновременно до  32  учащихся,</p>
<p>обслуживаемых одним микрокомпьютером. Система проста и удобна в  управлении,</p>
<p>не требует специальной подготовки преподавателей  и  удобна  для  обучаемых.</p>
<p>Все общение с  компьютером  происходит  по  подсказкам  и  контролем  с  его</p>
<p>стороны.   В  состав  аппаратуры  системы   входит   микрокомпьютер   общего</p>
<p>назначения, дисплей с  клавиатурой,  гибкий  магнитный  диск  или  магнитная</p>
<p>лента,  принтер,  специализированное  оборудование  для  связи  учащихся   и</p>
<p>преподавателя  с   компьютером,   включающее   мини   терминалы,   источники</p>
<p>электропитания  мини  терминалов  и   контроллер   для   сопряжения   их   с</p>
<p>микрокомпьютером, систему кабелей. Программное обеспечение  системы  состоит</p>
<p>из пяти частей. Три части,  "Обучение",  "Экзамен",  "Тест"  ,  обеспечивают</p>
<p>возможность  проведения  соответствующих   занятий.   Существуют   еще   две</p>
<p>служебные  подсистемы  -  подготовки  управляющей  информации  и   обработки</p>
<p>протоколов. Программное оснащение реализовано и функционирует  в  диалоговой</p>
<p>системе структурированного программирования  ,.  ДССП  ,  которая  после  ее</p>
<p>начальной загрузки, обеспечивает  всю  дальнейшую  работу.   По  вводимым  с</p>
<p>клавиатуры командам производится  дозагрузка  требуемой  подсистемы  и  ввод</p>
<p>управляющей информации . Далее  система  работает  не  обращаясь  к  внешней</p>
<p>памяти. И только в  конце  занятия  согласно  вводимым  командам  производит</p>
<p>распечатку и(или)  запись  в  архив  протокола.  Алгоритмы  функционирования</p>
<p>основных подсистем разработаны так, что обеспечивают управление обучением  и</p>
<p>проведение  экзаменов  или  тестов  независимо  от  конкретного   содержания</p>
<p>учебных материалов. т.е. пригодны для автоматизированных  занятий  по  любым</p>
<p>предметам.  Работа  подсистемы  "Обучение"  заключается   в   предоставлении</p>
<p>учебных материалов, разбитых на секции, и назначении упражнений  по  каждому</p>
<p>разделу, в случае неверных ответов обучаемому выдается  справка,  поясняющая</p>
<p>суть ошибки и отсылающая к  необходимому  абзацу  инструктивного  текста.  В</p>
<p>отдельных случаяx назначаются дополнительные упражнения. В случае  успешного</p>
<p>ответа на все вопросы по разделу обучаемый переходит  к  изучению  следующей</p>
<p>секции. В случае неверного ответа -  возврат  в  предшествующую  секцию  или</p>
<p>отправка к преподавателю. Подсистемы "Экзамен" и  "Тест"  предназначены  для</p>
<p>контроля  знаний  и  умений.  В  режиме  "Экзамен"  обучаемый  получает   от</p>
<p>преподавa-   теля   набор   секций,   в   которых   получает    определенное</p>
<p>преподавателем число  упражнений  с  ограниченным  числом  попыток  ответов.</p>
<p>Верные ответы подтверждаются,  а  неверные  отрицаются,  однако  справки  не</p>
<p>выдаются.   "Тест"  отличается  от  "Экзамена"  тем,  что  каждый   учащийся</p>
<p>отвечает на все  имеющиеся  в  учебном  материале  вопросы,  причем  попытка</p>
<p>ответа  предоставляется  только  одна.  Ответы  не   подтверждаются   и   не</p>
<p>отрицаются. Вся работа учащегося  протоколируется  .  Учебно-мето-  дическое</p>
<p>оснащение  наименее  фиксировано  и  наиболее  открыто  для  наращивания   и</p>
<p>развития. Жестко определены только  форматы  и  правила  оформления  учебных</p>
<p>материалов.  Никаких  ограничений   по   тематике   и   содержанию   учебных</p>
<p>материалов,  равно  как  и  методик   или   дидактических   приемов,   кроме</p>
<p>необходимости выражаться в форме множественного  выбора,  нет.  Подробнее  о</p>
<p>микрокомпьютерной системе " Наставник" можно прочитать в [1].</p>
<p>      В период с 1991 по 1994 годы Российским НИИ информационных  систем  по</p>
<p>заданию государственного комитета высшей школы России были проведены  четыре</p>
<p>конкурса "Электронный учебник", В результате этих конкурсов в  фонде  РосНИИ</p>
<p>ИС  накоплено  более  150  компьютерных   обучающих   программ   готовых   к</p>
<p>распространению на IBM PC и</p>
<p>совместимых с ними. Их классификация и краткая  характеристика,  применяемых</p>
<p>в них методов подробнее приведена в [2] Среди этих программ  можно  выделить</p>
<p>следующие основные группы : инструментальные системы  ,  прикладные  пакеты,</p>
<p>учебные  пакеты.   Инструментальные   среды   предназначены   для   создания</p>
<p>компьютерных обучающих программ. Они  сокращают  трудоемкость  при  создании</p>
<p>этих программ, то же время дают возможность легко участвовать  в  разработке</p>
<p>программ преподавателям, не являющимся  квалифицированными  программист  ми.</p>
<p>Примерами отечественных инструментальных сред могут  служить  такие  системы</p>
<p>как "Адонис",  "Урок",  "Аосмикро",  "Сценарий"  и  др..  Недостатком  таких</p>
<p>систем является то,  что  они  дорогостоящи.  Кроме  того  для  эффективного</p>
<p>применения инструментальных систем необходимо привлечение стабильной  группы</p>
<p>специалистов, что создает определенные трудности. Обучающие программы  могут</p>
<p>создаваться на базе прикладных пакетов,  которые  позволяют  преобразовывать</p>
<p>математические   выражения,   производить   вычисления,   строить   графики,</p>
<p>обрабатывать экспертные данные и т.п. ... По сравнению  с  инструментальными</p>
<p>средами прикладные пакеты дешевле,  более  универсальны,  доступны  широкому</p>
<p>кругу пользователей. Альтернативой прикладным пакетам могут служить  учебные</p>
<p>пакеты.</p>
<p>      В  общем  случае  компьютерные  программы  учебного  назначения  можно</p>
<p>разбить на следующие группы:</p>
<p>      1) компьютерные учебники;</p>
<p>      2) предметно-ориентированные среды (микромиры, моделирующие программы,</p>
<p>учебные пакеты);</p>
<p>      3) лабораторные практикумы;</p>
<p>      4) тренажеры;</p>
<p>      5) контролирующие программы;</p>
<p>      Проблема практического применения ЭВМ в  учебном  процессе  продолжает</p>
<p>стоять и сейчас. Важно использовать все новейшие достижения науки и  техники</p>
<p>для более эффективного обучения школьников,  студентов,  специалистов  самых</p>
<p>разных   специальностей,   На   кафедре    общей    физики    Новосибирского</p>
<p>государственного  университета   компьютеры   при   чтении   лекций   начали</p>
<p>использовать около 10 лет назад. С 1992 года  здесь  ведутся  разработки  по</p>
<p>созданию  универсального  автоматического  комплекса,  предназначенного  для</p>
<p>лекционных   демонстраций.   В    комплекс    входят    персональные    ЭВМ,</p>
<p>видеоаппаратура,  TV-мониторы  и  программное  обеспечение.   К   настоящему</p>
<p>времени  уже  создан  и  действует  макет   такого   комплекса,   лекционная</p>
<p>мультимедиа аудитория ("ЛЕММА"). Программное обеспечение - это полный  набор</p>
<p>средств  создания,  модификации  и  воспроизведения  мультимедиа  продуктов,</p>
<p>предназначенных для сопровождения  лекционных  курсов.  Мультимедиа  продукт</p>
<p>создается из слайдов(графических изображений в  стандарте  PCX)  ,  анимации</p>
<p>(анимационных сюжетов в стандарте FLI), задач (исполнимых  программ  DOS)  и</p>
<p>видео  сюжетов,  записанных  на  видеокассетах   в   стандартах   PAL/SECAM.</p>
<p>Мультимедиа продукт включает информацию о  демонстрационных  единицах  и  их</p>
<p>расположении на информационных носителях, названия  демонстрации  и  способы</p>
<p>их представления. Программы обеспечение выполнено в системе  Turbo-Pascal  с</p>
<p>использованием  стандартной  библиотеки  Turbo  Vision  и  состоит  из  трех</p>
<p>основных программ:</p>
<p>      1) Программа "Планировщик лекций". Выполняет функции создан* настройки</p>
<p>и модификации мультимедиа продуктов,  вставки  в  продукт  новых  и  изъятие</p>
<p>устаревших  материалов,  просмотр  материалов,  планирование  сценарием  для</p>
<p>лекционной работы. В режиме разметки видеофрагментов выполняет полный  набор</p>
<p>функций  управления  видеоаппаратурой  и  обеспечивает  разметку  выбранного</p>
<p>видео сюжета.</p>
<p>      2)   Программа   "Ассистент".   Предназначена    для    предоставления</p>
<p>демонстрационного  лекционного  материала  в  процессе  лекций.  Матери   ал</p>
<p>выбирается в соответствии со сценарием.</p>
<p>      3) Программа "Демонстратор анимации" . Данная  программа  осуществляет</p>
<p>демонстрацию  анимационных  сюжетов  в  стандарте  FLI  аниматора   Autodesk</p>
<p>Animator и организует  управление  анимацией  в  ходе  исполнения.  Возможна</p>
<p>приостановка  воспроизведения.  Для  пояснения   представляемого   материала</p>
<p>используется  "указка"  -  графический  курсор,  управляемый   манипулятором</p>
<p>"мышь".</p>
<p>      Сценарий лекций составляется методистами - профессиональными лекторами</p>
<p>- применительно к конкретной тематике лекций с учетом подготовки  аудитории.</p>
<p>Более подробно данный метод описан в [3]</p>
<p>      Все описанные выше обучающие средства и  методы  имеют  общую  цель  -</p>
<p>максимально возможное использование компьютера в процессе обучения.  Однако,</p>
<p>они  не  решают  задачу  ,  поставленную  перед  разработчиком  темы  данной</p>
<p>дипломной работы. Поиски наиболее рационального решения  вопроса  применения</p>
<p>ЭВМ в обучении идут и сейчас. Разработка данной дипломной работы -  это  еще</p>
<p>одна попытка использовать компьютер как средство обучения.</p>
<p>      1.2. Назначение программы для обучения работе в графическом режиме</p>
<p>      1.2.1. Роль ЭВМ в учебном процессе СПГУАП</p>
<p>      В учебном процессе очень важна в последнее  время  роль  ЭВМ.  Научно-</p>
<p>технический прогресс требует от учебных заведений  оперативности  в  решении</p>
<p>вопросов  технического  обеспечения  учебного   процесса.   Однако,   слабое</p>
<p>финансирование не позволяет в полной мере соответствовать этим требованиям.</p>
<p>      В  настоящее  время  вычислительная  техника  развивается   достаточно</p>
<p>быстро.  Появляются  Как  новые  машины,  так  и   все   более   сложное   и</p>
<p>разнообразное программное обеспечение. ЭВМ входит в нашу жизнь все больше  и</p>
<p>в самых различных  областях  науки  и  производства,  сферы  обслуживания  и</p>
<p>образования. Потребность  в  грамотных  пользователях  возрастает  с  каждым</p>
<p>днем.     ЭВМ   прочно   вошли   в   учебный   процесс   Санкт-Петербургской</p>
<p>Государственной Академии аэрокосмического  приборостроения.  Академия  имеет</p>
<p>кафедру   "Вычислительных   машин",   которая   готовит   специалистов    по</p>
<p>вычислительной  технике.  Помимо  будующих  программистов-электронщиков   на</p>
<p>кафедре проходят  подготовку  и  студенты  других  специальностей.  Студенты</p>
<p>изучают   курсы   "Алгоритмизация   и   программирование",   "Языки    прог-</p>
<p>рамирования", "Вычислительные комплексы, системы и сети" и др..</p>
<p>Лаборатории кафедры оснащены  персональными  ЭВМ,  микроЭВМ,  имеется  класс</p>
<p>аналоговых   вычислительных   машин,   вычислительный   центр,   установлена</p>
<p>локальная  сеть.  Студенты  Академии  учатся  пользоваться  компьютером  как</p>
<p>помощником в учебе. Они приобретают  навыки  работы  на  компьютере,  учатся</p>
<p>программировать . В Академии на многих кафедрах введены  курсы  лабораторных</p>
<p>работ на компьютере. Они  представляют  собой  набор  контрольных  работ.  В</p>
<p>частности,  такие  программы  введены  по  курсам  "схемотехника",   "охрана</p>
<p>труда". На кафедре экономики введен курс лабораторных работ  на  компьютере.</p>
<p>Программа предоставляет  студенту  возможность  смоделировать  то  или  иное</p>
<p>производство и самому проследить результаты  его  работы,  в  затем  сделать</p>
<p>выводы.  Такие  программы  повышают  интерес  студентов  к  предмету,   дают</p>
<p>возможность  получить  навыки  работы  с  компьютером,  сокращают  время  на</p>
<p>изучение той или иной темы,  освобождают  преподавателя  для  индивидуальной</p>
<p>работы со студентами.</p>
<p>      Компьютеры прочно вошли в учебный  процесс  СПГУАП.  Это  обеспечивает</p>
<p>высокое качество подготовки специалистов по всем специальностям.</p>
<p>      1.2.2. Методика обучения с помощью обучающей программы</p>
<p>      Данная обучающая программа предназначена для студентов младших  курсов</p>
<p>Академии аэрокосмического приборостроения. Она восполняет  отсутствие  курса</p>
<p>лекций по теме "Графический режим языка Turbo-Pascal".</p>
<p>      Теоретический материал изложен следующим  образом.  В  начале  раздела</p>
<p>приводится его краткое содержание и  цели  его  изучения.  Затем  приводятся</p>
<p>названия  процедур  и  функций  с  параметрами  ,  а  ниже  описываются   их</p>
<p>назначение и роль параметров. Название процедур и  функций  для  наглядности</p>
<p>выделены  красным  цветом  .  Процедуры  и  функции,  требующие  иллюстрации</p>
<p>содержат графические комментарии.</p>
<p>      Одновременно с теоретическим материалом программа содержит контрольные</p>
<p>вопросы.  Это  обеспечивает  возможность  студенту  самостоятельно   изучить</p>
<p>предлагаемый  материал  и  самостоятельно  проверить  свои   знания.   После</p>
<p>изучения  тем  3-7  студенту  предлагается  ответить  на   четыре   вопроса,</p>
<p>случайным  образом  выбираемые  из  имеющихся  в  базе  данных.  Контрольные</p>
<p>вопросы оформлены следующим образом. Сам вопрос расположен  наверху  экрана.</p>
<p>Ниже  приведены  четыре  варианта  ответов.  Студенту  предлагается  выбрать</p>
<p>правильный и ввести его номер. Такая форма  вопросов  удобна  .  Практически</p>
<p>студенту необходимо найти все  ошибки  в  приведенных  вариантах  ответов  .</p>
<p>Необходимо  помнить  при  написании  базы  данных,  что  при   такой   форме</p>
<p>контрольных вопросов нецелесообразно приводить варианты ответов  типа  "Да",</p>
<p>"Нет", "Возможно".  И вопросы должны формулироваться соответственно.</p>
<p>      За работу  с  контрольными  вопросами  студенту  выставляется  оценка.</p>
<p>Выставляемая оценка может быть занесена преподавателем  в  журнал,  а  может</p>
<p>быть использована и как итог самоконтроля  при  самостоятельном  обучении  с</p>
<p>помощью компьютера.</p>
<p>      Программа для обучения работе в графическом режиме языка  Turbo-Pascal</p>
<p>содержит 7 разделов:</p>
<p>      1) программирование графических режимов;</p>
<p>      2) управление курсором и полем рисования;</p>
<p>      3) формирование прямолинейных монохромных изображений;</p>
<p>      4) управление цветом и стилем изображений;</p>
<p>      5) программирование цветных криволинейных изображений;</p>
<p>      6) формирование графических текстов;</p>
<p>      7) программирование динамические озвученные сцены;</p>
<p>      Первый  раздел  посвящен  графическим  режимам.  В  разделе,  на  базе</p>
<p>элементарной  структуры   Turbo-Pascal-программы,   показано   использование</p>
<p>графических  средств  языка.   Здесь   изучаются   процедура   вхождения   в</p>
<p>графический режим, UnitGraph, процедура  восстановления  текстового  режима,</p>
<p>CloseGraph,   процедура   изменения   графического   режима   и    процедура</p>
<p>восстановления исходного текстового режима. В  разделе  приводится  описание</p>
<p>вспомогательных  процедур  и  функций,  с  помощью  которых  можно  получить</p>
<p>справки о текущем графическом режиме и графическом  адаптере.   Этот  раздел</p>
<p>вводит  студента  в  курс  изучаемой  темы.  Знание  этого   раздела   будет</p>
<p>необходимо при написании любой программы с использованием графики.</p>
<p>      Второй раздел содержит информацию также необходимую для любой работы в</p>
<p>графическом режиме. Он  посвящен  процедурам  управления  курсором  и  полем</p>
<p>рисования. В языке существует  возможность  перемещать  курсор  относительно</p>
<p>исходного положения без рисования. Возможно определять  координаты  курсора.</p>
<p>Это бывает необходимо, когда координаты очередного  местонахождения  курсора</p>
<p>заранее неизвестны. В данном  разделе  описаны  процедуры  очищения  экрана,</p>
<p>установки  прямоугольного  окна,  очищения   открытого   окна,   возвращение</p>
<p>параметров активного окна.</p>
<p>      Система меню данной обучающей программы  дает  возможность  обучаемому</p>
<p>самому уста навивать порядок изучения разделов.  Однако,  автор  рекомендует</p>
<p>начать изучение разделов в порядке их следования Если обучаемый уже  владеет</p>
<p>информацией, содержащейся  в  первых  двух  разделах,  то  их  можно  просто</p>
<p>просмотреть, чтобы еще раз вспомнить возможности графического режима.  Такой</p>
<p>просмотр не займет много времени, но поможет быстрее и  точнее  ответить  на</p>
<p>контрольные вопросы следующих разделов.</p>
<p>      Третий  раздел   посвящен   формированию   прямолинейных   монохромных</p>
<p>изображений. Цель данного раздела обучить студента пользоваться  операторами</p>
<p>построения прямолинейных фигур: отрезков, прямоугольников,  параллелепипедов</p>
<p>и ломаных линий. Рассматривается  возможность  закраски  фигур  определяемым</p>
<p>предварительно стилем и цветом. Изучив этот раздел студент должен не  только</p>
<p>научиться строить фигуры с использованием приведенных процедур, но и  видеть</p>
<p>разницу между аналогичными с первого взгляда процедурами, находить  наиболее</p>
<p>рациональное  решение  поставленной  задачи.  На  это   обращается   большое</p>
<p>внимание в контрольных вопросах.</p>
<p>      Этот и все последующие  разделы  содержат  после  теоретической  части</p>
<p>контрольные вопросы. Обучаемому  предоставляется  возможность  дважды  через</p>
<p>меню войти в каждый из этих разделов. При  этом  повторное  изучение  теории</p>
<p>обязательно. После  ответов  на  вопросы  выставляется  оценка.  Эта  оценка</p>
<p>хранится в разделе "Результаты Вашей работы". Таким образом  можно  получить</p>
<p>две  оценки  за  одну  тему.  Обе  они  будут  зафиксированы  и  учтены  при</p>
<p>выставлении оценки работы за сеанс. Все дальнейшие  разделы  включая  третий</p>
<p>посвящены непосредственно формированию графических изображений. Они по  сути</p>
<p>самостоятельные под темы. Однако, каждый  следующий  раздел  содержит  часть</p>
<p>информации предыдущий разделов, опирается на эту  информацию,  использует  в</p>
<p>приводимых примерах и в контрольных вопросах. Поэтому и последующие  разделы</p>
<p>рекомендуется в первый раз изучать в порядке их следования.</p>
<p>      Четвертый раздел знакомит с операторами  управления  стилем  и  цветом</p>
<p>изображений.  В данном разделе приведены процедуры установки  цвета  фона  и</p>
<p>цвета рисования, процедуры изменения одного или нескольких  цветов  палитры,</p>
<p>а также процедуру дающую справочную информацию о текущей  цветовой  палитре.</p>
<p>Цветовая палитра проиллюстрирована.  Приведен пример  и  стандартных  стилей</p>
<p>закраски.  Изучив  данный  раздел  студент  получает  возможность  управлять</p>
<p>стилем рисования, а именно:  устанавливать  тип  контурных  линий  (один  из</p>
<p>четырех стандартных или нестандартный), устанавливать стиль  закраски  (один</p>
<p>из 12 стандартных) или формировать  свой,  нестандартный  образец  закраски.</p>
<p>Приведено также описание справочных процедур возвращающих  значение  текущих</p>
<p>цвета и стиля рисования.</p>
<p>      Пятый раздел посвящен криволинейный изображениям. В нем студент сможет</p>
<p>ознакомиться с процедурами построения дуг  окружности  и  эллипса,  контуров</p>
<p>окружности и  эллипса,  круга,  секторов  криволинейных  фигур,  а  также  с</p>
<p>процедурой закраски ограниченных областей, закрашенного эллипса  и  сектора.</p>
<p>Данные  процедуры  проиллюстрированы  и   это   дает   возможность   быстрее</p>
<p>разобраться  в  их  возможностях.  При  формировании  иллюстраций  к  данным</p>
<p>процедурам  были  использованы  различные  цвета  и  стили   закраски.   Это</p>
<p>обеспечивает повторение уже изученного в  разделе  четыре  материала.  Пятый</p>
<p>раздел знакомит студента с понятием генератора случайных  чисел  и  функцией</p>
<p>возврата случайного числа.</p>
<p>      Шестой раздел назван "Формирование графических текстов".  Он  посвящен</p>
<p>операторам языка, с помощью которых возможно формировать стандартные  шрифты</p>
<p>(один растровый и четыре штриховых) и нестандартные (их  количество  зависит</p>
<p>от содержимого внутренней таблицы шрифтов компьютера). Примеры этих  шрифтов</p>
<p>приведены   в   качестве   иллюстраций   в   программе.   В   этом   разделе</p>
<p>рассматривается   возможность   изменения   пропорций   штриховых   шрифтов,</p>
<p>вспомогательные  процедуры  возврата  ширины  заданной   текстовой   строки,</p>
<p>привязки выводимого текста к текущему положению курсора, возврат  параметров</p>
<p>текущего  текстового  шрифта.  Вывод  символьной  строки  осуществляется   с</p>
<p>помощью процедур OutText и  OutTextXY.  Они  также  рассмотрены  в  разделе.</p>
<p>Знание возможностей языка Turbo-Pascal,  в  частности  графических  шрифтов,</p>
<p>дает возможность более  полно  их  использовать.  Поэтому  изучение  данного</p>
<p>раздела не менее важно чем изучение предыдущих .</p>
<p>      Последний раздел программы является  наиболее  сложным  для  изучения,</p>
<p>однако и наиболее  интересным  с  точки  зрения  будущего  программиста.  Он</p>
<p>знакомит   со   способами   программирования   эффектов   мультипликации   с</p>
<p>использованием  динамической  и  видеопамяти  компьютера,  программированием</p>
<p>звуковых эффектов с  использованием  одноканального  звукогенератора.  Здесь</p>
<p>рассматриваются  наиболее  общие  приемы   мультипликации,   основанные   на</p>
<p>предварительном формировании, сохранении и быстром выводе, если требуется  с</p>
<p>наложением, на экран статических изображений.  Это  обеспечивается  наличием</p>
<p>средств  работы   с   динамической   памятью   компьютера   и   возможностью</p>
<p>использования страничной организации  его  видеобуфера.  Программа  знакомит</p>
<p>студентов с соответствующими процедурами. В  качестве  иллюстрации  приведен</p>
<p>пример создания эффекта  движения  вдоль  экрана  объекта  в  области  50x50</p>
<p>пикселов.   Создание  звуковых  эффектов  с  использованием   одноканального</p>
<p>звукогенератора  сводится  к  включению,   выключению   и   программированию</p>
<p>определенных законов  изменения  частоты  звукогенератора.  Это  делается  с</p>
<p>помощью  процедур  Sound  и  NoSound.  В  программе  также  приведен  пример</p>
<p>использования звукогенератора.</p>
<p>      Для обучения с помощью данной  обучающей  программы  необходимо  знать</p>
<p>язык Pascal  ,  интегрированную  среду  и  персональный  компьютер  IBM  PC.</p>
<p>Программа рассчитана на работу с ней в течение 40 минут . Если после  работы</p>
<p>с программой в течение этого времени  студент  получил  неудовлетворительные</p>
<p>оценки, то целесообразно  дать  ему  возможность  пополнить  свои  знания  с</p>
<p>помощью учебной литературы, а затем вернуться к компьютерной версии.</p>
<p>      1.2.3. Возможности языка TURBO-PASCAL 6.0\7.0</p>
<p>      Pascal  является  широко  распространенным   языком   программирования</p>
<p>высокого уровня. Система программирования Turbo-Pascal  была  разработана  в</p>
<p>середине 80-х годов фирмой Borland International  (США).  Turbo  -  торговая</p>
<p>марка  фирмы-разработчика.   Turbo-Pascal   включает   в   себя   как   язык</p>
<p>программирования - одно из расширений языка Pascal для ЭВМ типа IBM,  так  и</p>
<p>среду, предназначенную для написания, отладки и запуска  программ.    Turbo-</p>
<p>Pascal  имеет  широкие  возможности.   Практически  он  полностью  реализует</p>
<p>аппаратные возможности персонального компьютера фирмы IBM  и  совместимых  с</p>
<p>ним. Система имеет  два  основных  достоинства:  простота  и  естественность</p>
<p>языка   программирования   Pascal,   великолепные   сервисные    возможности</p>
<p>диалоговой  среды  программирования  фирмы  Borland.   Язык  характеризуется</p>
<p>расширенными возможностями  по  сравнению  со  стандартом,  хорошо  развитой</p>
<p>библиотекой  стандартных  модулей,   позволяющих  использовать   возможности</p>
<p>операционной  ., системы,  создавать  оверлейные  структуры,  организовывать</p>
<p>ввод-вывод   ,   формировать   графические   изображения   и   т.д..   Среда</p>
<p>программирования позволяет  создавать  тексты  программ,  компилировать  их,</p>
<p>находить  ошибки  и  оперативно  их  исправлять,  компоновать  программы  из</p>
<p>отдельных  частей,  включая  стандартные  модули,  отлаживать  и   выполнять</p>
<p>отлаженную программу.</p>
<p>      За последние годы фирма  выпустила  шесть  модификаций  этой  системы,</p>
<p>известных  как  версии  3.0,  4.0,  5.0,  5.5,  6.0,  7.0.  Каждая  из   них</p>
<p>представляет собой усовершенствование предыдущей, однако, и  все  программы,</p>
<p>разработанные  для  младших  версий,   могут   практически   без   изменений</p>
<p>компилироваться и исполняться  на  более  поздних.  С  помощью  Turbo-Pascal</p>
<p>можно создавать любые программы - от программ, предназначенных  для  решения</p>
<p>простейших вычислительных задач, до сложных  современных  систем  управления</p>
<p>базами данных и операционных систем. Система  не  уступает,  а  в  некоторых</p>
<p>случаях и более проста в применении, по сравнению с профессиональным  языком</p>
<p>программирования СИ.</p>
<p>      Пакет Turbo-Pascal 7.0 предоставляет пользователю также большой  объем</p>
<p>справочной информации. Он как  и  версия  6.0  обеспечивает  многооконный  и</p>
<p>много файловый режим работы, использование  манипулятора  "мышь",  позволяет</p>
<p>применять  объектно-ориентированное  программирование,  обладает  встроенным</p>
<p>ассемблером,  имеет   инструментальное   средство   создания   интерактивных</p>
<p>программ - Turbo-Vision -и т.д.</p>
<p>      Пакет Turbo-Pascal 7.0 позволяет работать в обычном режиме  MS  DOS  и</p>
<p>может быть  использован  практически  на  любой  машине.  Версия  имеет  ряд</p>
<p>преимуществ по сравнению с предыдущими:</p>
<p>      1) выделение цветом различных элементов исходного текста  программы  -</p>
<p>идентификаторов, зарезервированных слов, комментариев, строк, чисел и  т.д.,</p>
<p>что позволяет уже на стадии ввода исходного текста устранить многие  ошибки,</p>
<p>описки;</p>
<p>      2)  многофайловая  система  помощи  с  возможностью   ее   перестройки</p>
<p>пользователем;</p>
<p>      3) наличие  локального  меню  с  содержанием,  зависящем  от  текущего</p>
<p>состояния среды ;</p>
<p>      4) ряд  дополнительных  расширений  языка,  таких,  как  использование</p>
<p>открытых массивов, параметров-констант, типизированного адресного  оператора</p>
<p>и  т.д..  дающих  программисту   дополнительные   возможности,   позволяющих</p>
<p>совмещать требования, накладываемые на программы  операционной  системой  MS</p>
<p>DOS и средой Windows, пользоваться некоторыми возможностями, которых  нет  в</p>
<p>языке Pascal и которые есть в других языках, например в языке СИ;</p>
<p>      5) наличие дополнительных стандартных процедур и функций;</p>
<p>      6) наличие дополнительных ключей компилятора;</p>
<p>      7) расширенные возможности объектно-ориентированного программирования;</p>
<p>      8) получение более эффективных кодов программ (использование  кодового</p>
<p>сегмента  для  размещения  строковых  констант  и  констант  типа-множества,</p>
<p>удаление пустых строк, проверка  переполнения  величин  целых  типов,  более</p>
<p>быстрый ввод-вывод текстовых файлов и т.д.);</p>
<p>      9) усовершенствованные программы Turbo Vision;  10)  новая  улучшенная</p>
<p>компоновка системы меню.</p>
<p>      1.3. Техническое задание</p>
<p>      1.3.1. Постановка задачи</p>
<p>      Техническое  задание  данной  дипломное  работы  требует   разработать</p>
<p>программу для  обучения  работе  в  графическом  режиме  языка  Turbo-Pascal</p>
<p>6.0/7.0 , предназначенную для студентов младших  курсов  Санкт-Петербургской</p>
<p>государственной Академии аэрокосмического приборостроения. Программа  должна</p>
<p>отвечать следующим требованиям:</p>
<p>      1) позволять индивидуально изучить работу с компьютеров в  графическом</p>
<p>режиме</p>
<p>      2) содержать 7 разделов для изучения :</p>
<p>           - программирование графических режимов</p>
<p>           - управление курсором и полем рисования</p>
<p>           - формирование прямолинейных монохромных изображений</p>
<p>           - управление цветом и стилем изображений</p>
<p>           - программирование цветных криволинейных изображений</p>
<p>           - формирование графических текстов</p>
<p>           - программирование озвученных динамических сцен</p>
<p>      3)  представлять  изучаемый  материал  наглядно,   сопровождая   текст</p>
<p>необходимыми иллюстрациями</p>
<p>      4) предусматривать возможность повторения изученного материала</p>
<p>      5) предусматривать возможность контроля приобретенных знаний</p>
<p>      6) регистрировать результаты контроля знаний</p>
<p>      7)   обеспечивать   возможность   разъяснения   студенту   в    случае</p>
<p>необходимости его ошибок</p>
<p>      8) иметь продолжительность сеанса не более 45 минут</p>
<p>      9) программа должна быть написана  на  языке  программирования  Turbo-</p>
<p>Pascal , не ниже версии 6.О..</p>
<p>      1.3.2. Выбор технические средств и программного обеспечения</p>
<p>      Для реализации данного технического задания  необходимо  использование</p>
<p>персонального компьютера типа IBM или совместимого с ним, растровый  дисплей</p>
<p>с   графическим  адаптером  типа  EGA,  имеющий  объем  видеобуфера  256   К</p>
<p>,графическим выводом 640x350 пиксел , 16 регистрами палитры (режим ЮН).</p>
<p>      В   качестве   программного   обеспечения   необходимо   иметь    DOS,</p>
<p>инструментальную интегрированную среду Turbo-Pascal 7.O.</p>
<p>      1.3.3. Технико-экономическое обоснование</p>
<p>      Разрабатываемая программа предназначена для студентов  младших  курсов</p>
<p>СПГУАП. В учебном плане отсутствует курс лекций по данной  теме  и  изучение</p>
<p>графического  режима  полностью  оставлено  для  самостоятельного  изучения.</p>
<p>Однако,  для  многих  студентов  работа  только   с   литературой   является</p>
<p>затруднительной,   малопонятной   и   для    получения    удовлетворительных</p>
<p>результатов требует больших временных затрат.</p>
<p>      Применение  компьютерной  программы  для  обучения  в  данном   случае</p>
<p>является целесообразным.  В  процессе  работы  с  такой  программой  студент</p>
<p>приобретает навыки  работы  с  компьютером,  что  является  целью  курса,  и</p>
<p>получает конкретные знания по теме  "Графические  средства  алгоритмического</p>
<p>языка Turbo-Pascal". Диалог ЭВМ-пользователь  (в  данном  случае  обучаемый)</p>
<p>ведется в удобном для последнего темпе, что обеспечивает  лучшее  усваивание</p>
<p>материала. Каждый студент имеет возможность изучать разделы темы  в  удобном</p>
<p>для него порядке. Это экономит время студента для изучения более важных  для</p>
<p>него разделов и игнорирование разделов, которые ему уже  знакомы.  В  то  же</p>
<p>время  преподаватель  имеет  возможность  уделять   внимание   студентам   в</p>
<p>индивидуальном порядке. Программа предусматривает элементы  проверки  знаний</p>
<p>в виде контрольных вопросов в конце разделов. Такая  система  обучения  дает</p>
<p>возможность студенту самостоятельно оценить свои  знания.  После  ответа  на</p>
<p>вопрос обучаемый получает справку о его правильности и  пояснения  в  случае</p>
<p>неверного ответа. После ответов на все  вопросы  раздела  он  может  изучить</p>
<p>тему вновь и вновь ответить на  контрольные  вопросы.  Принцип  "обучение  +</p>
<p>контроль" повышает уровень получаемых знаний.</p>
<p>      В предыдущих разделах были описаны многочисленные  средства  и  методы</p>
<p>обучения с помощью компьютера. Однако, разработка  настоящей  программы  для</p>
<p>обучения является необходимой и целесообразной в условиях  данного  учебного</p>
<p>заведения. Целью создания  данной  программы  является  удовлетворение  нужд</p>
<p>учебного процесса с  учетом  технических  возможностей  академии,  а  именно</p>
<p>разработка методических материалов по программированию с использованием  ЭВМ</p>
<p>типа IBM PC  и  языка  Turbo-Pascal.  Среди  уже  существующих  компьютерных</p>
<p>обучающих программ отсутствует программа для обучения работе  в  графическом</p>
<p>режиме языка Turbo-Pascal. Таким образом разработка методических  материалов</p>
<p>необходима  при  использовании   любых   методов   обучения.    Кроме   того</p>
<p>существующие обучающие программы не отвечают  ряду  требований  технического</p>
<p>задания , в частности по содержанию программы,  ее  оформлению,  ограничению</p>
<p>по продолжительности сеанса, выбору языка программирования.</p>
<p>      Разработка  данной  программы  является   экономически   обоснованной.</p>
<p>Существует   теоретическая   возможность    приобретения    академией    уже</p>
<p>существующего аналогичного программного  обеспечения  и  адаптация  его  для</p>
<p>решения конкретной задачи по  обучению  работе  в  графическом  режиме.  Это</p>
<p>потребует  значительных  материальных  затрат  как  на  приобретение  такого</p>
<p>программного обеспечения , так и на его обработку и подготовку к работе .  В</p>
<p>сложившейся  экономической  ситуации  такое  решение  проблем  для  академии</p>
<p>невозможно. Данная  дипломная  работа  решает  вопрос  обеспечения  учебного</p>
<p>процесса необходимым компьютерным  сопровождением  и  экономит  материальные</p>
<p>средства академии.</p>
<p>                           2. ОПИСАНИЕ БАЗЫ ДАННЫХ</p>
<p>      2.1. Методическое оснащение базы данных</p>
<p>      В  1992  году  фирма  Borland  International  выпустила   два   пакета</p>
<p>программирования, основанные на использовании языка Паскаль -Borland  Pascal</p>
<p>7.0 и Turbo Pascal 7.O. Первый пакет включает в себя три  режима  работы:  в</p>
<p>обычном режиме операционной системы MS DOS, в защищенном режиме MS DOS  и  в</p>
<p>среде Windows. Этот  пакет  требует  для  использования  своих  возможностей</p>
<p>довольно большой объем памяти -примерно 30  Мбайт  на  Жестком  диске  и  не</p>
<p>менее  2  Мбайт  оперативной  памяти.  Пакет   Turbo-Pascal   7.0   обладает</p>
<p>ограниченными возможностями и дает возможность  работать  только  в  обычном</p>
<p>режиме  MS  DOS.  Однако,  он  доступен   для   использования   на   обычных</p>
<p>персональных компьютерах типа IBM и его  стоимость  по  сравнению  с  первым</p>
<p>пакетов значительно ниже»</p>
<p>      Turbo-Pascal  включает  в  себя  язык  программирования  -   одно   из</p>
<p>расширений языка Паскаль для ЭВМ  типа  IBM  и  среду,  предназначенную  для</p>
<p>написания, отладки и запуска программы. Язык имеет  расширенные  возможности</p>
<p>по сравнению со стандартом, хорошо развитую библиотеке модулей,  позволяющих</p>
<p>использовать  возможности   операционной   системы,   создавать   оверлейные</p>
<p>структуры, организовывать ввод-вывод, формировать графические изображения  и</p>
<p>т.д.</p>
<p>      Целью написания  данной  программы  является  ознакомить  студентов  с</p>
<p>возможностями языка Turbo-Pascal б.0\7.0 по  формированию,  вводу  и  выводу</p>
<p>графической информации. При написании базы данных были использованы  учебные</p>
<p>пособия [4], [5]  и [6]</p>
<p>Работа посвящена возможностям языка TURBO-PASCAL  по  работе  с  графической</p>
<p>информацией. Студентам предлагается ознакомиться  со  стандартными  модулями</p>
<p>Graph, Crt, а также с отдельными процедурами других модулей.</p>
<p>      Модуль Graph содержит  типы,  константы,  переменные  и  подпрограммы,</p>
<p>позволяющие программисту создавать  изображения  с  использованием  широкого</p>
<p>набора  графических  адаптеров(CGA,  MCGA,  EGA,  VGA,  Hercules,   AT&T400,</p>
<p>3270PC,IBM8514). При работе с этими адаптерами  весь  экран  разбивается  на</p>
<p>отдельные "точки" - пиксели, которые можно закрасить в тот  или  иной  цвет.</p>
<p>Каждый пиксель имеет две координаты: X и Y. Количество пикселей  зависит  от</p>
<p>типа адаптера и режима его работы. Данная программа  написана  для  адаптера</p>
<p>EGA и режима EGAHi с размером поля 640x350, палитрой состоящей из 16  цветов</p>
<p>и двумя страницами видеопамяти. Данный  режим  позволяет  выделять  окна  на</p>
<p>экране дисплея. В этом  случае  используются  координаты  в  пределах  окна.</p>
<p>Курсор в графическом режиме невидим, однако его можно  переместить  в  любую</p>
<p>точку экрана, посмотреть его координаты.</p>
<p>      Модуль Graph содержит 8 стандартных типов, описывающих цвета  палитры,</p>
<p>характеристики линий, характеристики текста,  орнамент  и  цвет  заполнения,</p>
<p>задаваемый пользователем орнамент заполнения, координаты точки, окно  вывода</p>
<p>графической информации, данные о  дуге.  Константы  и  переменные  указанных</p>
<p>типов приведены в таблицах в [5].</p>
<p>      Обучающая программа предлагает студентам ознакомиться с процедурами и</p>
<p>функциями следующего назначения:</p>
<p>      1) процедуры управления графическим режимом ;</p>
<p>      2) функции управления графическим режимов;</p>
<p>      3) процедуры управления экраном, окном, страницей;</p>
<p>      4) процедуры управления цветом и палитрой;</p>
<p>      5) функции управления цветом и палитрой;</p>
<p>      6) функции работы с точками;</p>
<p>      7) процедуры работы с линиями;</p>
<p>      8) процедуры построения фигур из линий;</p>
<p>      9) процедуры построения криволинейных фигур;</p>
<p>      10) процедуры работы с текстом;</p>
<p>      11) функции работы с текстом;</p>
<p>      12) процедуры обмена с памятью;</p>
<p>      13) функции обмена с памятью;</p>
<p>      Подавляющее большинство процедур и функций модуля Graph можно</p>
<p>использовать только после задания графического режима   ^ процедурой</p>
<p>UnitGraph.</p>
<p>      Модуль Crt содержит константы, переменные и подпрограммы,</p>
<p>предназначенные для работы с консолью. В отличие от стандартного ввода-</p>
<p>вывода, когда он осуществляется через операционную систему, подпрограммы</p>
<p>модуля Crt работают с BIOS и, даже непосредственно с видеопамятью. При</p>
<p>работе с экраном он разбивается на строки, а строки на отдельные позиции, в</p>
<p>которые можно поместить только один символ. Есть возможность открывать</p>
<p>окна, задавать цвета символов и фона. Обучающая программа знакомит</p>
<p>студентов с частью процедур и функций данного модуля, а именно:</p>
<p>      1) процедуры работы с экраном;</p>
<p>      2) функции работы с клавиатурой;</p>
<p>      3) процедуры управления звуком;</p>
<p>      4) процедуры разнообразного назначения.</p>
<p>      Кроме перечисленных выше процедур и функций программа знакомит</p>
<p>обучаемого с понятием случайного числа, функцией Random, и генератором</p>
<p>случайных чисел Randomize , которые описаны в стандартном модуле System.</p>
<p>      Процедуры и функции, представленные на рассмотрение в данной работе,</p>
<p>сгруппированы для изучения в 7 разделов:</p>
<p>      1 раздел - программирование графических режимов;</p>
<p>      2 раздел - управление курсором и полем рисования ;</p>
<p>      3 раздел - формирование прямолинейных монохромных изображений;</p>
<p>      4 раздел - управление цветом и стилем изображений;</p>
<p>      5 раздел - программирование цветных криволинейных изображений;</p>
<p>      6 раздел - формирование графических текстов;</p>
<p>      7 раздел - программирование озвученных динамических сцен ;</p>
<p>      Изучая  эти  разделы  студент  последовательно   узнает   как   задать</p>
<p>графический режим, как узнать его параметры,  изменить,  временно  выйти  из</p>
<p>режима, научиться управлять курсором  и  полем  рисования,  открывать  окна,</p>
<p>пользоваться цветовой палитрой и имеющимися в арсенале языка типами линий  и</p>
<p>стилей закраски. Полезным будет изучение разделов  5,6  ,  которые  содержат</p>
<p>информацию  о  возможностях  построения  криволинейных  фигур,  формирование</p>
<p>графических  текстов  стандартных  типов  и  ряда  нестандартных.   Наиболее</p>
<p>сложным  является  последний  раздел,  посвященный  озвученным  динамическим</p>
<p>сценам. В этом разделе студент знакомится с динамической памятью  компьютера</p>
<p>и страничной организацией видеобуфера.  Это  основные  средства,  с  помощью</p>
<p>которых стало возможным создание эффекта мультипликации на  экране  дисплея.</p>
<p>В  этом  же  разделе  представлен  звукогенератор,  позволяющий   обеспечить</p>
<p>звуковое сопровождение .</p>
<p>      В меню программы перечисленные разделы следуют  в  порядке,  указанном</p>
<p>выше.  Этот  порядок  следования  разделов  соответствует  последовательному</p>
<p>изучению материала  от  простого  к  сложному.  Однако,  система  меню  дает</p>
<p>возможность студенту нарушить этот порядок  и  изучать  разделы  в  порядке,</p>
<p>удобном  ему.  При  этом  следует  учесть,  что  каждый  последующий  раздел</p>
<p>опирается на знание предыдущих, в контрольных  вопросах  следующих  разделов</p>
<p>содержатся  вопросы,  касающиеся  предыдущих  тем.   Поэтому   рекомендуется</p>
<p>знакомиться первый раз с темой последовательно. Доступ к разделам  3,4,5,6,7</p>
<p>ограничен  .  Студенту  предоставляются  только  две  попытки  ответить   на</p>
<p>контрольные вопросы.  Рекомендуется  после  первого  изучения  и  неудачного</p>
<p>ответа во второй раз начать изучение с раздела, который  показался  наиболее</p>
<p>простым и понятным.</p>
<p>      С учетом целей и задач данной разработки база данных содержит основные</p>
<p>процедуры и функции, касающиеся работы в графическом режиме.</p>
<p>      2.2. Структура базы данных</p>
<p>      База данных представляет собой набор 17 файлов типа запись Семь из них</p>
<p>содержат  теоретическую  часть  семи  изучаемых  разделов,  пять  -   тексты</p>
<p>контрольных вопросов к разделам 3,4,5,6,7 и  пять  -тексты  справок  к  этим</p>
<p>вопросам. Схема обращений процедур к файлам базы данных приведена в табл. 1</p>
<p>                                                                   Таблица 1</p>
<p>                Схема обращений процедур к файлам базы данных</p>
<p>|Номер   |Имя модуля     |Имя         |Имена файлов базы данных              |</p>
<p>|раздела |               |процедуры   |                                      |</p>
<p>|        |               |            |теория      |вопросы     |Справки     |</p>
<p>|1       |Razdel1        |Razdel10    |Raztex1     |-           |-           |</p>
<p>|2       |Razdel2        |Razdel20    |Raztex2     |-           |-           |</p>
<p>|3       |Razdel3        |Razdel30    |Raztex3     |Joing       |Iod         |</p>
<p>|4       |Razdel4        |Razdel40    |Raztex4     |Joi         |Iodi        |</p>
<p>|5       |Razdel5        |Razdel50    |Raztex5     |Join        |Iodin       |</p>
<p>|6       |Razdel6        |Razdel60    |Raztex6     |Jois        |Iodis       |</p>
<p>|7       |Razdel7        |Razdel70    |Raztex7     |jos         |ios         |</p>
<p>             Структура базы данных приведена в таблицах 2, 3, 4</p>
<p>                                                                   Таблица 2</p>
<p>                           Структура базы данных.</p>
<p>                                   Теория</p>
<p>|Поле Р1  |Поле Р2                                                   |</p>
<p>|...      |...                                                       |</p>
<p>|         |ФОРМИРОВАНИЕ ПРЯМОЛИНЕЙНЫХ МОНОХРОМНЫХ ИЗОБРАЖЕНИЙ        |</p>
<p>|*        |procedure DrawPoly(NumPoints:word;                        |</p>
<p>|*        |var PolyPoints);                                          |</p>
<p>|7        |Строит ломаную линию.                                     |</p>
<p>|         |NumPoints - число вершин многоугольника PolyPoints -      |</p>
<p>|         |переменная без типа, содержащая NumPoints+1 пар координат |</p>
<p>|         |вершин многоугольника (первая и последняя вершины должны  |</p>
<p>|         |совпадать).                                               |</p>
<p>|*        |procedure FillPoly(NumPoints:word;var PolyPoints);        |</p>
<p>|8        |Закрашивает многоугольник текущим цветом и орнаментом.    |</p>
<p>|         |Параметры NumPoints и PolyPoints имеют тот же смысл и тип,|</p>
<p>|         |что и одноименные параметры процедуры DrawPoly.           |</p>
<p>|...      |...                                                       |</p>
<p>|0        |                                                          |</p>
<p>Поле Р1 - флаги: * - признак выделения строки цветом</p>
<p>                 7,8 - признак наличия иллюстрации к тексту и ее номер</p>
<p>                   О - признак конца файла</p>
<p>Поле Р2 - текст.</p>
<p>                                                                   Таблица 3</p>
<p>                           Структура базы данных.</p>
<p>                                   Вопросы</p>
<p>|Поле |Поле Р2|Поле Р3                                                       |</p>
<p>|Р1   |       |                                                              |</p>
<p>|...  |...    |...                                                           |</p>
<p>|*    |02     |КАК ПОСТРОИТЬ СТОЛБЧАТУЮ ДИАГРАММУ В ЗАРАНЕЕ СФОРМИРОВАННОЙ   |</p>
<p>|     |       |РАМКЕ?                                                        |</p>
<p>|     |       |1 Bar3D(X1, Y1, X@, Y2, depth, true);                         |</p>
<p>|     |       |SetViewPort(X1, Y1, X@, Y2, false);                           |</p>
<p>|     |       |ClearViewPort;                                                |</p>
<p>|     |       |Bar3D(X1, Y1, X@, Y2, depth, false);                          |</p>
<p>|     |       |2 Bar3D(X1, Y1, X@, Y2, depth, true);                         |</p>
<p>|     |       |SetViewPort(X1, Y1, X@, Y2, true);                            |</p>
<p>|     |       |ClearViewPort;                                                |</p>
<p>|     |       |Bar3D(X1, Y1, X@, Y2, depth, false);                          |</p>
<p>|     |       |3 Bar3D(X1, Y1, X@, Y2, depth, true);                         |</p>
<p>|     |       |Bar3D(X1, Y1, X@, Y2, depth, false);                          |</p>
<p>|     |       |4 Bar3D(X1, Y1, X@, Y2, depth, true);                         |</p>
<p>|     |       |Bar3D(X1, Y1, X@, Y2, depth, true);                           |</p>
<p>|*    |       |                                                              |</p>
<p>|...  |       |...                                                           |</p>
<p>|0    |       |                                                              |</p>
<p>                                                                   Таблица 4</p>
<p>|Поле|Поле|Поле|Поле Р4                                           |Поле |</p>
<p>|Р1  |Р2  |РЗ  |                                                  |Р5   |</p>
<p>|    |    |    |SetViewPort. Координаты окна002 отсчитываются     |     |</p>
<p>|    |    |    |от левого верхнего угла экрана в то время как     |     |</p>
<p>|    |    |    |для процедуры Bar3D от левого верхнего угла       |     |</p>
<p>|    |    |    |окна.                                             |     |</p>
<p>|    |    |*   |                                                  |•    |</p>
<p>|1   |    |3   |Ответ правильный.                                 |005  |</p>
<p>|    |    |*   |                                                  |     |</p>
<p>|    |    |4   |Ответ не точный. На экране появятся затененные    |003  |</p>
<p>|    |    |    |контуры нижнего параллелепипеда.                  |     |</p>
<p>|*   |    |    |                                                  |     |</p>
<p>|... |... |... |...                                               |     |</p>
<p>|0   |    |    |                                                  |     |</p>
<p>Поле Р1 - флаги:       * - признак конца вопроса</p>
<p>                       1 - признак наличия иллюстрации и ее номер</p>
<p>                       О - признак конца файла</p>
<p>Поле Р2 - номера вопросов.</p>
<p>Поле РЗ - флаги: 1,2,3,4 - номера ответов.</p>
<p>                       * - признак конца справки</p>
<p>Поле Р4 - текст справок.</p>
<p>Поле Р5 - оценка.</p>
<p>      2.3. Возможности изменения или обновления</p>
<p>      2.3.1. Теория</p>
<p>      Данная структура базы данных является удобной для использования .  Она</p>
<p>легко может быть дополнена в случае необходимости,  частично  или  полностью</p>
<p>заменена. Файлы теоретической части являются файлами типа запись и  содержат</p>
<p>по два поля.</p>
<p>      Первое поле - Р1 . Так оно названо в программе и под него отведен один</p>
<p>символ. Это поле используется как поле флага и  анализируется  программой  с</p>
<p>помощью условного оператора  CASE.  Значения  флагов  поля  Р1  приведено  в</p>
<p>табл.5</p>
<p>                                                                   Таблица 5</p>
<p>|Символ |Значение  |Действия программы                                      |</p>
<p>|поля Р1|          |                                                        |</p>
<p>|0      |Конец     |При считывании записи с этим символом в поле Р1         |</p>
<p>|       |файла     |программа возвращает Вас в меню,                        |</p>
<p>|       |          |если Вы изучали разделы 1 Или 2, или переходит в [режим |</p>
<p>|       |          |контрольных вопросов, если изучался раздел 3-7.         |</p>
<p>|*      |1 вывод   |Строка выводится на экран другим (красным) цветом. Этим |</p>
<p>|       |строки    |символом отмечены строки, содержащие названия изучаемых |</p>
<p>|       |другим    |процедур и функций. Это сделано для наглядности         |</p>
<p>|       |цветом    |изучения. В случае необходимости эти значки возможно    |</p>
<p>|       |          |убрать и Текст будет выводится одним (синим) цветом.    |</p>
<p>|       |          |Возможно выделить и другие строки цветом, внеся в поле  |</p>
<p>|       |          |Р1 соответствующих записей значок '*'.  Возможно        |</p>
<p>|       |          |изменить цвет выделенных строк путем замены параметра   |</p>
<p>|       |          |процедуры SetColor в операторах CASE константы '*'      |</p>
<p>|       |          |процедур RAZDELXO .                                     |</p>
<p>|#      |признак   |Используется только в разделах процедурах RAZDEL6,      |</p>
<p>|       |конца     |RAZDEL7, в операторе CASE при проверке наличия          |</p>
<p>|       |страницы  |иллюстрации. При обнаружении этого символа заканчивается|</p>
<p>|       |          |цикл вывода текста из файла теории.                     |</p>
<p>|любой  |признак   |Оператор CASE сравнивает этот символ с имеющимися у него|</p>
<p>|другой |наличия   |константами и выводит соответствующую иллюстрацию на    |</p>
<p>|ASCII-с|иллюст-   |экран. Если символ среди констант не обнаружен, это не  |</p>
<p>|имвол  |рации     |мешает дальнейшему считыванию текста. Поэтому           |</p>
<p>|       |          |целесообразно иллюстрации обозначать сразу при написании|</p>
<p>|       |          |базы данных, а затем вносить соответствующие изменения в|</p>
<p>|       |          |программу.                                              |</p>
<p>      Второе поле - Р2 - составляет 69 символов и  содержит  непосредственно</p>
<p>текст теоретической части изучаемой темы. Программа написана таким  образом,</p>
<p>что из файла теории считывается на экран  по  32  строки.  Экран  удерживает</p>
<p>изображение до нажатия любой символьной клавиши, после чего он  очищается  и</p>
<p>выводятся следующие 32 строки текста и т.д. до конца файла. При этом  каждые</p>
<p>32  строки  образуют  страницу  текста.   Началу   каждой   новой   страницы</p>
<p>соответствует заголовок - название изучаемого  раздела.  Это  целесообразно,</p>
<p>так как теория имеет  значительный  объем,  экраны  полностью  заполнены.  В</p>
<p>случае необходимости (нехватки строк) следует "добить" пустые строки,  чтобы</p>
<p>страница состояла из 32  строк.  Количество  пустых  строк  будет  в  данном</p>
<p>случае незначительно, однако такая структура делает базу данных наглядной  и</p>
<p>удобной для работы даже неспециалисту и  не  загромождает  поле  Р1  лишними</p>
<p>знаками типа признака вывода пустой строки.</p>
<p>      При внесении изменений в файл теоретической части базы данных  следует</p>
<p>помнить следующее:</p>
<p>      1) поле Р1 должно занимать 1 символ. В случае отсутствия в  нем  флага</p>
<p>поле должно быть пустым;</p>
<p>      2) поле Р2 должно занимать  69  символов.  Если  в  строке  необходимо</p>
<p>поместить больше символов, То их следует перенести на другую строку, а  если</p>
<p>значащих символов меньше 69,  то  следует  "добить"  символы  "пробел"  так,</p>
<p>чтобы строка составляла всего 69 символов;</p>
<p>      3) звездочкой необходимо помечать  строки,  которые  следует  выделить</p>
<p>другим (красным) цветом;</p>
<p>      4) если базу данных дополняют, то следует не забыть указать  в  начале</p>
<p>страницы название раздела;</p>
<p>      5) символ - признак иллюстрации можно ставить в любом месте  страницы.</p>
<p>Место нахождения иллюстрации будет определено программным путем;</p>
<p>      5) в конце файла следует поставить значок '0' в поле Р1. Поле Р2  этой</p>
<p>записи считываться не будет ;</p>
<p>      6) после окончания написания базы данных  следует  проверить  еще  раз</p>
<p>соответствие всех строк необходимой длине (после нажатия клавиши END  курсор</p>
<p>должен останавливаться в позиции 70);</p>
<p>      2.3.2. Вопросы</p>
<p>      Файлы, содержащие вопросы к разделам 3,4,5,6,7 являются так же  как  и</p>
<p>файлы теории файлами типа запись. Они содержат по три поля.</p>
<p>      Первое поле Р1 и под него выделен один символ. Поле  используется  как</p>
<p>поле флагов. Значения этих флагов приведены в табл.6</p>
<p>                                                                   Таблица 6</p>
<p>                           Значения флагов поля Р1</p>
<p>|Символ поля |Значение   |Действия программы                                  |</p>
<p>|Р1          |           |                                                    |</p>
<p>|0           |Конец файла|При считывании записи с этим символом программа     |</p>
<p>|            |           |прекращает поиск нужного номера вопроса.            |</p>
<p>|*           |Конец      |Прекращается вывод содержимого поля РЗ (текста      |</p>
<p>|            |вопроса    |вопроса) на экран.                                  |</p>
<p>|Любой другой|Признак    |CASE сравнивает этот символ с имеющимися у него     |</p>
<p>|ASCII-символ|наличия    |константами и выводит соотв. иллюстрацию на экран.  |</p>
<p>|            |иллюстрации|Если символ среди констант не обнаружен, это не     |</p>
<p>|            |           |мешает дальнейшему считыванию текста. Поэтому       |</p>
<p>|            |           |целесообразно иллюстрации обозначать сразу при      |</p>
<p>|            |           |написании БД,а затем вносить соотв. изменения в ПО. |</p>
<p>      Второе поле - Р2. Оно состоит из двух  символов  и  предназначено  для</p>
<p>обозначения начал и номеров вопросов. Поле может содержать номера  с  01  по</p>
<p>99. При считывании записи программа анализирует поле  Р2  и  если  считанный</p>
<p>номер  соответствует  требуемому,  то  выводит  содержимое  поля  РЗ  (текст</p>
<p>вопроса) на экран до тех пор, пока в  поле  Р1  не  появится  признак  конца</p>
<p>вопроса.</p>
<p>      Третье поле - РЗ - содержит текст самих вопросов и под  него  выделено</p>
<p>69 символов. Аналогично полю Р2  файла  теории  это  поле  должно  содержать</p>
<p>ровно 69 символов и, в случае если значащих символов  в  строке  меньше  69,</p>
<p>следует "добить" символы "пробел".</p>
<p>В отличие от порядка считывания  файла  теории,  файл  вопросов  имеет  флаг</p>
<p>признака конца вопроса. Таким  образом  на  экран  выводится  текст  вопроса</p>
<p>начиная с нужного номера  и  до  появления  флага  признака  конца  вопроса.</p>
<p>Поэтому  при  наборе  текста  вопросов  необходимо  следить,  чтобы   вопрос</p>
<p>поместился в поле экрана , т.е. не превышал 32  строк,  имелись  необходимые</p>
<p>пустые строки, отступы, красные  строки  и  т.д...  Пустые  строки  в  конце</p>
<p>вопроса "добивать"  не следует.</p>
<p>      При внесении изменений в файл вопросов  базы  данных  следует  помнить</p>
<p>следующее:</p>
<p>      1) поле Р1 должно занимать 1 символ. В случае отсутствия в  нем  флага</p>
<p>поле должно быть пустым;</p>
<p>      2) поле Р2 должно занимать 2 символа;</p>
<p>      3) поле РЗ должно занимать  69  символов.  Если  в  строке  необходимо</p>
<p>поместить больше символов, то их следует перенести на другую строку, а  если</p>
<p>значащих символов меньше 69,  то  следует  "добить"  символы  "пробел"  так,</p>
<p>чтобы строка составляла всего 69 символов;</p>
<p>      4) текст вопроса должен начинаться  номером  вопроса,  содержащимся  в</p>
<p>поле Р2 и кончаться символом '*' , содержащимся в поле Р1;</p>
<p>      5) символ - признак иллюстрации можно ставить в любом  месте  поля  Р1</p>
<p>напротив текста  вопроса.  Место  нахождения  иллюстрации  будет  определено</p>
<p>программным путем;</p>
<p>      6) в конце файла следует поставить значок '0'  в  поле  Р1.  Остальные</p>
<p>поля этой записи считываться не будут ;</p>
<p>      7) после окончания написания базы данных  следует  проверить  еще  раз</p>
<p>соответствие всех строк необходимой длине (после нажатия клавиши END  курсор</p>
<p>должен останавливаться в позиции 72);</p>
<p>                               2.3.3. Справки</p>
<p>      Файл справок является файлом типа запись и имеет  пять  полей.  Первое</p>
<p>поле - Р1 - поле флагов, под которое  отведен  один  знак.  Значение  флагов</p>
<p>поля Р1 приведено в табл.7</p>
<p>                                                                   Таблица 7</p>
<p>                           Значения флагов поля Р1</p>
<p>|Символ    |Значение  |Действия программы                                     |</p>
<p>|поля Р1   |          |                                                       |</p>
<p>|0         |Конец     |При считывании записи с этим символом программа        |</p>
<p>|          |файла     |прекращает поиск нужного номера вопроса.               |</p>
<p>|*         |Конец     |Прекращается вывод содержимого поля РЗ (текста вопроса)|</p>
<p>|          |вопроса   |на экран.                                              |</p>
<p>|Любой     |Признак   |Оператор CASE сравнивает этот символ с имеющимися у    |</p>
<p>|другой    |наличия   |него константами и выводит соответствующую иллюстрацию |</p>
<p>|ASCII-симв|иллюстраци|на экран. Если символ среди констант не обнаружен, это |</p>
<p>|ол        |и         |не мешает дальнейшему считыванию текста. Поэтому       |</p>
<p>|          |          |целесообразно иллюстрации обозначать сразу при         |</p>
<p>|          |          |написании базы данных, а затем вносить соответствующие |</p>
<p>|          |          |изменения в программу.                                 |</p>
<p>      Поле Р2 содержит номера вопросов от 01 до 99. Под это  поле  отводится</p>
<p>2 знака. Программа, считывая поле Р2 анализирует его значение  и,  если  оно</p>
<p>соответствует нужному  номер  вопроса,  то  начинает  поиск  нужного  номера</p>
<p>ответа в поле РЗ вплоть до появления признака конца вопроса в поле Р1.</p>
<p>Поле РЗ - поле флагов. Под него отведен один знак. Числа  1,2,3,4  -  номера</p>
<p>ответов. При полном обновлении базы данных возможно увеличить или  уменьшить</p>
<p>количество вариантов ответов. Однако, необходимо при этом  внести  изменения</p>
<p>и в программу. Поле РЗ содержит и  признак  конца  справки.  Таким  образом,</p>
<p>программа, найдя нужный номер ответа начинает считывать и выводить на  экран</p>
<p>справку -содержимое поля Р4 до появления значка '*' в поле РЗ.</p>
<p>      Поле  Р4  содержит  текст  справок.  Под  него  отведено  68   знаков.</p>
<p>Необходимо при написании базы данных четко соблюдать размеры всех полей.</p>
<p>      Поле Р5 - поле оценки. Под него  отведено  3  знака.  Это  обусловлено</p>
<p>разницей  в  длине  ASCIIZ-строки  и  строки  типа  string.  Оценка   должна</p>
<p>выглядеть следующим  образом:   001,  002,  003,  004,  или  005.  Программа</p>
<p>обращается к этому полю когда находит нужный  номер  ответа  Поэтому  оценку</p>
<p>следует помещать в поле Р5 в записях, содержащих номера ответов.</p>
<p>      Как правило, текст справки не превышает  текста  вопроса,  но  следует</p>
<p>помнить,  что объем ее не должен превышать объема экрана, т.е. 32 строки.</p>
<p>      При внесении изменений в файл справок следует помнить следующее:</p>
<p>      1) поле Р1 должно занимать 1 символ. В случае отсутствия в  нем  флага</p>
<p>поле должно быть пустым;</p>
<p>      2) поле Р2 должно занимать 2 символа;</p>
<p>      3) поле РЗ должно занимать  68  символов.  Если  в  строке  необходимо</p>
<p>поместить больше символов, то их следует перенести на другую строку, а  если</p>
<p>значащих символов меньше 68,  то  следует  "добить"  символы  "пробел"  так,</p>
<p>чтобы строка составляла всего 68 символов;</p>
<p>      4) текст справки должен начинаться номером ответа и кончаться символом</p>
<p>'*' , содержащимися в поле РЗ;</p>
<p>      5) запись, содержащая в поле Р1 признак конца вопроса  не  считывается</p>
<p>далее и не выводится на экран.  Поэтому  конец  вопроса  и  конец  последней</p>
<p>справки в вопросе не должны попадать в одну запись, т.е. должны находится  в</p>
<p>разных строках.</p>
<p>      6) символ - признак иллюстрации можно ставить в любом  месте  поля  Р1</p>
<p>напротив текста  справки.  Место  нахождения  иллюстрации  будет  определено</p>
<p>программным путем;</p>
<p>      7) в конце файла следует поставить значок 'О1  в  поле  Р1.  Остальные</p>
<p>поля этой записи считываться не будут ;</p>
<p>      8) после окончания написания базы данных  следует  проверить  еще  раз</p>
<p>соответствие всех строк необходимой длине (после нажатия клавиши END  курсор</p>
<p>должен останавливаться в позиции 76);</p>
<p>      Всякое  внесение  изменений  в  базу  данный  вплоть  до  ее   полного</p>
<p>обновления требует внимания и точности . Необходимо четко соблюдать  размеры</p>
<p>всех полей записи. В противном случае возможны ошибки.  Например,  появление</p>
<p>значков конца строки  в  выводимом  тексте,  отсутствие  вывода  результатов</p>
<p>работы и др..</p>
<p>                            3. ОПИСАНИЕ ПРОГРАММЫ</p>
<p>      3.1. Общие сведения</p>
<p>      Настоящая дипломная работа посвящена разработке программы для обучения</p>
<p>работе в  графическом  режиме  языка  Turbo-Pascal.  Цели  и  задачи  данной</p>
<p>разработки,  а  также  методика  обучения  с   помощью   данной   программы/</p>
<p>возможности  языка  были  описаны  выше,  в  разделе  "Назначение  обучающей</p>
<p>программы". Программа написана на языке  Turbo-Pascal.  Этот  язык  является</p>
<p>языком высокого уровня . Он имеет  рад  преимуществ  перед  другими  языками</p>
<p>высокого  уровня.  Самые  главные  его  достоинства   -   это   простота   и</p>
<p>естественность, великолепные сервисные возможности.   Наличие  типа  запись,</p>
<p>возможности  модульного  программирование,  наличие  библиотеки  стандартных</p>
<p>модулей дают возможность быстро и эффективно создавать  самые  разнообразные</p>
<p>программные продукты начиная от решения простейших  вычислительных  задач  и</p>
<p>кончая  сложными  современными  системами   управления   базами   данных   и</p>
<p>операционных систем. В данном случае с его помощью  была  создана  программа</p>
<p>для обучения, которая работает с  базой  данных.  Возможности  языка  и  его</p>
<p>преимущества более подробно описаны в п.1.2.3 .</p>
<p>      Программа называется "Графика" . Она состоит  из  основной  программы,</p>
<p>содержащейся в файле с именем "Graphic", восьми  самостоятельных  модулей  с</p>
<p>именами Razdel1,  Razdel2,  Razdel3,  Razdel4,  Razdel5,  Razdel6,  Razdel7,</p>
<p>MyBook.</p>
<p>      Основная программа формирует заставку к программе, обращается к  файлу</p>
<p>Veden,  содержащему  текст  введения,  выводит  текст  введения,   формирует</p>
<p>систему меню, через которое затем обращается к процедурам модулей Razdel1  –</p>
<p>Razdel7, получает из этих процедур переменные , содержащие оценки за  ответы</p>
<p>на контрольные вопросы, присваивает их значение своим переменный, хранит  их</p>
<p>в течение всей работы  с  программой  и  отвечает  за  формирование  раздела</p>
<p>"Результаты Вашей работы" системы меню.  Основная  программа  регламентирует</p>
<p>доступ  к  разделам.  Переменные  NOMER3  -  NOMER7  являются  счетчиками  и</p>
<p>обеспечивают вход в процедуры модулей Razdel3 – Razdel7 не  более  двух  раз</p>
<p>за сеанс. При этом основная  программа  хранит  все  оценки,  полученные  за</p>
<p>ответы на контрольные вопросы , и все их выводит на  экран  по  обращению  к</p>
<p>разделу меню "Результаты Вашей работы".</p>
<p>      Модули Razdel1 – Razdel7  содержат  процедуры  с  именами  Razdel10  -</p>
<p>Razdel70 соответственно. Эти процедуры устанавливают связь  с  файлами  базы</p>
<p>данных, выводят текст теории, вопросов, справок, содержат программный  текст</p>
<p>иллюстраций к теории, вопросам и справкам. По результатам  ответов  студента</p>
<p>на контрольные  вопросы  процедура  формирует  переменную.  После  отработки</p>
<p>модуля значение этой переменной  переприсваивается  определенной  переменной</p>
<p>основной программы. И основная программа хранит это  значение  до  окончания</p>
<p>работы с программой.</p>
<p>      База данных  состоит  из  трех  логических  частей,  которые  содержат</p>
<p>теоретическую часть,  контрольные  вопросы  и  справки.  Они  расположены  в</p>
<p>каталоге следующим образом. Теоретическая часть размещается в восьми  файлах</p>
<p>типа запись . Файлы с именами Raztex1, Raztex2, Raztex3,  Raztex4,  Raztex5,</p>
<p>Raztex6, Raztex7  содержат  тексты  теоретической  части  по  семи  разделам</p>
<p>соответственно.  Файл  Veden  содержит  текст   введения.   К   разделам   ,</p>
<p>содержащимся в файлах  Razdel3  –  Razdel7  имеются  контрольные  вопросы  ,</p>
<p>размещенные в файлах Joing, Joi, Join, Jois, Jos, и справки , размещенные  в</p>
<p>файлах lod, lodi, lodin, lodis, los. Файлы контрольных  вопросов  и  справок</p>
<p>так же являются файлами типа запись. Структура базы данных,  ее  содержание,</p>
<p>возможности  дополнения,  обновления   или   частичного   изменения,   схема</p>
<p>обращений процедур к базе данных подробно описаны в разд.2.</p>
<p>      Модуль MyBook является библиотечным модулем. Он включает в себя четыре</p>
<p>процедуры, которые неоднократно встречаются в текстах основной  программы  и</p>
<p>процедур рабочих модулей.   Процедура  OKNO  -формирует  экранную  рамку,  в</p>
<p>которой  будут  размещаться  тексты  программы.  Процедура  OKN01  формирует</p>
<p>заставку   с   надписью   "Контрольные   вопросы".   Процедура    GraphRegim</p>
<p>обеспечивает вход  в  графический  режим.  Эти  три  процедуры  используются</p>
<p>практически во всех процедурах и в основной программе. Процедура  Diogramraa</p>
<p>формирует последнюю иллюстрацию к разделу 5 и вынесена в данный  модуль  так</p>
<p>как занимает значительный объем.</p>
<p>      Разработанная программа является самостоятельной программной единицей.</p>
<p>Для ее функционирования необходимо иметь в  арсенале  следующие  средства  :</p>
<p>персональный  компьютер  типа  IBM  или  совместимый  с   ним,   дисплей   с</p>
<p>графическим  адаптером  типа  EGA,  имеющим   объем   видеобуфера   256   К,</p>
<p>графическим выводом  640x350  пиксел,  16  регистрами  палитры.  В  качестве</p>
<p>программного   обеспечения   необходимо    иметь    DOS,    инструментальную</p>
<p>интегрированную среду Turbo-Pascal 7.0, файлы bold.chr, goth.chr,  sans.chr,</p>
<p>trip.chr  нестандартных  шрифтов,  файлы  с  текстом  программы,   файлы   ,</p>
<p>содержащие базу данных. Для работы с программой , при условии  наличия  выще</p>
<p>указанных технических и программных средств, следует обратиться  к  файлу  с</p>
<p>именем "Graphic". При этом  необходимые  данные  загружаются  в  оперативную</p>
<p>память компьютера и далее работа с программой идет в диалоговом  режиме,  не</p>
<p>требующем вмешательства  программиста.  Выход  из  программы  осуществляется</p>
<p>также по желанию обучаемого при входе в раздел меню "Конец работы".</p>
<p>      3.2. Функциональное назначение</p>
<p>      Программа для обучения работе в графическом режиме предназначается для</p>
<p>обучения  студентов  младших  курсов   Санкт-Петербургской   государственной</p>
<p>Академии  аэрокосмического  приборостроения  навыкам   программирования,   а</p>
<p>именно работе в графическом режиме языка Turbo-Pascal .</p>
<p>      Для работы с настоящей программой необходимо знание  стандарта  языка,</p>
<p>интегрированной  среды  и  элементарным  навыкам   работы   с   персональным</p>
<p>компьютером . Программа содержит теоретический материал по семи разделам:</p>
<p>      1) Программирование графических режимов.</p>
<p>      2) Управление курсором и полем рисования.</p>
<p>      3) Формирование прямолинейных монохромных изображений.</p>
<p>      4) Управление цветом и стилем изображений.</p>
<p>      5) Формирование цветных криволинейных изображений.</p>
<p>      6) Формирование графических текстов.</p>
<p>      7) Программирование озвученных динамических сцен.</p>
<p>      Эти разделы содержат наименование процедур и  функций,  их  параметры,</p>
<p>условия  и  примеры  использования  в   программах.   Текст   сопровождается</p>
<p>необходимыми иллюстрациями. Ввиду отсутствия лекций по данной теме,  наличие</p>
<p>обучающей  программы  дает  возможность   студентам   самостоятельно   и   с</p>
<p>минимальными затратами времени освоить  работу  с  графикой  .  Разделы  3-7</p>
<p>содержат  контрольные  вопросы.   Элемент   контроля   знаний   обеспечивает</p>
<p>студентам возможность самоконтроля, резко повышает уровень  знаний,  т.к.  в</p>
<p>случае необходимости обучаемый  имеет  возможность  повторно  изучить  любую</p>
<p>тему и ответить на контрольные вопросы - проверить Полученные знания.</p>
<p>Программа имеет специальное назначение. Она может быть  использована  только</p>
<p>для обучения заданной теме, а  именно  работе  в  графическом  режиме.  База</p>
<p>данных, в случае необходимости, может быть изменена, дополнена.  Однако  эти</p>
<p>изменения могут быть сделаны только  в  пределах  темы.  При  этом,  если  к</p>
<p>новому теоретическому материалу или контрольным вопросам необходимо  сделать</p>
<p>некоторые  иллюстрации,  то  в  таком   случае   потребуется   вмешательство</p>
<p>программиста.  Текст  иллюстраций  содержится   в   процедурах   модулей   и</p>
<p>вмешательство  в  их  содержимое  требует  специальных  знаний.   Существует</p>
<p>теоретическая возможность изменения темы  программы.  Однако  это  потребует</p>
<p>изменения  меню  программы,  полной  замены  базы  данных  и  соответственно</p>
<p>внесения  изменений  в  процедуры  модулей.  А  именно  -   создание   новых</p>
<p>иллюстраций. Все это потребует  очень  больших  трудозатрат  программиста  и</p>
<p>эквивалентно созданию новой программы.</p>
<p>      3.3. Описание логической структуры</p>
<p>      Обучающая  программа  "Графика"  в  своем  составе  содержит  основную</p>
<p>программу "Graphic"  ,  семь  рабочих  модулей,  один  библиотечный  модуль.</p>
<p>Назначение  каждого  из  них  подробно  описано  в  п,3.1.  Текст  программы</p>
<p>приведен в приложении. Структура обучающей программы  приведена  на  рис.  1</p>
<p>Основная программа  "Graphic"  вызывает  на  исполнение  модули   Razdel1  –</p>
<p>Razdel7. Каждый модуль содержит по  одной  процедуре,  которые  обеспечивают</p>
<p>связь с файлами базы данных, вывод текста теории и контрольных  вопросов  на</p>
<p>экран, вывод справок, регистрацию  оценок.</p>
<p>      Использование модулей  в  данном  случае  является  целесообразным  по</p>
<p>следующим причинам. Это  удобно  в  случае  дополнения  или  изменения  базы</p>
<p>данных. Если потребуется внесение дополнительных  иллюстраций,  то  нетрудно</p>
<p>войти в требуемый раздел и  внести  дополнения  в  условный  оператор  CASE.</p>
<p>Модуль является автономно компилируемой программной единицей. Это  позволяет</p>
<p>работать  с  одним  из  модулей  программы,  не  нарушая  при  этом  другие,</p>
<p>облегчает поиск ошибок  программирования.  В  данной  работе  каждый  модуль</p>
<p>отвечает за  обеспечение  изучения  одного  из  разделов  темы  "Графический</p>
<p>режим". И один модуль - МУВООК - является библиотечным, содержит  процедуры,</p>
<p>встречающиеся  часто  во  всех  модулях.   После  окончания  работы   модуля</p>
<p>управление возвращается к главной программе. Главная программа использует  в</p>
<p>своей работе переменные модулей, а  именно  переменные  формирования  оценок</p>
<p>REZ3 - REZ7. Подробнее эти переменные описаны ниже в подразделе 3.6.</p>
<p>      Схема  алгоритма  функционирования  программы  приведена  на  рис.   2</p>
<p>Алгоритм функционирования рабочих модулей приведен  на  рис.  3   Рассмотрим</p>
<p>первый алгоритм.</p>
<p>                        Структура обучающей программы</p>
<p>                                   Рис. 1</p>
<p>                     Алгоритм функционирования программы</p>
<p>                                   Рис. 2</p>
<p>                  Алгоритм функционирования рабочих модулей</p>
<p>                                   Рис. 3</p>
<p>      Блок номер 1 - формирование заставки. В текст заставки входит название</p>
<p>программы, "Графика", ее назначение, имя разработчика. Формируется  заставка</p>
<p>в графическом режиме.</p>
<p>      Блок 2 - процедура Windo1. Эта процедура устанавливает связь с  файлом</p>
<p>текстом введения и выводит его на экран. Более подробно работу  блока  можно</p>
<p>описать с помощью блоков 1-4,7 изображенных на рис.</p>
<p>      Блок 3 - выбор режима работы. В  данном  случае  обучаемому  требуется</p>
<p>выбрать один из трех режимов: работа модуля - изучение теории  и  ответы  на</p>
<p>контрольные вопросы, Вывод результатов - получение ведомости  оценок,  конец</p>
<p>-  выход  из  программы,  т.е.  окончание  работы  с  ликвидацией  всех   ее</p>
<p>результатов.  Главная  программа  содержит  процедуру   VERTIKALNOE_MENU   ,</p>
<p>которая формирует окно меню программы.   Процедура  написана  в  графическом</p>
<p>режиме.  Меню  содержит  девять  разделов,  названия  которых  соответствуют</p>
<p>фактическим параметрам упомянутой  процедуры.  Выбор  режима  работы,   т.е.</p>
<p>выбор соответствующего названия раздела осуществляется с  помощью  условного</p>
<p>оператора CASE. В операторе CASE выражением, значение  которого  вычисляется</p>
<p>, является параметр REGIME процедуры VERTIKALNOE__MENU. Он  может  принимать</p>
<p>значения 1 - 9 . На экране  это  соответствует  девять  положениям  курсора.</p>
<p>Таким образом, если параметр REGIME принимает значения 1  -  7  ,  то  далее</p>
<p>управление передается модулю с соответствующим именем.  На  схеме  алгоритма</p>
<p>-блоку 5  .  Если  параметр  REGIME  принимает  значение  8,  то  управление</p>
<p>переходит к блоку  схемы  с  номером  4  и  производится  вывод  результатов</p>
<p>работы.  Если  же  параметр  REGIME  равен  9  ,  то  работа  с   программой</p>
<p>заканчивается.</p>
<p>      Блок 4 - вывод результатов. Этот процесс оформлен в главной  программе</p>
<p>как  составной  оператор  условного  оператора  CASE.  Он  выполняется   при</p>
<p>условии, что  параметр  REGIME  равен  8.  В  операторе  вывода  результатов</p>
<p>производится формирование самой ведомости  оценок  в  виде  таблицы.  В  эту</p>
<p>таблицу  вписываются  с  помощью  оператора   writeln   переменные   главной</p>
<p>программы, содержащие оценки за работу с программой. Подробнее  формирование</p>
<p>этих переменных будет описано в подразделе 3.6. После  отработки  составного</p>
<p>оператора с выводом результатов программа возвращается в окно меню.</p>
<p>      Блок 5 - отработка модуля. Это - рабочий блок . При входе в этот режим</p>
<p>главная программа передает управление  одному  из  семи  рабочих  модулей  -</p>
<p>RAZPEH,  RAZDEL2,  RAZDEL3,  RAZDEL4,  RAZDEL5,  RAZDEL6,   RAZ0EL7.  Модули</p>
<p>обеспечивают изучение семи разделов  по  теме  "Графический  режим".  Работа</p>
<p>модулей  описана  подробнее  в  данном  подразделе  ниже.  Схема   алгоритма</p>
<p>функционирования модулей приведена на рис.</p>
<p>      При входе в режим "Конец" обучаемому  еще  раз  задается  вопрос:  "Вы</p>
<p>хотите закончить работу с  программой  Y/N  ?  "   При  нажатии  на  клавишу</p>
<p>"У"("Н")  программа заканчивает  свою  работу  .  При  этом  все  результаты</p>
<p>работы с контрольными вопросами уничтожаются. При нажатии  на  любую  другую</p>
<p>клавишу программа возвращается в окно меню.</p>
<p>      Рассмотрим  подробнее  алгоритм  функционирования   рабочих   модулей,</p>
<p>изображенный на рис.</p>
<p>      Блок 1 - процедура GraphRegim. Эта процедура содержится в библиотечном</p>
<p>модуле МУВООК. Она осуществляет вход в графический режим.</p>
<p>      Следующие далее блоки 2-8 обеспечивают вывод  теоретической  части  на</p>
<p>экран.</p>
<p>      Блок 2 - Связь с файлом теории. Этот блок содержит операторы  связи  с</p>
<p>необходимым файлом текста теории.  Таблица  соответствия  между  процедурами</p>
<p>модулей и файлами базы данных приведена в подразделе 2.2.  Файл  открывается</p>
<p>для чтения, производится проверка на наличие файла в каталоге .</p>
<p>      Блок 3, блок  13  -  процедура  ОКНО  .  Эта  процедура  содержится  в</p>
<p>библиотечном модуле MYBOOK и отвечает  за  оформление  экрана.  Она  создает</p>
<p>рамку и устанавливает фоновый цвет и цвет рисования основного текста.</p>
<p>      Блок 4 - вывод текста теории. Этот  блок  обеспечивает  считывание  из</p>
<p>открытого файла записей и вывод содержимого поля Р2  на  экран  .  Цикл  Рог</p>
<p>выводит на экран 31 строку текста. После вывода 31 строки  на  экран,  экран</p>
<p>очищается и выводятся следующие  31  строка  вплоть  до  появления  признака</p>
<p>конца файла в поле Р1 очередной считываемой записи. Проверка признака  конца</p>
<p>файла  оформлена  оператором  цикла  REPEAT   .   В   процедурах   RAZDEL6-7</p>
<p>использован дополнительно значок  #  для  пометки  конца  строки.  По  этому</p>
<p>значку с помощью оператора CASE(вывод иллюстраций)прекращается вывод  текста</p>
<p>теории. Это необходимо, т.к. в этих разделах присутствуют рисунки  требующие</p>
<p>всего экрана.</p>
<p>      Блок  5  -  проверка  условия  наличия   иллюстрации.   Эта   проверка</p>
<p>производится после  считывания  очередной  записи  файла  теории  с  помощью</p>
<p>условного оператора CASE. С константами  оператора  сравнивается  содержимое</p>
<p>поля  Р1.  В  случае  наличия  иллюстрации  она  выводится  на  экран.  Если</p>
<p>иллюстрация не требуется/то выполняется далее  считывание  текста  теории  и</p>
<p>после окончания цикла REPEAT очистка экрана.</p>
<p>Блок 6  -  вывод  иллюстрации.  Вывод  осуществляется  с  помощью  оператора</p>
<p>OutTextXY.</p>
<p>      Блок 7 - очистка экрана. Производится после вывода 31 строки текста.</p>
<p>      Блок 8 - проверка конца  файла.  Осуществляется  с  помощью  оператора</p>
<p>цикла  REPEAT.  В  поле  Р1  последней  записи  содержится  значок"0".   При</p>
<p>обнаружении этого значка  считывание  прекращается  и  цикл  завершает  свою</p>
<p>работу.</p>
<p>      Блоки 9 -24 обеспечивают работу с контрольными вопросами.</p>
<p>      Блок 9 - проверка наличия контрольных вопросов.  Этот  блок  означает,</p>
<p>что если это алгоритм работы  модулей  RAZDEL1  или  RAZDEL2  ,  то  блок  8</p>
<p>является последним и так как эти разделы не  содержат  контрольные  вопросы,</p>
<p>то после условной вершины блока 9 модуль заканчивает свою  работу.  Если  же</p>
<p>мы рассматриваем работу алгоритма для модулей, которые содержат  контрольные</p>
<p>вопросы, то по "Да" переходим к блоку 10.</p>
<p>      Блок 10 - процедура OKNO1 . Эта процедура  содержится  в  библиотечном</p>
<p>модуле MYBOOK и формирует заставку с надписью "Контрольные вопросы".</p>
<p>      Блок 11 - Случайный выбор номеров вопросов. Выбираются  четыре  номера</p>
<p>вопросов из десяти имеющихся . Это  делается  случайным  образом  с  помощью</p>
<p>генератора случайных чисел RANDOMIZE и  функции  Random,  которая  формирует</p>
<p>случайное число. Выбранные номера вопросов запоминаются в массиве М[0..3]  .</p>
<p>Элементы этого массива используются при поиске нужного  вопроса  при  выводе</p>
<p>текста теоретической части и при поиске нужного номера  вопроса  для  вывода</p>
<p>текста справки.</p>
<p>      Блок 12 - связь с файлом текста вопросов. Блок  содержит  операторы  ,</p>
<p>устанавливающие связь с файлом текста вопросов, открывающие его  для  чтения</p>
<p>и обеспечивающие проверку наличия файлов в каталоге.</p>
<p>      Блок 14 - вывод текста очередного вопроса. Записи начинают считываться</p>
<p>по одной. Поле Р2  сравнивается  с  содержимым  массива  случайно  выбранных</p>
<p>чисел М[0..3]  . При обнаружении необходимого номера вопроса начинается  его</p>
<p>вывод на экран с помощью процедуры OutTextXY вплоть  до  появления  признака</p>
<p>конца вопроса "*", содержащегося в поле Р1.</p>
<p>      Блок 15 - проверка наличия иллюстрации. Признаком наличия  иллюстрации</p>
<p>служит любой символ  кроме  "*"  ,  "О"  в  поле  Р1.  Если  при  считывании</p>
<p>очередной записи обнаружен признак наличия иллюстрации, то она выводится  на</p>
<p>экран . Проверка наличия иллюстрации и ее  выбор  осуществляется  с  помощью</p>
<p>условного оператора CASE.</p>
<p>      Блок 16 - вывод иллюстрации. Вывод осуществляется с помощью  оператора</p>
<p>outTextXY  других  операторов   формирования   графических   изображений   в</p>
<p>зависимости от содержания иллюстрации.</p>
<p>      Блок 17 - проверка введенного числа. При выводе очередного вопроса  на</p>
<p>экран внизу  экрана  располагается  надпись  :  "ВВЕДИТЕ  НОМЕР  ПРАВИЛЬНОГО</p>
<p>ОТВЕТА ___ " . Обучаемый должен ввести  число  1,2,3  или  4.  Если  введено</p>
<p>какое-либо другое число, то на экране останется  текст  вопроса,  место  для</p>
<p>ввода номера ответа останется  пустым.  Если  же  число  введено  верно,  то</p>
<p>программа переходит к обработке введенной информации.</p>
<p>      Блок 18 - связь с  файлом  текста  справок.  Устанавливается  связь  с</p>
<p>файлом текста справок, файл открывается для чтения, осуществляется  проверка</p>
<p>наличия файла в каталоге.</p>
<p>      Блок 19 -  вывод  текста  справок.  Поиск  нужной  справки  происходит</p>
<p>вначале с помощью условного оператора If , когда выбирается запись с  нужным</p>
<p>номером вопроса . Далее в цикле REPEAT вплоть до  появления  Признака  конца</p>
<p>вопроса "*" в поле Р1 происходит поиск нужного номера  ответа.  Когда  номер</p>
<p>ответа найден, он выводится на экран .</p>
<p>      Блок 20 и 21 - аналогичны блокам 15 и 16.</p>
<p>      Блок 22 - фиксация результатов.  При  считывании  и  выводе  на  экран</p>
<p>первой записи справки переменной REZY присваивается значение поля  Р5  файла</p>
<p>текста справок, это поле содержит оценку  за  ответ  на  вопрос.  Переменная</p>
<p>REZY накапливает оценки за четыре  ответа.  После  окончания  работы  модуля</p>
<p>значение  этой  переменной  присваивается   переменной   главной   программы</p>
<p>ballY[nomerX]. При повторном  вхождении  в  данный  раздел  переменная  REZY</p>
<p>обнуляется.</p>
<p>      Блок  23  -  очистка  экрана.   Производится   с   помощью   процедуры</p>
<p>ClearDevice.</p>
<p>      Блок 24 - Проверка условия конца вопросов. Если вопрос  не  последний,</p>
<p>то программа возвращается к выполнению блока 14 и далее.  Если  уже  считано</p>
<p>и выведено четыре вопроса , то модуль заканчивает свою работу.</p>
<p>      3.4. Используемые технические средства</p>
<p>      Для работы с данной программой необходимо иметь следующие  технические</p>
<p>средства: персональный компьютер типа IBM или совместимый с ним ,  растровый</p>
<p>дисплей  с  графическим  адаптером  типа  EGA,  который  будет  иметь  объем</p>
<p>видеобуфера 256 К , графический вывод 640x350 пиксел, 16 регистров палитры.</p>
<p>В качестве программного обеспечения для работы данной  программы  необходимо</p>
<p>иметь DOS, инструментальную интегрированную среду  Turbo-Pascal  7.0,  набор</p>
<p>файлов нестандартных шрифтов bold.chr, goth.chr, sans.chr, trip.chr.</p>
<p>      3.5. Вызов и загрузка</p>
<p>      Для работы программы необходимо иметь в памяти компьютера следующие</p>
<p>файлы: загрузочный модуль graphic.exe, модули razdell.tpu, razde!2.tpu,</p>
<p>razdelS.tpu, razde!4.tpu, razdelS.tpu, razde!6.tpu, razde!7.tpu,</p>
<p>библиотечный модуль mybook.tpu, файлы нестандартных шрифтов bold.chr,</p>
<p>goth.chr, sans.chr, trip.chr , модуль из библиотеки языка Pascal graph.tpu,</p>
<p>драйвер egavga.bgi, текстовые файлы базы данных: raztexl.pas, raztex2.pas,</p>
<p>raztexS.pas, raztex4.pas, raztexS.pas, raztex6.pas, raztex7.pas -</p>
<p>содержащие тексты теории, joing.pas,  iod.pas , joi.pas,  iodi.pas,</p>
<p>join.pas,  iodin.pas, jois.pas, iodis.pas, jos.pas, ios.pas - содержащие</p>
<p>текст вопросов и справок.</p>
<p>      Все они хранятся на жестком диске. Запуск программы осуществляется</p>
<p>обращением к загрузочному модулю graphic.exe. При этом все необходимые</p>
<p>модули автоматически загружаются в оперативную память Объем данной</p>
<p>обучающей программы 80 000 байт. Любая IBM PC имеет объем оперативной</p>
<p>памяти, доступной для пользовательских программ, не менее 640 Кбайт. Таким</p>
<p>образом объем данной обучающей программы является незначительным и никаких</p>
<p>трудностей с использованием оперативной памяти нет.</p>
<p>      Программа имеет одну входную точку - начало программы.</p>
<p>      3.6. Входные и выходные данные</p>
<p>      Программа для обучения "Графика", работает в диалоговом режиме.</p>
<p>Однако, ЭВМ ведет диалог с обезличенным пользователем. ЭВМ не регистрирует</p>
<p>фамилии обучаемых и соответственно не ведет журнал. От программиста или</p>
<p>оператора не требуется ввод какой-либо информации для запуска программы и</p>
<p>начала ее работы. Запуск осуществляетя обращением к загрузочному модулю</p>
<p>graphic.exe.</p>
<p>      От обучаемого требуется при ответе на контрольные вопросы ввести номер</p>
<p>правильного ответа. Согласно введенному числу из файла справок считывается</p>
<p>число - оценка за ответ. Оценки за все ответы складываются и затем</p>
<p>выставляется одна оценка за работу со всеми вопросами раздела. Таким</p>
<p>образом вводимый обучаемым номер ответа можно рассматривать как входную</p>
<p>информацию, которая после обработки формирует определенные выходные данные</p>
<p>- оценку работы за сеанс.</p>
<p>      Контрольные вопросы содержат разделы 3 - 7 . Доступ к изучению этих</p>
<p>разделов ограничен. Возможно только два раза ответить на контрольные</p>
<p>вопросы этих разделов. Все получение оценки фиксируются и хранятся в</p>
<p>переменных главной программы до окончания работы с программой.  По разделу</p>
<p>меню "Результаты Вашей работы" можно получить на экране ведомость оценок.</p>
<p>Обращение к данному разделу меню возможно в любой момент работы.</p>
<p>      Выводимые на экран оценки сохраняются до выхода из программы.</p>
<p>Программа не предусматривает вывод этих оценок на печать или хранение их в</p>
<p>памяти компьютера после окончания ее работы . Таким образом выходными</p>
<p>данными программы являются оценки, выводимые на экран дисплея. В табл. 8</p>
<p>приведено соответствие между переменными главной программы, содержащими</p>
<p>оценки, и аналогичными переменными процедур.</p>
<p>      NomerX - переменная, регламентирующая число возможных обращений к</p>
<p>процедурам. Может принимать два значения - 1 и 2.</p>
<p>      REZY - переменная процедуры, которой присваивается значение</p>
<p>выставляемой оценки.</p>
<p>      ballY[NomerX] - Переменная, хранящая значение оценки в главной</p>
<p>программе. Формируется следующим образом:</p>
<p>      baUY[NomerX] :=REZY</p>
<p>      Itog[NomerX] - переменная накопления результатов работы за сеанс по</p>
<p>итогам двух попыток. Формируется следующим образом:</p>
<p>      Itog[NomerX]:=ItogTNomerX3+baIlY[NomerX]</p>
<p>tog[NomerX] - переменная вывода результатов работы за сеанс по итогам двух</p>
<p>попыток, формируется следующим образом:</p>
<p>togЈNonterX3: =Round(Itog[NomerX]/K[NomerX]),</p>
<p>где К[NomerX] - переменная, накапливающая число попыток ответов на</p>
<p>контрольные вопросы.</p>
<p>                                                                   Таблица 8</p>
<p>              Соответствие между переменными главной программы</p>
<p>                                 и процедур</p>
<p>|Имя       |Апеременная|Переменные главной программы                         |</p>
<p>|процедуры |процедуры  |                                                     |</p>
<p>|          |REZY       |NomerX |BallY[NomerX]|Itog[NomerX]   |Tog[NomerX]  |</p>
<p>|RAZDEL30  |REZ3       |1      |Ball3[1]     |Itog[1]        |Tog[1]       |</p>
<p>|          |REZ3       |2      |Ball3[2]     |Itog[2]        |Itog[2]      |</p>
<p>|RAZDEL40  |REZ4       |1      |Ball4[1]     |Itog[1]        |Itog[1]      |</p>
<p>|          |REZ4       |2      |Ball4[2]     |Itog[2]        |Itog[2]      |</p>
<p>|RAZDEL50  |REZ5       |1      |Ball5[1]     |Itog[1]        |Itog[1]      |</p>
<p>|          |REZ5       |2      |Ball5[2]     |Itog[2]        |Itog[2]      |</p>
<p>|RAZDEL60  |REZ6       |1      |Ball6[1]     |Itog[1]        |Itog[1]      |</p>
<p>|          |REZ6       |2      |Ball6[2]     |Itog[2]        |Itog[2]      |</p>
<p>|RAZDEL70  |REZ7       |1      |Ball7[1]     |Itog[1]        |Itog[1]      |</p>
<p>|          |REZ7       |2      |Ball7[2]     |Itog[2]        |Itog[2]      |</p>
<p>                           4. ОПИСАНИЕ ПРИМЕНЕНИЯ</p>
<p>      4.1. Назначение программы</p>
<p>      Программа для обучения работе в графическом режиме языка  Turbo-Pascal</p>
<p>предназначена для  обучения  студентов  младших  курсов  Санкт-Петербургской</p>
<p>государственной   академии   аэрокосмического   приборостроения.   Программа</p>
<p>рассчитана на студента, знакомого со стандартом языка, имеющего  понятие  об</p>
<p>инструментальной  интегрированной  среде  ,  имеющего  элементарные   навыки</p>
<p>работы с персональным компьютером.</p>
<p>      Программа содержит семь разделов для  изучения  по  теме  "Графический</p>
<p>режим  языка   Turbo-Pascal"   :   программирование   графических   режимов,</p>
<p>управление  курсором   и   полем   рисования,   формирование   прямолинейных</p>
<p>монохромных   изображений,   управление   цветом   и   стилем   изображений,</p>
<p>программирование    цветных    криволинейных    изображений,    формирование</p>
<p>графических текстов,  программирование  озвученных  динамических  сцен.  Эти</p>
<p>разделы практически полностью охватывают тему.</p>
<p>      Программу Предполагается использовать как реальное средство  обучения.</p>
<p>Так как лекционных  занятий  по  теме  "Графические  средства  языка  Turbo-</p>
<p>Pascal" нет, то наличие данной программы восполняет пробел  в  теоретической</p>
<p>и частично практической  подготовки  студентов  по  данной  теме.  Внедрение</p>
<p>данной программы  облегчит  труд  и  студентов  и  преподавателей.  Студенты</p>
<p>смогут  овладеть  необходимыми  знаниями  в  более  короткий  срок  и  будут</p>
<p>освобождены От необходимости поиска  нужной  литературы.  Кроме  того  режим</p>
<p>контроля позволит студенту без  помощи  преподавателя  разобраться  в  своих</p>
<p>ошибках,  повторить  изучение  и  вновь  проверить  свои  знания  с  помощью</p>
<p>контрольных вопросов. В  процессе  работы  с  обучающей  программой  студент</p>
<p>получает и практические навыки  общения  с  ЭВМ,  что  в  условиях  дефицита</p>
<p>машинного времени также важно. Преподаватель в этом случае освобождается  от</p>
<p>объяснения студентам теоретического материала и получает достаточно  времени</p>
<p>для индивидуальной работы с ними.  Работая  с  программой  каждый  обучаемый</p>
<p>может  затратить   неодинаковое   время   на   изучение   каждого   раздела.</p>
<p>Индивидуальный темп работы обеспечивает повышение качества знаний.</p>
<p>      4.2. Условия применения</p>
<p>      4.2.1. Технические средства</p>
<p>      Предлагаемая программа для обучения написана на языке Turbo-Pascal 7.0</p>
<p>. Она предназначена для установки на IBM PC и требует  наличия  монитора  со</p>
<p>следующими характеристиками: графический адаптер  типа  EGA,  который  будет</p>
<p>иметь объем видеобуфера  256  К  ,  графический  вывод  640x350  Пиксел,  16</p>
<p>регистров палитры.</p>
<p>      Необходимо иметь  в  качестве  программного  обеспечения  операционную</p>
<p>систему DOS , инструментальную  интегрированную  среду  Turbo-Pascal  7.0  ,</p>
<p>набор файлов нестандартных шрифтов bold.chr, goth.chr, sans.chr, trip.chr.</p>
<p>      4-2.2. Общие характеристики входной и выходной информации</p>
<p>      Программа для обучения "Графика" работает  в  диалоговом  режиме.  При</p>
<p>этом ЭВМ работает с обезличенным пользователем и требует  лишь  механической</p>
<p>реакции на свои действия. Для начала работы программы достаточно  обратиться</p>
<p>к загрузочному модулю graphic.exe. В качестве входной  информации  в  данной</p>
<p>программе можно рассматривать вводимы обучаемым  номера  правильных  ответов</p>
<p>при работе с контрольными вопросами. Введение номера ответа влечет за  собой</p>
<p>следующие действия программы: Введенный номер  считывается  с  клавиатуры  и</p>
<p>фиксируется в переменной СН. Затем при  считывании  файла  справок  значение</p>
<p>этой переменной сравнивается  со  значением  соответствующего  поля  номеров</p>
<p>ответов. При совпадении этих значений переменной оценки  RE2X  присваивается</p>
<p>значение поля Р5 , в котором расположены оценки  за  все  варианты  ответов.</p>
<p>Далее эта переменная накапливает оценки за все четыре  ответа/  обрабатывает</p>
<p>их и формирует оценку за работу с разделом. Эта оценка передается в  главную</p>
<p>программу. Главная программа обеспечивает вывод  этих  оценок  на  экран  по</p>
<p>разделу  меню  "Результаты  Вашей  работы".  Кроме  того  главная  программа</p>
<p>обрабатывает все оценки по разделам и  формирует  оценку  работы  за  сеанс.</p>
<p>Таким  образом  значения  переменных   вывода   оценок   являются   выходной</p>
<p>информацией. Подробнее процесс формирования  выходной  информации  описан  в</p>
<p>подпункте 3.6.</p>
<p>      4.3. Пример использования</p>
<p>      В этом подпункте описан пример конкретного использования программы для</p>
<p>обучения работе в графическом режиме.</p>
<p>Итак, программа запущена на исполнения.  На  экране  появляется  заставка  с</p>
<p>названием программы  -   "Графика",   полное  наименование  -"Программа  для</p>
<p>обучения работе в графическом режиме", фамилия  разработчика,  место  и  год</p>
<p>создания. Для  "перелистывания  экранов"  необходимо  пользоваться  клавишей</p>
<p>Enter.</p>
<p>      Нажимаем Enter. На  экран  выводится  текст  введения.  В  нем  кратко</p>
<p>описано содержание данной обучающей программы.  После  его  прочтения  можно</p>
<p>перейти непосредственно к работе.</p>
<p>Нажимаем Enter. На экране появляется окно вертикального  меню.  Внешний  вид</p>
<p>меню изображен в приложении 3. Перемещая  курсор  с  помощью  клавиш-стрелок</p>
<p>вниз и вверх мы можем выбрать желаемый режим работы. Их,  как  было  описано</p>
<p>выше в  подразделе  3.3  ,три.  Выберем  режим  обучения.  Допустим,  курсор</p>
<p>остановился  на  разделе   3   с   названием   "Формирование   прямолинейных</p>
<p>монохромных изображений". Для изучения этого раздела следует нажать  клавишу</p>
<p>Enter.</p>
<p>      Нажимаем Enter. Появляется экран , оформленный  небольшой  по  толщине</p>
<p>рамкой во весь  экран.  В  верхней  строке  помещается  название  изучаемого</p>
<p>раздела : ФОРМИРОВАНИЕ ПРЯМОЛИНЕЙНЫХ МОНОХРОМНЫХ ИЗОБРАЖЕНИЙ. В левой  части</p>
<p>экрана расположен текст  теории,  который  содержит  наименования  процедур,</p>
<p>выделенных красным цветом, и пояснения их  работы.  В  правой  части  экрана</p>
<p>расположены рисунки, поясняющие их работу, а именно  фигуры,  которые  можно</p>
<p>построить с помощью данных процедур.  Изучив  полученную  информацию,  можно</p>
<p>перейти к следующему экрану. Текст  теории  раздела  3  содержится  на  трех</p>
<p>экранах.</p>
<p>      Изучив содержимое третьего экрана нажимаем клавишу  Enter.  На  экране</p>
<p>появляется  заставка  с  надписью  "Контрольные  вопросы".  Далее  ,   после</p>
<p>очередного нажатия Enter , на экран будет выведен текст первого вопроса.</p>
<p>      Экран вопроса  выглядит  следующим  образом.  Экран  оформлен  той  же</p>
<p>рамкой,  что  и  экран  теории.  Верхние  строки  занимает  текст   вопроса,</p>
<p>выделенный крупным шрифтом. Ниже  вертикально  расположены  четыре  варианта</p>
<p>ответа на поставленный вопрос. Если выведенный вопрос содержит  иллюстрацию,</p>
<p>то она расположена на  уровне  вариантов  ответов  в  правой  части  экрана.</p>
<p>Нижнюю строку экрана занимает надпись :  "ВВЕДИТЕ НОМЕР  ПРАВИЛЬНОГО  ОТВЕТА</p>
<p>___". Прочитав все варианты  и  проанализировав  их  нужно  выбрать  один  и</p>
<p>ввести его, нажав клавишу с  соответствующей  цифрой.  Если  нажата  клавиша</p>
<p>отличная от клавиш 1,2,3 или 4, то После  нажатия  клавиши  Enter  введенный</p>
<p>символ будет стерт,  вопрос  останется  на  экране.  Номер  ответа  придется</p>
<p>ввести вновь.</p>
<p>      Если введено допустимое число, то после нажатия клавиши Enter на экран</p>
<p>будет выведен текст справки.  Экран  при  этом  оформлен  аналогично  экрану</p>
<p>вопроса. Текст справки располагается  в  средней  части  экрана  и  содержит</p>
<p>оценку  за  ответ  в  формулировке  "правильно"  или  "неверно"  и   краткую</p>
<p>информацию о допущенных ошибках.</p>
<p>      После нажатия Enter на экран выводится текст второго вопроса. Действия</p>
<p>ЭВМ и обучаемого аналогичны действиям с первым вопросам.</p>
<p>      После прочтения последней справки последнего вопроса мы нажимаем Enter</p>
<p>и возвращаемся в окно меню. Далее можно войти  в  любой  другой  раздел  для</p>
<p>изучения. Войдем в раздел "Результаты Вашей работы".  Для  этого  переместим</p>
<p>курсор в позицию с данным  названием  и  нажмем  клавишу  Enter.  На  экране</p>
<p>появилась ведомость оценок. Текст  выполнен  ярко-розовым  цветом  на  синем</p>
<p>фоне. Слева перечислены названия 7 изучаемых разделов, а справа два  столбца</p>
<p>оценок  -первая  попытка   и   вторая   попытка.   В   графе   "Формирование</p>
<p>прямолинейных  монохромных  изображений"   первая   попытка   стоит   оценка</p>
<p>(например "2").  В  остальных  графах  стоят  "О".  Последняя  графа  левого</p>
<p>столбца называется "Оценка работы за сеанс" . В этой графе 1  попытка  стоит</p>
<p>оценка "4".</p>
<p>      Для выхода из  раздела  "Результаты  Вашей  работы"  необходимо  вновь</p>
<p>нажать клавишу Enter. Если повторно войти в  третий  раздел  и  ответить  на</p>
<p>вопросы, а затем войти в  раздел  "Результаты  Вашей  работы",  то  в  графе</p>
<p>"Формирование графических режиме" вторая попытка  будет  стоять  не  "О",  а</p>
<p>оценка (например, "4").  Третий раз  войти  в  третий  раздел  нельзя,  т.к.</p>
<p>разрешено сделать только две попытки.</p>
<p>      Через меню войдем в  четвертый  раздел  "Управление  цветом  и  стилем</p>
<p>изображений". Порядок работы в этом разделе такой же  как  и  в  предыдущем,</p>
<p>как и в последующих. После изучения теории отвечаем на контрольные  вопросы.</p>
<p>Закончив работу с вопросами обучаемый попадает в окно  меню  и  вновь  может</p>
<p>узнать результаты своей работы в виде оценок.  Для  этого  необходимо  вновь</p>
<p>войти в раздел "Результаты Вашей работы, подведя курсор  к  разделу  с  этим</p>
<p>названием и нажав клавишу Enter. Теперь к  уже  имеющимся  двум  оценкам  по</p>
<p>разделу "Формирование прямолинейных монохромных изображений" добавилась  еще</p>
<p>одна оценка в графе "Управление цветом и стилем изображений" первая  попытка</p>
<p>(например, "5") . Изменилась оценка работы за сеанс первой попытки  и  стала</p>
<p>"4".</p>
<p>      Нажав вновь клавишу Enter вернемся  в  окно  меню.  На  этом  закончим</p>
<p>работу с программой. Для  этого  необходимо  подвести  курсор  к  разделу  с</p>
<p>названием "Конец работы". На  экране  появляется  заставка  с  надписью  "Вы</p>
<p>хотите закончить работу с программой Y/N?" . Нажимаем клавишу "Y" или "Н"  и</p>
<p>выходим из программы. При нажатии любой другой клавиши  на  экране  появится</p>
<p>окно меню.</p>
<p>      Если после выхода из программы вновь в нее войти и через меню войти  в</p>
<p>раздел "Результаты Вашей работы", то во всех  графах  будут  находится  "О".</p>
<p>Это означает, что при  выходе  из  программы  результаты  работы  с  ней  не</p>
<p>сохраняются.  Поэтому,  перед  выходом  из  программы   следует   предъявить</p>
<p>ведомость оценок преподавателю.</p>
<p>                         5. РУКОВОДСТВО ПРОГРАММИСТА</p>
<p>      5.1. Назначение и условия применения программы</p>
<p>      Программа для обучения работе в графическом режиме языка  Turbo-Pascal</p>
<p>предназначена для обучения студентов младших  курсов  СПГУАП.  Она  знакомит</p>
<p>студентов в основами программирования в  графическом  режиме,  возможностями</p>
<p>языка и turbo-среды, дает навыки работы с  компьютером.  Программа  содержит</p>
<p>материал для изучения по следующим темам:</p>
<p>      1) Программирование графических режимов.</p>
<p>      2) Управление курсором и полем рисования.</p>
<p>      3) Формирование прямолинейных монохромных изображений.</p>
<p>      4) Управление цветом и стилем изображения.</p>
<p>      5) Программирование цветных криволинейных изображений.</p>
<p>      6) Формирование графических текстов.</p>
<p>      7) Программирование озвученных динамических сцен.</p>
<p>      Изучение темы  по  данным  разделам  обеспечивает  основная  программа</p>
<p>graphic и семь модулей RAZTEX1-RAZTEX7.</p>
<p>Основная программа выполняет следующие  функции:  формирует  заставку,  окно</p>
<p>меню,  вызывает  на  исполнение  модули  ,  формирует  и  выводит  на  экран</p>
<p>ведомость оценок. Модули RAZTEX1-RAZTEX7 выполняют функции: связь с  файлами</p>
<p>базы данных, вывод на экран текста  теории,  вопросов,  справок,  считывание</p>
<p>оценки за ответы на вопросы из файла справок.</p>
<p>      Для успешной работы программы необходимо иметь персональный  компьютер</p>
<p>IBM или совместимый с ним, растровый дисплей с  графическим  адаптером  типа</p>
<p>EGA с объемом видеобуфера 256  К,  разрешением  экрана  640x350  пиксел,  16</p>
<p>регистрами палитры. В качестве  программного  обеспечения  необходимо  иметь</p>
<p>DOS, инструментальную интегрированную  среду  Turbo-Pascal  7.0  .  Вызов  И</p>
<p>загрузка программы подробнее описаны ниже в подразделе 5.3.</p>
<p>5.2. Характеристики программы</p>
<p>      Программа для обучения  рассчитана  на  работу  в  течение  45  минут.</p>
<p>Программа  работает  в  диалоговом  режиме.   В   начале   работы   студенту</p>
<p>предлагается воспользоваться окном меню для  выбора  раздела  для  изучения.</p>
<p>Далее выдается теоретическая часть  .  После  нее  предлагаются  контрольные</p>
<p>вопросы. Вопросы выдержаны в  режиме  "вопрос  -четыре  варианта  ответа"  .</p>
<p>Обучаемому предлагается выбрать один  и  ввести  номер  правильного  ответа.</p>
<p>Введенный  ответ  обрабатывается  и  выводится  на  экран  справка   о   его</p>
<p>правильности.</p>
<p>      Инструментальная  интегрированная  среда  Turbo-Pascal  имеет   хорошо</p>
<p>развитую службу помощи. Поэтому  при  возникновении  ошибок  она  выдает  на</p>
<p>экране  в  верхней  строке  код  ошибки  и  ее   название.   Для   избежания</p>
<p>возникновения ошибок следует внимательно вносить изменения в базу  данный  и</p>
<p>программу , если это потребуется, четко  выдерживать  размеры  полей  файлов</p>
<p>записей базы данных. Изменения в программу вносить только  после  подробного</p>
<p>знакомства с программными документами. Особое внимание следует  обратить  на</p>
<p>необходимость преобразования ASCIIZ-строки в  строку  стандарта  Pascal  при</p>
<p>выводе ее на экран, а также преобразование символьного  представления  числа</p>
<p>в двоичную форму перед тем как проводить сравнения его с числом.</p>
<p>Если на экране при выводе текста появляются значки - признаки  конца  строки</p>
<p>- это значит, что не соблюдены длины  полей  в  соответствующем  файле  базы</p>
<p>данных.</p>
<p>5.3. Обращение к программе</p>
<p>      Для успешной работы программы необходимо  иметь  в  памяти  компьютера</p>
<p>следующие  файлы:  загрузочный  модуль  graphic.exe,   библиотечные   модули</p>
<p>RAZDELl.tpu,    RAZDEL2.tpu,    RAZDEL3.tpu,    RAZDEL4.tpu,    RAZDELS.tpu,</p>
<p>RAZDEL6.tpu, RAZDEL7.tpu,  MYBOOK,  файлы  нестандартных  шрифтов  bold.chr,</p>
<p>goth.chr, sans.chr, trip.chr, модуль среды Turbo-Pascal  graph.tpu,  драйвер</p>
<p>egavga.bgi,  текстовые  файлы  базы  данных  :   raztexl.pas,   raztex2.pas,</p>
<p>raztexS.pas,   raztex4.pas,   raztexS.pas,   raztex6.pas,   raztex7.pas    -</p>
<p>содержащие  тексты  теоретической  части,   joing.pas,   iod.pas,   joi.pas,</p>
<p>iodi.pas, join.pas,  iodin.pas,  jois.pas,  iodis.pas,  jos.pas,  ios.pas  -</p>
<p>содержащие тексты вопроов и справок .</p>
<p>      Все  эти  файлы  хранятся  на  жестком  диске.  Запуск  программы   на</p>
<p>исполнение осуществляется обращением к загрузочному модулю graphic.exe.  При</p>
<p>этом необходимые модули  автоматически  подгружаются  в  оперативную  память</p>
<p>компьютера. Объем данной обучающей программы 80 000  байт,  что  значительно</p>
<p>меньше объема оперативной памяти любого персонального компьютера.</p>
<p>      Необходимо, чтобы загрузочный модуль, библиотечные модули программы, а</p>
<p>также файлы нестандартных шрифтов, модуль  graph.tpu  и  драйвер  egavga.bgi</p>
<p>находились в одном каталоге. В противном случае работа программы  становится</p>
<p>невозможной.</p>
<p>5.4. Входные и выходные данные</p>
<p>      Как пояснялось выше данная обучающая программа работает  в  диалоговом</p>
<p>режиме с обезличенным пользователем. Программа  не  требует  ввода  фамилии,</p>
<p>группы и т.д. и  соответственно  не  веден  никаких  журналов.  Для  запуска</p>
<p>программы  на  исполнение  от  программиста  не  требуется  ввод  какой-либо</p>
<p>входной информации.   В  качестве  входной  информации  можно  рассматривать</p>
<p>введение обучаемым номеров правильных ответов. Введенное число  считывается,</p>
<p>анализируется  и  в  результате  выводятся  на  экран   оценки,   являющаяся</p>
<p>выходными данными. Оценку можно увидеть , войдя в раздел  "Результаты  Вашей</p>
<p>работы". Ведомость результатов работы сохраняется в течение  всех  работы  с</p>
<p>программой, однако после выхода из программы ведомость ликвидируется.  Таким</p>
<p>образом выходная информация имеет место, однако не  сохраняется.   Подробнее</p>
<p>о процессе формирования выходных данных можно узнать из подраздела 3.6.</p>
<p>                          6. РУКОВОДСТВО ОПЕРАТОРА</p>
<p>      6.1. Назначение программы</p>
<p>      Программа  для  обучения  работе  в   графическом   режиме   "Графика"</p>
<p>предназначена для  обучения  студентов  младших  курсов  Санкт-Петербургской</p>
<p>государственной   академии   аэрокосмического   приборостроения   работе   с</p>
<p>графическим режимом языка Turbo-Pascal. Программа  предусматривает  изучение</p>
<p>темы по  семи  разделам  ,  которые  оформлены  в  семи  модулях.  Программу</p>
<p>предполагается    использовать    для    обучения    студентов     различных</p>
<p>специальностей. Изложенный в ней материал дает возможность студентам  быстро</p>
<p>и эффективно овладеть навыками работы  в  графическом  режиме.  Подробнее  с</p>
<p>назначением данной обучающей программы можно ознакомиться в подразделе 1.2.</p>
<p>      6.2. Условия выполнения программы</p>
<p>      Данная обучающая программа написана на языке Turbo-Pascal 7.0  Для  ее</p>
<p>успешной работы необходимо наличие персонального  компьютера  типа  IBM  или</p>
<p>совместимого с ним. Программа написана  в  расчете  на  графический  адаптер</p>
<p>типа EGA с объемом видеобуфера 256 К, графическим  выводом  640x350  пиксел,</p>
<p>16  регистров  палитры.   Перечисленные   аппаратурные   средства   являются</p>
<p>минимально необходимыми для работы программы.</p>
<p>      В качестве программного обеспечения необходимо иметь DOS, Turbo-Pascal</p>
<p>7.0,  в  текущем  каталоге  -  файлы  нестандартных  шрифтов,   используемые</p>
<p>программой: goth.chr,  sans.chr,  trip.chr,  bold.chr,  библиотечный  модуль</p>
<p>Turbo-Pascal - graph.tpu, драйвер  egavga.bgi.  Непосредственно  для  работы</p>
<p>программы требуется иметь в текущем каталоге  загрузочный  модуль  программы</p>
<p>"Графика"  -  graphic.exe,  библиотечные  модули  программы  -  RAZDELl.tpu,</p>
<p>RAZDEL2.tpu,    RAZDELS.tpu,    RAZDEL4.tpu,    RAZDELS.tpu,    RAZDEL6.tpu,</p>
<p>RAZDEL7.tpu, файлы базы  данных  -  raztexl.pas,  raztex2.pas,  raztex3.pas,</p>
<p>raztex4.pas,  raztexS.pas,  raztex6.pas,  raztex7.pas,  joing.pas,  joi.pas,</p>
<p>join.pas,  jois.pas,  jos.pas,  iod.pas,  iodi.pas,  iodin.pas,   iodis.pas,</p>
<p>ios.pas.</p>
<p>      6.3. Выполнение программы</p>
<p>      Для обеспечения загрузки, запуска, выполнения и  завершения  программы</p>
<p>оператору следует выполнить следующие действия:</p>
<p>      1) Включить компьютер и подготовить его к работе.</p>
<p>      2)  Проверить  наличие  на  данной  ЭВМ  необходимых  для   выполнения</p>
<p>программы программных средств перечисленных в подразделе 6.2.</p>
<p>      3) В случае  отсутствия  каких-либо  файлов  в  текущем  каталоге,  но</p>
<p>наличии  их  на  другом  диске,  переписать  в  текущий  каталог   пользуясь</p>
<p>командами Norton Commander.</p>
<p>      4) Запуск программы осуществляется  из  Norton  Commander.  Необходимо</p>
<p>обратиться к загрузочному модулю программы с именем  graphic.exe.  При  этом</p>
<p>необходимые модули  автоматически  будут  загружены  в  оперативную  память.</p>
<p>Далее программа будет выполняться в диалоговом режиме.  На  экране  появится</p>
<p>заставка с названием программы.</p>
<p>      5) Чтобы работать с программой необходимо "листать" экраны  с  помощью</p>
<p>клавиши Enter. При работе с вопросами вводить  номер  правильного  ответа  с</p>
<p>клавиатуры путем нажатия на клавиши с соответствующими цифрами.</p>
<p>      6) Для выхода из программы  необходимо  войти  в  раздел  меню  "Конец</p>
<p>работы"  и  нажать  клавишу  с  символом  "Y"  или  "Н".  После  этого   для</p>
<p>возвращения в Norton Commander необходимо нажать любую клавишу.</p>
<p>      7) В случае внезапного прекращения  работы  программы  или  начального</p>
<p>отказа от запуска вернуться в Norton Commander и еще раз  проверить  наличие</p>
<p>необходимого программного обеспечения. Если ошибка  загрузки  и  запуска  не</p>
<p>найдена, видимо ошибка в программе или базе данных и  следует  обратиться  к</p>
<p>программисту.</p>
<p>      6.4. Сообщения оператору</p>
<p>      В процессе  работы  программы  оператору  могут  выдаваться  следующие</p>
<p>сообщения.</p>
<p>      При окончании работы с программой , после ответа на вопрос "Вы  хотите</p>
<p>закончить работу с программой Y/N ?", на экран, закрашенный  розовым  цветом</p>
<p>выдается сообщение "Press ENTER to  return  to  the  Norton  Commander".  По</p>
<p>этому сообщению следует нажать клавишу ENTER и  выйти  в  Norton  Commander.</p>
<p>Работа с программой завершена.</p>
<p>      Если в процессе выполнения программы не найден  файл  базы  данных,  к</p>
<p>которому в  данный  момент  обращается  программа,  то  на  экран  выводится</p>
<p>сообщение "Runtime error 002 at 0125:04E5. Press  ENTER  to  return  to  the</p>
<p>Norton Commander". По этому сообщению следует нажать клавишу ENTER, выйти  в</p>
<p>Norton Commander,  проверить  наличие  файла  базы  данных  который  не  был</p>
<p>найден. Если файл отсутствует, то следует его загрузить в  текущий  каталог.</p>
<p>Если файл имеется в каталоге,  то  вероятнее  всего  ошибка  в  программе  и</p>
<p>следует обратиться к программисту. В  любом  случае  существует  возможность</p>
<p>исключить неисправный модуль и продолжать работу с программой .  Эту  задачу</p>
<p>может также решить программист.</p>
<p>      Если в процессе выполнения программы  в  определенный  момент  времени</p>
<p>файл  базы   данных   найден,   однако   он   пуст,   на   экран   выводится</p>
<p>сообщение:"Runtime error 100 at 01B6:076А. Press  ENTER  to  return  to  the</p>
<p>Norton Commander". По  этому  сообщению  оператору  следует  нажать  клавишу</p>
<p>ENTER, вернуться в Norton Commander, проверить содержимое файла.</p>
<p>      Если на экране  появляются  значки  признака  конца  строки,  а  затем</p>
<p>надпись "Runtime error 100 at  0454:OOAF.  Press  ENTER  to  return  to  the</p>
<p>Norton Commander" , то это означает, что  ошибка  содержится  в  файле  базы</p>
<p>данных, а именно не соблюдены длины полей записей. При  возникновении  такой</p>
<p>ошибки следует обратиться к программисту.</p>
<p>      7. ТЕХНОЛОГИЯ ИСПОЛЬЗОВАНИЯ ПРОГРАММЫ</p>
<p>      Предлагаемый программный продукт является средством обучения студентов</p>
<p>работе в графическом режиме  алгоритмического  языка  TURBO-PASCAL  6.0\7.0.</p>
<p>Программа рассчитана на использование в  качестве  теоретически-практической</p>
<p>подготовки    студентов    1,2,4,5,8     факультетов     Санкт-Петербургской</p>
<p>Государственной  Академии   аэрокосмического   приборостроения   по   курсам</p>
<p>"Информатика",     "Алгоритмизация     и     программирование",      "Методы</p>
<p>программирования".</p>
<p>      Данная обучающая программа работает  в режиме   "Обучение  -контроль".</p>
<p>При начале работы студенту предлагается  через  систему  меню  выбрать   для</p>
<p>изучения один из следующих разделов: программирование  графических  режимов,</p>
<p>управление  курсором  и  полем   рисования,    формирование    прямолинейных</p>
<p>монохромных   изображений,   управление   цветом   и   стилем   изображений,</p>
<p>программирование    цветных    криволинейных    изображений,    формирование</p>
<p>графических текстов,  программирование озвученных динамических  сцен.  Когда</p>
<p>студент выбрал тему для изучения , ему предлагается  теоретических  курс  по</p>
<p>этой  теме,  снабженный  необходимыми  иллюстрациями,  звуковыми  эффектами,</p>
<p>поясняющими излагаемый материал. Первые два раздела на  этом  завершаются  и</p>
<p>студент  возвращается  в  начало  ,  он  может  вновь  через   меню  выбрать</p>
<p>очередной  раздел. Разделы 3,  4, 5,  6 и  7 содержат  контрольные  вопросы.</p>
<p>Студент, выбравший для изучения один  из  этих  разделом  имеет  возможность</p>
<p>после  получения  теоретической  информации  самостоятельно  проверить  свои</p>
<p>знания.   Ему предлагается ответить на 4 вопроса по теме.  После  ответа  на</p>
<p>каждый вопрос обучающийся получает справку о правильности ответа.  В  случае</p>
<p>неверного ответа поясняется ошибка.  За каждый ответ выставляется  оценка  и</p>
<p>результирующая оценка работы с данным разделом запоминается в  разделе  меню</p>
<p>"Результаты Вашей  работы".  Результаты  работы  сохраняются  до  выхода  из</p>
<p>программы. Таким образом в конце работы преподаватель может просмотреть  все</p>
<p>оценки  и  при  необходимости  зафиксировать  из  в  групповом  журнале.   К</p>
<p>разделам, содержащим контрольные вопросы, студент  может  обратиться  только</p>
<p>два раза.</p>
<p>      Данная обучающая  программа  предусматривает  индивидуальное  обучение</p>
<p>студентов. Темп диалога ЭВМ-пользователь задает сам студент.  Это,  а  также</p>
<p>возможность повторного  изучения  каждой  темы,  дает  в  результате  лучшее</p>
<p>усвоение изучаемого материала.</p>
<p>      Внедрение данной  обучающей  программы  в  учебный  процесс  обеспечит</p>
<p>возможность студентам быстрее получить навыки работы в  графическом  режиме.</p>
<p>Это  также  освободить  время   преподавателя   и   даст   ему   возможность</p>
<p>индивидуально заниматься со студентами, уделяя внимание каждому  студенту  в</p>
<p>зависимости от его подготовки.</p>
<p>      В настоящее время курс лекций по теме "Графический режим" отсутствует.</p>
<p>Практические  занятия  ведутся  с  использованием  методической   разработки</p>
<p>кафедры Вычислительных машин "Графические  средства  алгоритмического  языка</p>
<p>TURBO-PASCAL", выпущенной в 1992 году .  Практически  изучение  графического</p>
<p>режима и его возможностей оставлено  на  самостоятельную  работу  студентам.</p>
<p>Обучающая  программа  так  же  предусматривает  самостоятельную   работу   с</p>
<p>использованием ЭВМ . Однако, она имеет следующие преимущества:</p>
<p>      1) наглядность изучаемого материала;</p>
<p>      2) индивидуальный темп диалога ЭВМ-пользователь;</p>
<p>      3) самостоятельный  контроль  знаний  и  как  следствие  повышение  их</p>
<p>качества;</p>
<p>      4) освобождение преподавателя от чтения теоретической части  темы  для</p>
<p>индивидуальной работы со студентами.</p>
<p>      5)  возможность,  в  случае  необходимости,  быстрого   обновления   и</p>
<p>расширения базы данных вплоть до полного замены изучаемых тем;</p>
<p>      8. ПЛАНИРОВАНИЕ НАУЧНО-ТЕХНИЧЕСКОЙ ПОДГОТОВКИ ПРОИЗВОДСТВА</p>
<p>      8.1. Построение ленточного графика проектирования программы</p>
<p>      Планирование научно-технической подготовки производства заключается  в</p>
<p>составлении календарных  планов  выполнения  комплексов  работ,  определении</p>
<p>денежных средств, необходимых для их реализации, а также потребных  трудовых</p>
<p>и материальных ресурсов. Разработка программного обеспечения является  одной</p>
<p>из трудоемких задач, что приводит к высоким затратам  и  большому  удельному</p>
<p>весу стоимости программы. Рассмотрим и  оценим  затраты  ,  необходимые  для</p>
<p>реализации задач, поставленных темой данной работы.</p>
<p>      В соответствии с технических заданием требуется создать программу  для</p>
<p>обучения работе в графическом режиме  языка  TURBO-PASCAL  6.0\7.0.  Для  ее</p>
<p>создания  необходимо  не  только  написание  программы,  но   и   подготовка</p>
<p>соответствующих методических материалов. Так как  тема  обучающей  программы</p>
<p>связана с программированием, то  данную  работу  могут  полностью  выполнить</p>
<p>инженеры-программисты.  При  разработке   темы   данной   дипломной   работы</p>
<p>целесообразно привлечение группы специалистов, состоящей  из  трех  человек:</p>
<p>одного   инженера-программиста   первой   категории   и   двух    инженеров-</p>
<p>программистов третьей категории.</p>
<p>      Для составления ленточного графика проектирования программы необходимо</p>
<p>составить  перечень  необходимых  работ,  которые  потребуется  выполнить  в</p>
<p>процессе  проектирования,  и  оценить  их  трудоемкость.  В  соответствии  с</p>
<p>технологией и планированием разработки программ работу  по  созданию  данной</p>
<p>программы можно разбить  на  следующие  компоненты:  разработка  требований,</p>
<p>составление  алгоритма,  написание  программы,  отладка.   Для   определения</p>
<p>временных затрат  используем  метод  экспертных  оценок  и  метод  обработки</p>
<p>экспертных оценок - раздельное  оценивание  составляющих  затрат.  При  этом</p>
<p>определяем для каждого вида работ ai - наименьшую возможную, mi  -  наиболее</p>
<p>вероятную , bi - наибольшую возможную величину  затрат.  Ожидаемая  величина</p>
<p>затрат MOi и  стандартное  отклонение  Qi  для  каждой  компоненты  составят</p>
<p>соответственно:</p>
<p>      ai+4m+b;</p>
<p>M0i= ---------   ,</p>
<p>        6</p>
<p>      bi-ai</p>
<p>Qi = ---------   .</p>
<p>        6</p>
<p>Оценка  временных  затрат  на  разработку  всей  программы   и   стандартное</p>
<p>отклонение этой оценки составят соответственно:</p>
<p>      n</p>
<p>МО = Е Moi  ,</p>
<p>    I=1</p>
<p>        n</p>
<p>Q =    E Qi2</p>
<p>       I=1</p>
<p>      Оценка затрат времени на разработку программы приведена в табл. 9</p>
<p>          Таблица Затраты времени на разработку программы, чел.-дн.</p>
<p>|Компоненты              |ai  |mi |bi |MOi  |Qi  |MO   |Q   |</p>
<p>|Разработка требований   |13  |17 |21 |17,0 |1,3 |     |    |</p>
<p>|Составление алгоритма   |23  |24 |33 |25,3 |1,7 |89,9 |2,6 |</p>
<p>|Написание программы     |23  |30 |30 |28,8 |1,2 |     |    |</p>
<p>|Отладка                 |26  |29 |31 |28,8 |0,8 |     |    |</p>
<p>      Для составления перечня работ разобьем компоненты на составляющие</p>
<p>следующим образом:</p>
<p>      1) разработка требований: разработка требований к программному</p>
<p>обеспечению, разработка методических материалов;</p>
<p>      2) составление алгоритма: составление алгоритма;</p>
<p>      3) написание программы: написание основной программы, написание</p>
<p>процедур, создание базы данных;</p>
<p>      4) отладка: отладка основной программы, отладка модулей, общая</p>
<p>отладка.</p>
<p>      Оценку трудоемкости проводим в соответствии с данными табл. 9</p>
<p>Перечень работ и их трудоемкость приведены в табл. 10</p>
<p>                                                                  Таблица 10</p>
<p>                    Перечень работ по созданию обучающей</p>
<p>                                  Программы</p>
<p>|Компоненты    |Наименование  |Код работы    |Исполнитель   |Длительность  |</p>
<p>|              |работы        |              |              |работ, дн.    |</p>
<p>|Разработка    |Разработка    |1             |Инженер-програ|3             |</p>
<p>|требований    |требований к  |              |ммист 1       |              |</p>
<p>|              |программному  |              |категории     |              |</p>
<p>|              |обеспечению   |              |              |              |</p>
<p>|Разработка    |Разработка    |2             |Инженер-програ|14            |</p>
<p>|требований    |методических  |              |ммист 3       |              |</p>
<p>|              |материалов    |              |категории     |              |</p>
<p>                                                        Продолжение табл. 10</p>
<p>|Компоненты    |Наименование  |Код работы    |Исполнитель   |Длительность  |</p>
<p>|              |работы        |              |              |работ, дн.    |</p>
<p>|Составление   |Составление   |3             |Инженер-програ|15            |</p>
<p>|алгоритма     |алгоритма     |              |ммист 1       |              |</p>
<p>|              |              |              |категории     |              |</p>
<p>|              |              |              |Инженер-програ|10,3          |</p>
<p>|              |              |              |ммист 3       |              |</p>
<p>|              |              |              |категории     |              |</p>
<p>|Написание     |Написание     |4             |Инженер-програ|5             |</p>
<p>|программы     |основной      |              |ммист 1       |              |</p>
<p>|              |программы     |              |категории     |              |</p>
<p>|              |Написание     |5             |Инженер-програ|5             |</p>
<p>|              |подпрограмм   |              |ммист 3       |              |</p>
<p>|              |              |              |категории     |              |</p>
<p>|              |Создание базы |6             |Инженер-програ|18,8          |</p>
<p>|              |данных        |              |ммист 3       |              |</p>
<p>|              |              |              |категории     |              |</p>
<p>|Отладка       |Отладка       |7             |Инженер-програ|12,8          |</p>
<p>|              |основной      |              |ммист 1       |              |</p>
<p>|              |программы     |              |категории     |              |</p>
<p>|              |Отладка       |8             |Инженер-програ|13            |</p>
<p>|              |модулей       |              |ммист 3       |              |</p>
<p>|              |              |              |категории     |              |</p>
<p>|              |Общая отладка |9             |Инженер-програ|2             |</p>
<p>|              |              |              |ммист 3       |              |</p>
<p>|              |              |              |категории     |              |</p>
<p>      Как видно из  приведенной  выше  таблицы  для  работы  над  программой</p>
<p>привлекаются инженеры-программисты 1 и 3 категории.  Причем  с  учетом  всех</p>
<p>видов работ целесообразно привлечь одного инженера программиста 1  категории</p>
<p>и двух инженеров-программистов  3  категории.  В  этом  случае  часть  работ</p>
<p>возможно выполнять параллельно.</p>
<p>      Ленточный график отражает порядок распределения работ между</p>
<p>исполнителями во времени.</p>
<p>      Ленточный график возможно  построить  пользуясь  табл.  ,  распределив</p>
<p>работы между исполнителями  с  учетом  квалификации  и  загрузки.  Ленточный</p>
<p>график работы над созданием обучающей программы приведен в табл. 11</p>
<p>                                                                  Таблица 11</p>
<p>|Код     |Длительность работы, дн.                                           |</p>
<p>|работы  |3    7          17         26            38                        |</p>
<p>|1       |---                                                                |</p>
<p>|2       |-------                                                            |</p>
<p>|        |-------                                                            |</p>
<p>|3       |    --------------                                                 |</p>
<p>|        |--------                                                           |</p>
<p>|4       |                    ----                                           |</p>
<p>|5       |                   ----                                            |</p>
<p>|6       |         -----------------------                                   |</p>
<p>|7       |                             -----------------                     |</p>
<p>|8       |                            ------------------                     |</p>
<p>|9       |                                              --                   |</p>
<p>      8.2. Расчет сметы затрат</p>
<p>      К разработке обучающей программы привлечены три  инженера-программиста</p>
<p>разной   категории.   Специалистам   назначаются   месячные    оклады.    Из</p>
<p>составленного выше  ленточного  графика  видно,  что  инженер-программист  1</p>
<p>категории  имеет  загрузку  35  рабочих  дней,  один  инженер-программист  3</p>
<p>категории имеет 35 рабочих дней и второй инженер-программист 3  категории  -</p>
<p>28 рабочих дней. С учетом выходных и праздничных дней  в  среднем  в  месяце</p>
<p>приходится 20 рабочих дней.  Их  расчета  20  рабочих  дней  месяца  сделаем</p>
<p>расчет  фонда  заработной  платы.  Инженер-программист  1  категории   будет</p>
<p>работать 1 месяц 15 дней, первый инженер-программист 3 категории -  1  месяц</p>
<p>15  дней,  а  второй  инженер-программист  -  1  месяц  8   дней.    Каждому</p>
<p>специалисту  начисляется  основная  и  дополнительная  заработная  плата   в</p>
<p>соответствии с отработанным временем Расчет фонда заработной платы  приведен</p>
<p>в табл. 12</p>
<p>                                                                  Таблица 12</p>
<p>|Должность |Оклад |Дополнитель-на|Дополнитель-на|Количество  |Общий фонд   |</p>
<p>|          |Руб./м|я заработ-ная |я заработ-ная |рабочих дней|заработной   |</p>
<p>|          |ес.   |плата, %      |плата, %      |            |платы, руб.  |</p>
<p>|Инженер   |800   |15            |120           |35          |3 783 500    |</p>
<p>|програм-ми|      |              |              |            |             |</p>
<p>|ст 1      |      |              |              |            |             |</p>
<p>|категории |      |              |              |            |             |</p>
<p>|Инженер   |600   |15            |90            |35          |             |</p>
<p>|програм-ми|      |              |              |            |             |</p>
<p>|ст 3      |      |              |              |            |             |</p>
<p>|категории |      |              |              |            |             |</p>
<p>|Инженер   |600   |15            |90            |28          |             |</p>
<p>|програм-ми|      |              |              |            |             |</p>
<p>|ст 3      |      |              |              |            |             |</p>
<p>|категории |      |              |              |            |             |</p>
<p>      Предполагается работа на арендуемой  технике.  Стоимость  одного  часа</p>
<p>машинного времени 1000 руб.. Время  работы  над  программой  составляет   98</p>
<p>дней, что соответствует  764  часам  из  расчета  8-часового  рабочего  дня.</p>
<p>Арендная плата за это время составит 764 000 руб.. Отчисления на  социальное</p>
<p>страхование, расходы на научные и производственные командировки и  накладные</p>
<p>расходы составляют соответственно  14%,  5%,  60%  общего  фонда  заработной</p>
<p>платы. После изготовления программа должна пройти недельное  испытание.  Для</p>
<p>этого необхоимо использовать ЭВМ. Таким  образом  необходимо  дополнительное</p>
<p>машинное время в обьеме 40 часов. В смете затрат расходы на  арендную  плату</p>
<p>за 40 часов машинного времени внесем в статью  "Работы  и  услуги  сторонних</p>
<p>организаций".</p>
<p>Расчет сметы затрат приведен в табл. 13</p>
<p>                                                                  Таблица 13</p>
<p>                                Смета затрат</p>
<p>|Статья расхода       |Сумма, руб.  |Итоговая   |Сумма, %   |</p>
<p>|                     |             |сумма      |к итогу    |</p>
<p>|Специальное          |764 000      |7 476 465  |10,0       |</p>
<p>|оборудование для 764 |             |           |           |</p>
<p>|000 научных работ    |             |           |           |</p>
<p>|Общий фонд заработной|3 787 500    |           |50,2       |</p>
<p>|платы                |             |           |           |</p>
<p>|Отчисление на        |529 690      |           |7.0        |</p>
<p>|социальное           |             |           |           |</p>
<p>|страхование          |             |           |           |</p>
<p>|Расходы на научные   |189 175      |           |2,5        |</p>
<p>|производственные     |             |           |           |</p>
<p>|командировки         |             |           |           |</p>
<p>|Работы и услунни     |40 000       |           |0,3        |</p>
<p>|сторонних организаций|             |           |           |</p>
<p>|Накладные расходы    |2 270 100    |           |30,0       |</p>
<p>      9. ВОПРОСЫ ОХРАНЫ ТРУДА И ОКРУЖАЮЩЕЙ СРЕДЫ.</p>
<p>         БЕЗОПАСНОСТЬ И САНИТАРНО-ГИГИЕНИЧЕСКЙЕ УСЛОВИЯ  ТРУДА  НА  РАБОЧЕМ</p>
<p>         МЕСТЕ ПОЛЬЗОВАТЕЛЯ</p>
<p>      9.1. Основные санитарно-технические требований к помещению</p>
<p>      Охрана труда имеет очень важное значение. Несоблюдение правил  техники</p>
<p>безопасности приводит к неблагоприятным последствиям и  несчастным  случаям.</p>
<p>В этой части дипломной работы рассматриваются:</p>
<p>      1) основные санитарно-технические требования к вычислительному центру;</p>
<p>      2) характеристика санитарно-гигиенических условий труда пользователя;</p>
<p>      3) расчет необходимого воздухообмена;</p>
<p>      4) система освещения;</p>
<p>      5) инженерно-технические мероприятия по созданию благоприятных условий</p>
<p>труда пользователя;</p>
<p>      - защита от шума,</p>
<p>      - защита от излучения,</p>
<p>      - меры защиты от поражения электрическим током;</p>
<p>      6) противопожарные требования;</p>
<p>      7) организация рабочего места при работе с терминалом;</p>
<p>      8) приборы контроля параметров среды.</p>
<p>      Рассматриваемое помещение  является  вычислительный  центр.  Во  время</p>
<p>учебных занятий в нем находится группа пользователей из 10 человек.  Площадь</p>
<p>вычислительного  центра  составляет  30  кв.  м.  и  высотой   3,5   м.    К</p>
<p>вычислительному центру предъявляются следующие требования:</p>
<p>      1) размеры помещения (площадь, объем, высота)  должны  соответствовать</p>
<p>количеству  работающих  в  нём  человек  и  размещаемому  в  нем   комплексу</p>
<p>технических средств;</p>
<p>      2) рациональное цветовое оформление помещения;</p>
<p>      3) обеспечение изоляции от шумов,  принятие  мер  для  снижения  шума,</p>
<p>проникающего в помещение извне;</p>
<p>      4) соблюдение требований, предъявляемых к отделке помещения;</p>
<p>      5) обеспечение системы отопления и вентиляции;</p>
<p>      6)  соблюдение  норм  чистоты  воздуха,   температуры,   относительной</p>
<p>влажности;</p>
<p>      7) соблюдение норм освещенности;</p>
<p>      8) соблюдение защиты помещения от вхождения в него посторонних лиц;</p>
<p>      9.2. Характеристика санитарно-гигиенических условий труда</p>
<p>      9.2.1.Микроклимат производственного помещения</p>
<p>      Микроклимат  производственного  помещения  определяется  температурой,</p>
<p>относительной влажностью и скоростью движения воздуха.</p>
<p>      Согласно ГОСТ 12.1.005-76 "ССБТ.  Воздух  рабочей  зоны"  нормирование</p>
<p>параметров  микроклимата  в  рабочей  зоне  производится  в  зависимости  от</p>
<p>периода года, категории работ по энергозатратам, избытка  явного  тепла.  По</p>
<p>избыткам явной теплоты помещение учебной лаборатории относится к  помещениям</p>
<p>с незначительными избытками явной теплоты, приходящимися на 1  куб.м  объема</p>
<p>помещения,  23,2 Дж/(м*с). В данном помещении выполняются легкие  физические</p>
<p>работы, характеристика которых приведена в табл. 14.</p>
<p>      В табл. 15 приведены оптимальные  параметры  микроклимата,  допустимые</p>
<p>параметры для холодного и переходного периода года приведены в табл.  16,  а</p>
<p>для теплого периода года в табл. 17.</p>
<p>                                                                  Таблица 14</p>
<p>                   Характеристика легкой физической работы</p>
<p>|Работа            |Категория         |Энергозатраты     |Характеристика    |</p>
<p>|                  |                  |организма         |работы            |</p>
<p>|Легкая физическая |1                 |до 172 Дж/с (150  |Производимая сидя,|</p>
<p>|                  |                  |ккал/ч)           |стоя или связанная|</p>
<p>|                  |                  |                  |с ходьбой, но не  |</p>
<p>|                  |                  |                  |требующая         |</p>
<p>|                  |                  |                  |систематического  |</p>
<p>|                  |                  |                  |физического       |</p>
<p>|                  |                  |                  |напряжения или    |</p>
<p>|                  |                  |                  |поднятия тяжестей |</p>
<p>                                                                  Таблица 15</p>
<p>                     Оптимальные параметры микроклимата</p>
<p>|Период года              |Температура, |Относительная    |Скорость  |</p>
<p>|                         |С            |влажность, %     |движения  |</p>
<p>|                         |             |                 |воздуха,  |</p>
<p>|                         |             |                 |м/с       |</p>
<p>|Холодный и переходный    |20 - 23      |60 - 40          |не более  |</p>
<p>|(температура наружного   |             |                 |0,2       |</p>
<p>|воздуха ниже +10 град. С)|             |                 |          |</p>
<p>|Теплый (температура      |22 - 25      |60 - 40          |не более  |</p>
<p>|наружного воздуха +10 С и|             |                 |0,2       |</p>
<p>|выше)                    |             |                 |          |</p>
<p>                                                                  Таблица 16</p>
<p>              Допустимые параметры для холодного и переходного</p>
<p>                                периода года</p>
<p>|Температура       |Относительная     |Скорость движения |Температура       |</p>
<p>|возуха, С         |влажность, % не   |воздуха, м/с, не  |воздуха вне       |</p>
<p>|                  |более             |более             |постоян ных       |</p>
<p>|                  |                  |                  |рабочих мест С    |</p>
<p>|19 - 25           |75                |0,2               |15 - 26           |</p>
<p>                                                                  Таблица 17</p>
<p>                Допустимые параметры для теплого периода года</p>
<p>|Температура       |Относительная     |Скорость движения |Температура       |</p>
<p>|возуха, С         |влажность, % не   |воздуха, м/с, не  |воздуха вне       |</p>
<p>|                  |более             |более             |постоянных рабочих|</p>
<p>|                  |                  |                  |мест С            |</p>
<p>|Не более чем на 3 |При 28 С не более |0,2 - 0,5         |Не более чем на 3 |</p>
<p>|выше средней      |55, при 27 С не   |                  |выше средней      |</p>
<p>|температуры       |более 60, при 26 С|                  |температуры       |</p>
<p>|наружного воздуха ||не более 65, при |                  |наружного воздуха |</p>
<p>|в 13 ч            |25 С не более 70, |                  |в 13 ч самого     |</p>
<p>|                  |при 24 С и ниже не|                  |жаркого месяца    |</p>
<p>|                  |более 75          |                  |                  |</p>
<p>      9.2.2. Вредные вещества и пыль</p>
<p>      При  работе  пользователей  в   вычислительном   центре   профилактика</p>
<p>вычислительной техники не  проводится,  вредные  вещества  не  используются.</p>
<p>Однако,  в  помещении  присутствует  нетоксичная  пыль.  Максимально-разовая</p>
<p>предельно-допустимая  концентрация  нетоксичной  пыли,   скапливающейся   на</p>
<p>оборудовании составляет 0,5 мг/куб. м. , а среднесуточная - 0,15 мг/куб. м.</p>
<p>      9.2.3. Излучение</p>
<p>      В табл. 18  приведены нормированные значения излучения.</p>
<p>                                                                  Таблица 18</p>
<p>              Нормированные значения излучения на рабочем месте</p>
<p>|Наименования показателей     |Нормированные значения, не более      |</p>
<p>|Уровень неиспользованного    |100 мкР/ч                             |</p>
<p>|рентгеновского излучения на  |                                      |</p>
<p>|расстоянии 0,05 м            |                                      |</p>
<p>|Плотность потока             |10 Вт/кв. м.                          |</p>
<p>|ультрафиолетового излучения  |                                      |</p>
<p>|Напряженность электрического |15 кВ/м.                              |</p>
<p>|поля на рабочем месте        |                                      |</p>
<p>|15кВ/м                       |                                      |</p>
<p>      9.2.4. Освещенность</p>
<p>      Нормированное значение освещенности на рабочем месте по СНиП П-4-79</p>
<p>приведено в таблице 19.</p>
<p>                                                                  Таблица 19</p>
<p> Наименьшая освещенность рабочих поверхностей в производственных помещениях</p>
<p>                              /по СНиП П-4-79/</p>
<p>|Характеристи|Наименьший  |Освещенность Ен, лк                                |</p>
<p>|ка          |размер      |                                                   |</p>
<p>|зрительной  |объекта     |                                                   |</p>
<p>|работы      |различения, |                                                   |</p>
<p>|            |мм          |                                                   |</p>
<p>|            |            |газорязрядные            |Лампы накаливания        |</p>
<p>|            |            |Система освещения                                  |</p>
<p>|            |            |Комбинир.   |общая       |Комбинир.   |общая       |</p>
<p>|Высокой     |От 0,3 до   |750         |300         |600         |200         |</p>
<p>|точности    |0,5         |            |            |            |            |</p>
<p>      9.2.5. Шум</p>
<p>      Согласно ГОСТ 12.1.003-83 устанавливаются допустимые уровни звукового</p>
<p>давления. Они приведены в</p>
<p>                                                                  Таблица 20</p>
<p>                    Допустимые уровни звукового давления</p>
<p>|Рабочие           |Уровни звукового давления, дБ, в октавных    |Уровень   |</p>
<p>|Места             |полосах со среднегеометрическими частотами,  |звука, ДБА|</p>
<p>|                  |ГЦ                                           |          |</p>
<p>|                  |63 |125 |250 |500 |1000 |2000 |4000|8000  |          |</p>
<p>|Помещения вычис-  |71 |61  |54  |49  |45   |42   |40  |38    |50        |</p>
<p>|Лительных центров |   |    |    |    |     |     |    |      |          |</p>
<p>      9.3. Расчет необходимого воздухообмена</p>
<p>      Для нормализации  воздушной среды производится расчет воздухообмена  в</p>
<p>производственном помещении.</p>
<p>      Согласно СН 245-71 в производственных помещениях с объемом  на  одного</p>
<p>работающего менее 20 куб. м. следует проектировать подачу наружного  воздуха</p>
<p>в количестве не менее 30 куб.м./ч на каждого работающего.  Рассчитаем  объем</p>
<p>приточного воздуха L по кратности воздухообмена:</p>
<p>L = k * v, м/ч ,</p>
<p>где  k  -  рекомендуемая  кратность  воздухообмена,  которая   для   обычных</p>
<p>производственных  помещений  обычно  составляет  1  -  10  (в  расчетах   мы</p>
<p>принимаем ее равной 2),</p>
<p>v - объем помещения.</p>
<p>Таким образом,</p>
<p>L =2 * 160 = 320 куб.м/ч.</p>
<p>      Наилучший обмен воздуха осуществляется при сквозном проветривании,  но</p>
<p>кроме того, если позволяют погодные условия,  то  работу  следует  проводить</p>
<p>при открытых окнах.</p>
<p>      9.4.Система освещения</p>
<p>      Искусственное освещение по своему устройству бывает двух систем: общее</p>
<p>и комбинированное . При выборе системы освещения учитывают психологические,</p>
<p>физиологические, экономические и конструктивные факторы. Так как в</p>
<p>помещении выполняются работы высокой точности IIIв, то целесообразнее</p>
<p>использовать систему общего освещения. В нее включаются потолочные и</p>
<p>подвесные люминесцентные светильники общей освещенностью 400 лк.</p>
<p>Светильники распределяются равномерно рядами и параллельно источникам</p>
<p>прямого света, так чтобы экран монитора находился в зоне защитного угла</p>
<p>светильника, и его проекция не приходилась на экран монитора. Причем, для</p>
<p>таких светильников рекомендуется использовать люминесцентные лампы</p>
<p>мощностью по 40 Вт серий ЛП013, ЛП031, ЛПОЗЗ.</p>
<p>      Для улучшения освещенности важно правильно подобрать цветовую отделку</p>
<p>интерьера и оборудования. Обычно потолок и стены выше панелей 1.5 - 1.7 м,</p>
<p>если они не облицованы звукопоглощающим материалом, окрашиваются</p>
<p>водоэмульсионной краской светлых, холодных тонов.</p>
<p>      9.5. Инженерно - технические мероприятия благоприятных условий труда</p>
<p>      9.5.1. Защита от шума</p>
<p>      Источниками шума в данном помещении  являются  принтеры,  персональные</p>
<p>компьютеры и сами люди, работающие в  лаборатории.  Кроме  того,  шум  может</p>
<p>поступать извне, а т.к. в помещении  выполняются  работы  высокой  точности,</p>
<p>желательно, чтобы  оно  не  граничило  с  помещениями,  имеющими  повышенные</p>
<p>уровни воздушного и ударного шума.</p>
<p>      Для обеспечения изоляции помещения от шумов, проникающих  извне  можно</p>
<p>использовать  акустическую  обработку  помещения,  которая   заключается   в</p>
<p>облицовке потолка и стен звукопоглощающим материалом, причем для  достижения</p>
<p>максимально возможного звукопоглощения необходимо облицевать  не  менее  60%</p>
<p>общей площади внутренних поверхностей помещения.</p>
<p>      Для  сохранения  стабильности  звукопоглощающих  характеристик  такого</p>
<p>покрытия необходимо  периодически  осуществлять  различные  профилактические</p>
<p>мероприятия. Для уменьшения звука, поступающего извне  данное  помещение  не</p>
<p>должно граничить с помещениями,  имеющими  повышенные  уровни  воздушного  и</p>
<p>ударного шума,  а  также  располагаться  вблизи  таких  "шумных"  помещений.</p>
<p>Источники загазованности и вибрации в данном помещении отсутствуют.</p>
<p>      9.5.2.Защита от излучения</p>
<p>      Результаты спец исследований показали, что мониторы испускают слабые</p>
<p>рентгеновские лучи, но интенсивность такого излучения составляет менее</p>
<p>половины мили рентгена в час - намного меньше допустимого уровня. Но даже</p>
<p>от такого незначительного излучения можно защититься. В зависимости от</p>
<p>условий воздействия электромагнитных полей (ЭМП), характера и</p>
<p>местонахождения источника могут быть использованы следующие виды защиты :</p>
<p>      1) защита временем, использующаяся в случае невозможности снизить</p>
<p>интенсивность излучения в рабочей зоне;</p>
<p>      2) защита расстоянием, позволяющая существенно уменьшить степень</p>
<p>поражения излучением, так как интенсивность убывает пропорционально</p>
<p>квадрату расстояния;</p>
<p>      3) экранирование источника излучения или рабочего места. Оно должно</p>
<p>отвечать следующим требованиям :</p>
<p>      - уменьшать интенсивность излучения до предельных уровней;</p>
<p>      - обеспечивать удобства в работе;</p>
<p>      - обеспечивать безопасность работы в отношении механических и</p>
<p>электрических травм.</p>
<p>Применительно к рассматриваемому помещению чаще всего используются</p>
<p>следующие два способа защиты:</p>
<p>      1) ввиду того, что незначительная утечка излучения из кинескопа</p>
<p>обнаруживается только в пределах нескольких миллиметров от поверхности</p>
<p>экрана и по мере удаления доза уменьшается, то можно применять защиту</p>
<p>расстоянием. Нормальным расстоянием, на котором излучение не регистрируется</p>
<p>даже чувствительной измеризмерительной аппаратурой является расстояние  0.3</p>
<p>- 0.4 метра;</p>
<p>      2) можно использовать защитный экран или сетку.</p>
<p>      9.5.3.  Меры защиты от поражения электрическим током</p>
<p>      Статистика показывает, что число травм, вызванных электрическим током,</p>
<p>составляет 11-12% от их общего числа. Но из всех случаев со смертельным</p>
<p>исходом наибольшее количество происходит в результате поражения</p>
<p>электрическим током. Причем до 80% всех случаев электротравматизма со</p>
<p>смертельным исходом приходится на электрооборудование напряжением до 1000</p>
<p>Вив первую очередь 220...380 В.</p>
<p>      Электрооборудование в основном относится к установкам напряжением до</p>
<p>1000 В, исключения составляют лишь экранные пульты, дисплеи, электронно-</p>
<p>лучевые трубки, которые имеют напряжение в несколько киловольт.</p>
<p>      Организационные мероприятия, обеспечивающие безопасность работ,</p>
<p>заключаются в следующем: соблюдение режима работы и отдыха, правильная</p>
<p>организация обслуживания действующих электроустановок ВЦ, проведение</p>
<p>ремонтных и профилактических работ.</p>
<p>      По опасности поражения электрическим током  рассматриваемое  помещение</p>
<p>относится к помещениям без повышенной опасности.</p>
<p>                                                                  Таблица 21</p>
<p>       Классификация помещения по степени опасности поражения человека</p>
<p>                             электрическим током</p>
<p>|Класс помещения                       |Характеристика помещения              |</p>
<p>|Без повышенной опасности              |Сухое, не жаркое, с токонепроводящим  |</p>
<p>|                                      |полом, без токопроводящей пыли,       |</p>
<p>|                                      |отсутствует возможность одновременного|</p>
<p>|                                      |прикосновения человека к имеющим      |</p>
<p>|                                      |соединение  с землей                  |</p>
<p>|                                      |металлоконструкциями зданий,          |</p>
<p>|                                      |технологическим аппаратам, механизмам |</p>
<p>|                                      |и т.п. с одной стороны,  и к          |</p>
<p>|                                      |металлическим корпусам                |</p>
<p>|                                      |электрооборудования,  которые при     |</p>
<p>|                                      |пробое изоляции могут оказаться под   |</p>
<p>|                                      |напряжением, - с другой стороны       |</p>
<p>      К техническим  мероприятиям,  обеспечивающим   безопасность  работ  со</p>
<p>снятием напряжения относятся:</p>
<p>      - отключение оборудования на участке, принятие мер  против  ошибочного</p>
<p>или самопроизвольного включения, ограждение при необходимости  рабочих  мест</p>
<p>и оставшихся под напряжением токоведущих частей;</p>
<p>      - проверка отсутствия напряжения;</p>
<p>      - установка заземления.</p>
<p>      Применение только одних организационных и технических  мероприятий  по</p>
<p>предупреждению  поражения  электрическим  током  не  может  в  полной   мере</p>
<p>обеспечить необходимую электробезопасность при эксплуатации. Наряду  с  ними</p>
<p>в  вычислительных  центрах  используют  защитное   заземление.   Нормативное</p>
<p>значение сопротивления заземления приведено в табл. 22</p>
<p>                                                                  Таблица 22</p>
<p>               Нормативное, значение сопротивления заземления</p>
<p>|Напряжение сети  |Режим нейтрали    |Назначение   |Сопротивление   |</p>
<p>|                 |                  |заземления   |заземления, Ом  |</p>
<p>|До 1000 В        |Изолированная     |Защитное     |Rз =< 10        |</p>
<p>|Выше 1000 В      |Изолированная     |Защитное     |Rз =< 0,5       |</p>
<p>      Сопротивление изоляции электрических цепей  ЭВМ  общего  назначения  в</p>
<p>нормальных климатических условиях должно быть не менее значений указанных  в</p>
<p>табл. 23</p>
<p>                                                                  Таблица 23</p>
<p>|Напряжение цепи, кВ   |Сопротивление изоляции, МОм      |</p>
<p>|до од 0,1             |5,0                              |</p>
<p>|0,1 - 0,5             |20,0                             |</p>
<p>|0,5 - 1,0             |100                              |</p>
<p>      9.6. Противопожарные требования</p>
<p>      К    помещению,   в   котором   располагается   вычислительный   центр</p>
<p>предъявляются требования:</p>
<p>      1) здание, в котором  предусмотрено  размещение  ЭВМ,  должно  быть  1</p>
<p>степени огнестойкости;</p>
<p>      2)  все  виды  кабельных  коммуникаций   должны   быть   проложены   в</p>
<p>металлических газовых трубах;</p>
<p>      3) подпольные пространства под съемными полами должны  быть  разделены</p>
<p>несгораемыми перегородками;</p>
<p>      4) силовые кабельные линии должны быть надежно изолированы;</p>
<p>      5) в наличии должны быть первичные огнетушительные средства;</p>
<p>По пожароопасности зоны данное  помещение  относится  к  классу  П-IIa.  Для</p>
<p>ликвидации пожаров помещение  вычислительного  центра  площадью  40  кв.  м.</p>
<p>должно располагать одним углекислотным огнетушителем типа ОУ-2,  ОУ-5,   или</p>
<p>ОУ-8.</p>
<p>Для  своевременного  обнаружения,  оповещения   и   принятия   мер   быстрой</p>
<p>ликвидации  пожара  в  помещении  необходима  установка   дымовых   пожарных</p>
<p>извещателя. При установке извещателя на высоте 4 м и  площади  помещения  40</p>
<p>кв. м. достаточно одного дымового извещателя.</p>
<p>9.7. Организация рабочего места пользователя при работе с терминалом</p>
<p>1) При организации  рабочего  места  с  терминалом  на  одного  пользователя</p>
<p>необходимо выделять не меньше б кв. метров. Высота юмещения должна  быть  не</p>
<p>меньше 4 метров.</p>
<p>      2)   Помещение   обязательно   должно   оборудоваться   огнетушителем,</p>
<p>сигнализацией и телефоном (и городским и местным).</p>
<p>      3) Помещение должно быть оборудовано одноместными  столами  и  мягкими</p>
<p>стульями с меняющимися по высоте сиденьями и спинками  стула.  Столы  должны</p>
<p>иметь длину  не  менее  0.7  метра  и  ширину,  обеспечивающую  место  перед</p>
<p>клавиатурой 0.3 метра.</p>
<p>      4) Разрешающая способность человеческого глаза составляет примерно 0.3</p>
<p>мм на расстоянии  500  мм.  Благоприятная  для  обозрения  площадь  лежит  в</p>
<p>пределах  500-700  мм.  Для  зрительного  распознавания   алфавитно-цифровых</p>
<p>знаков необходим растр размером 5-7 точек, поэтому  ширина  и  высота  линий</p>
<p>изображения этих знаков должна быть не менее 1.5 мм при удалении  500  мм  и</p>
<p>2.9 мм при  удалении  700  мм  от  работающего.  Угол  обзора  по  вертикали</p>
<p>составляет 15. В положении сидя  этот  угол  не  превышает  15  относительно</p>
<p>горизонтали. Оптимальное расстояние от глаз до экрана монитора  0.6-0.7  м.,</p>
<p>допустимое не менее 0.5 метра. Рассматривать информацию на экране ближе  0.5</p>
<p>метра не рекомендуется.</p>
<p>      5) Требуемая и допустимая контрастность элементов рабочего места снизу</p>
<p>ограничена возможностью распознавания, а сверху допускаемой освещенностью,</p>
<p>исключающей ослепление работающего. В поле зрения работающего контрастность</p>
<p>должна быть в пределах от 8:1 до 15:1. При этом исключается наличие</p>
<p>глянцевых поверхностей, создающих блики и отражающий свет. Уменьшению</p>
<p>усталости и повышению удобства обслуживания способствует определенное</p>
<p>размещение коммуникаций работающего с машиной.</p>
<p>      9.8.Приборы контроля параметров среды</p>
<p>      Метрологическое обеспечение  осуществляется на  основе положений ГОСТ</p>
<p>12.0.005-84  "Метрологическое обеспечение в области безопасности труда.</p>
<p>Основные положения"  /М., 1984/, системы стандартов безопасности труда,</p>
<p>санитарных  норм и правил Минздрава СССР и др.</p>
<p>      Приборы для контроля опасных и вредных производственных факторов</p>
<p>представлены в</p>
<p>                                                                  Таблица 24</p>
<p>                              Приборы контроля</p>
<p>|Измеряемая    |Рабочие средства измерений                    |Погрешность   |</p>
<p>|величина      |                                              |              |</p>
<p>|единица       |                                              |              |</p>
<p>|измерений     |                                              |              |</p>
<p>|              |тип           |диапазон                      |              |</p>
<p>|              |              |частотный     |динамический  |              |</p>
<p>|1.            |Аспирационный |-             |-31 . . .     |+0,1 С        |</p>
<p>|Температура, С|психометр     |              |51 С          |              |</p>
<p>|и             |MB-4M         |              |              |              |</p>
<p>|относительная |              |-             |10 . . .      |+5%           |</p>
<p>|влажность     |              |              |100 %         |              |</p>
<p>|воздуха, %    |              |              |              |              |</p>
<p>|2. Скорость   |Термометр,    |              |0,1 . . .     |+2,1          |</p>
<p>|движения      |электроанемоме|-             |5 м/с         |м/с           |</p>
<p>|воздуха, м/с  |тр TAM-1      |              |              |              |</p>
<p>|3. Уровень    |вшв-ооз       |10 . . .      |25 . . .      |+1 дБ         |</p>
<p>|звукового     |              |20000 Гц      |140 дБ        |              |</p>
<p>|давления в    |              |              |              |              |</p>
<p>|октавных      |              |              |              |              |</p>
<p>|полосах       |              |              |              |              |</p>
<p>|частот, дБ    |              |              |              |              |</p>
<p>|4.            |Люксметр Ю-116|0,38. . .     |5 . . .       |+10 %         |</p>
<p>|Освещенность, |мкм           |0,72 мкм      |100000 лк     |              |</p>
<p>|лк.           |              |              |              |              |</p>
<p>|5. Массовая   |Радиоизотопный|-             |0,1 . . .     |+20 %         |</p>
<p>|концентрация  |пылемер       |              |100 иг/м      |              |</p>
<p>|пыли, мг/куб.м|ПРИЗ-2        |              |              |              |</p>
<IDXSKIP><p>                                 ЗАКЛЮЧЕНИЕ</p></IDXSKIP>
<p>      В результате разработки данной дипломной работы написана программа для</p>
<p>обучения работе в графическом режиме. Программа предназначена для  студентов</p>
<p>младших     курсов     Санкт-Петербургской     государственной      академии</p>
<p>аэрокосмического приборостроения и знакомит  их  с  графическими  средствами</p>
<p>языка Turbo-Pascal 6.0/7.0.</p>
<p>      Программа содержит семь разделов для изучения:</p>
<p>      1) Программирование графических режимов.</p>
<p>      2) Управление курсором и полем рисования.</p>
<p>      3) Формирование прямолинейных монохромных изображений.</p>
<p>      4) Управление цветом и стилем изображений.</p>
<p>      5) Программирование цветных криволинейных изображений.</p>
<p>      6) Формирование графических текстов.</p>
<p>      7) Программирование озвученных динамических сцен.</p>
<p>      Программа позволяет индивидуально, в удобном  для  каждого  обучаемого</p>
<p>темпе ,  изучать  работу  с  компьютером  в  графическом  режиме.  Изучаемый</p>
<p>материал  представлен   в   программе   наглядно,   теоретический   материал</p>
<p>сопровожден необходимыми  иллюстрациями,  что  делает  его  более  понятным.</p>
<p>Предусмотрена  возможность  повторного  изучения   материала.   В   процессе</p>
<p>обучения производится  контроль  приобретенных  знаний  в  виде  Контрольных</p>
<p>вопросов. При ответах на контрольные вопросы студенту  выставляются  оценки,</p>
<p>которые регистрируются и могут быть выведены на экран в любой момент  работы</p>
<p>с программой. Имеется возможность разъяснения студенту его ошибок  в  случае</p>
<p>наличия  таковых.  После  ответа  на  каждый  вопрос  на   экран   выводится</p>
<p>комментарий, содержащий оценку в форме "правильно/неправильно"  и  в  случае</p>
<p>неверного ответа пояснения сущности ошибки. Продолжительность сеанса  работы</p>
<p>программы составляет 45 минут.</p>
<p>      Программа  написана  на  языке  Turbo-Pascal   7.0   и   требует   для</p>
<p>использования наличия персонального компьютера типа IBM, монитора  типа  EGA</p>
<p>с графическим выводом 640x350 пиксел, 16 регистрами палитры.</p>
<p>      Разработанная   программа    полностью    соответствует    требованиям</p>
<p>Технического задания.</p>
<p>                      СПИСОК ИСПОЛЬЗОВАННЫХ ИСТОЧНИКОВ</p>
<p>      1. Брусенцов Н.П., Маслов С.П., Х.Рамиль Альварес Микрокомпьютерная</p>
<p>система обучения "Наставник". М.: Наука , 1990.  223 с.</p>
<p>      2. Демушкин А7С7, КирилловА.И., Сливин Н.А., Чубров Е.В., Кривошеев</p>
<p>А.О., Фомин С.С. Компьютерные обучающие программы // Информатика и</p>
<p>образование, 1995. N 3.</p>
<p>      3. Казаков В.Г., Дорошквин А.А., Задорожный П.М., Князев Б.А.</p>
<p>Лекционная мультимедиа аудитория  // Информатика и образование, 1995. N4.</p>
<p>      4. Фаронов В.В. турбо паскаль: в 3 т. М.: Учебно-инженерный центр</p>
<p>"МВТУ-ФЕСТО ДИДАКТИК", 1992.Т.1: Основы турбо Паскаля. 286 с.</p>
<p>      5. Епанешников A.M., Епанешников В.А. Программирование в среде TURBO-</p>
<p>PASCAL 7.O.M.: "ДИАЛОГ-МИФИ", 1995. 282 С.</p>
<p>      6. Петров В.И. Графические средства алгоритмического языка TURBO-</p>
<p>PASCAL : Методические указания к выполнению лабораторных работ  N 1,2 /</p>
<p>ЛИАП.СПб., 1992. 33 с.</p>
<p>      7. Петров В.И. Графические средства алгоритмического языка TURBO-</p>
<p>PASCAL : Методические указания к выполнению лабораторных работ  N 3,4,5 /</p>
<p>ЛИАП.СПб., 1992. 43 с.</p>
<p>      8. Технико-экономическое обоснование исследовательских и инженерных</p>
<p>решений в дипломных проектах и работах: учебное пособие / под редакцией</p>
<p>Минько Э.В., Покровского А.В. /Свердловск Уральский университет, 1990. 144</p>
<p>с.</p>
<p>      9. Евдокимов В.И. Охрана труда и окружающей среды: Методические</p>
<p>указания по дипломному проектированию / ЛИАП.Л., 1989. 34 с.</p>
<p>      10. Евдокимов В.И., Козаченко В.И., Нейман Л.А., Румянцев В.В.  Охрана</p>
<p>труда в приборо- и радиоаппаратостроении: Учебное пособие  /  СПГУАП.  СПб.,</p>
<p>1993. 81 с.</p>
<p>                                                                 ПРИЛОЖЕИЕ 1</p>
<p>                               Текст программы</p>
<p>program GRAPHIC;  {главная программа "Графика"}</p>
<p>uses Crt, Graph, Dos, Strings, MYBOOK, RAZDEL1, RAZDEL2, RAZDEL3,</p>
<p>      RAZDEL4 , RAZDEL5 , RAZDEL6 , RAZDEL7 ;</p>
<p>Type Dlina=string[6Q];</p>
<p>var  Gd,Gm: integer;</p>
<p>      Regime: byte;</p>
<p>      NOMER3 , NOMER4 , NOMER5 , NOMER6 , NOMER7 : integer ;</p>
<p>      Ball3 :array[l. .2} of integer; {переменные вывода результатов} ball4</p>
<p>      :array[l. .2] of integer; { работы по разделам}</p>
<p>      ball5 :array[l. .2] of Integer;</p>
<p>      ball6 :array[l. .2] of integer; ball7:array[l. .2] of integer; Itog</p>
<p>      :array[l, .2] of integer; {переменная накопления</p>
<p>                                          результатов работы за сеанс}</p>
<p>      tog:array[l. .2] of integer; {переменная вывода результатов</p>
<p>                                       работы за сеанс}</p>
<p>      К:аггау[1. .2] of integer; {переменная контролирующая число</p>
<p>                                     обращений к процедурам рабочих модулей</p>
<p>                                     }</p>
<p>      Dh: Char; {переменная для принятия символа с клавиатуры}</p>
<p>procedure Windol;         {введение }</p>
<p>Type Ann=record</p>
<p>     PPl:char;</p>
<p>     РР2:array [0. .69] of char;</p>
<p>end;</p>
<p>var FF:file of Ann;</p>
<p>    A: Ann;</p>
<p>    St :string[68];</p>
<p>label 1;</p>
<p>begin</p>
<p>Assign (FF, 'VEDEN. pas' );  {связь с файлом текста введения}</p>
<p>{SI-}</p>
<p>Reset(FF);</p>
<p>{SI + }</p>
<p>IF lOResulto 0 then Writeln ('Heт файла VEDEN1);</p>
<p>ClearDevice;</p>
<p>OKNO;   {процедура оформления экрана}</p>
<p>For N:=0 to 31 do  {цикл вывода текста введения }</p>
<p> begin</p>
<p>  Read(FF,A);</p>
<p>  St:=StrPas(A.PP2);</p>
<p>   case A.PP1 of  {проверка наличия иллюстрации и их вывод}</p>
<p>   ‘ ‘: OutTextXY( 20 , 10*N+10 , St ) ;</p>
<p>   ‘0‘ : GoTo 1 ;</p>
<p> end;</p>
<p>end;</p>
<p>1:readkey;</p>
<p>Close(FF);</p>
<p>end;</p>
<p>procedure Cursor(Flag:boolean); {Если Flag=True, то курсор видим;}</p>
<p>                                  { если Flag=False,TO невидим}</p>
<p>const sizeCursor:word=0;</p>
<p>var  Red:registers;</p>
<p>begin</p>
<p> with Red do</p>
<p>  begin</p>
<p>   if Flag then</p>
<p>    begin</p>
<p>     CX:=SizeCursor; {Восстановим старый размер курсора}</p>
<p>    end</p>
<p>  else</p>
<p>   begin</p>
<p>    BH:=0;        {0-я страница дисплея}</p>
<p>    АН:=03;       {функция чтения размера и позиции курсора}</p>
<p>    Intr($10,Red);</p>
<p>    SizeCursor:=CX;{сохраняем размер курсора}</p>
<p>    СН:=$20;      {делаем курсор невидимым}</p>
<p>   end;</p>
<p>  АН:=01; {функция установки размера курсора}</p>
<p>  Intr($10,Red);</p>
<p> end;</p>
<p>end;</p>
<p>procedure SVETFON(C,F:byte); {установка цвета и фона}</p>
<p>begin</p>
<p> TextColor(C);</p>
<p> TextBackground(F)</p>
<p>end;</p>
<p>procedure VERTIKALNOE_MENU(Kl,K2,Kp:byte;SS1,SS2,SS3,SS4,SS5,SS6,</p>
<p>                             SS7,SS8,SS9:dlina;Var Result:byte);</p>
<p>{процедура создания окна меню}</p>
<p>Label Met;</p>
<p>Const Kr=9;</p>
<p>Var M:array[l..Kr] of string[60];</p>
<p>    I,T:byte;</p>
<p>    Ch:char;</p>
<p>    Fl:boolean;</p>
<p>begin</p>
<p> Cursor(False);</p>
<p> Fl:=True;</p>
<p> M[1]:=SS1;M[2]:=SS2;M[3]:=SS3;M[4]:=SS4;M[5]:=SS5;M[6]:=SS6;</p>
<p> M[7]:=SS7;M[8]:=SS8;M[9]:=SS9;</p>
<p> T:=Length(M[I]);</p>
<p>for I:=2 to Kp do</p>
<p> if Length(M{I])>T then T:=Length(M[I]);</p>
<p> for l:=l to Kp do</p>
<p>  begin</p>
<p>   if 1=1 then SVETFON(1,13)</p>
<p>else SVETFON(13,1);</p>
<p>GoToXY(Kl,K2+i);</p>
<p>    write(M[I]);</p>
<p>end;</p>
<p>SVETFON(13,1);</p>
<p>I:=l;</p>
<p>while Fl=True do begin</p>
<p>  Ch:=ReadKey;</p>
<p>   if Ch=#13 then Fl:=False;</p>
<p>   if(Ch=#0) and KeyPressed then</p>
<p>   begin</p>
<p>    Ch:=ReadKey;</p>
<p>    case Ch of</p>
<p>    #80: begin</p>
<p>           GoToXY(Kl,K2+i);</p>
<p>             SVETFON(13,1);</p>
<p>             write(M[I]);</p>
<p>             if i=(Kp+l) then</p>
<p>             begin</p>
<p>              I:=l;</p>
<p>              SVETFON(3,l);</p>
<p>              GoToXY(Kl,K2+l);</p>
<p>              SVETFON(1, 13);</p>
<p>              write(M[I]);</p>
<p>              SVETFON(13,1);</p>
<p>              goto Met;</p>
<p>             end;</p>
<p>             GoToXY(Kl,K2+I);</p>
<p>             SVETFON(1,13);</p>
<p>             write(M[I]);</p>
<p>             SVETFON(13,1);</p>
<p>           end;</p>
<p>    #72: begin</p>
<p>            if 1=1 then goto Met;</p>
<p>            GoToXY(Kl,K2+I);</p>
<p>            SVETFON(1371);</p>
<p>            write(M[I]);</p>
<p>            i:=I-1;</p>
<p>            GoToXY(Kl,K2+I);</p>
<p>            SVETFON(1,13);</p>
<p>            write(M[I])</p>
<p>           end</p>
<p>    end;</p>
<p>Met:</p>
<p>   end ;</p>
<p>  end;</p>
<p>  Result :=I;</p>
<p>  SVETFON(13,1);</p>
<p>  Cursor(True) ;</p>
<p>end;</p>
<p>begin {Начало основной программы}</p>
<p> GraphRegim;</p>
<p> SetBKColor(l);</p>
<p> SetTextStyle(0,0,5);</p>
<p> SetColor(12);</p>
<p> OutTextXY(40,50, 'Т Р А Ф И К А');</p>
<p> SetTextStyle(0,0,1);</p>
<p> SetColor(15);</p>
<p> OutTextXY(100,225,'Программа для обучения работе в графическом</p>
<p>                       режиме’);</p>
<p> OutTextXY(170,245,'Разработал Черноткач Р. И.');</p>
<p> OutTextXY(232,285,'СПГУАП');</p>
<p> OutTextXY{240,305,'2002’);</p>
<p> readkey;</p>
<p> SetTextStyle(0,0,l);</p>
<p> Windo1;</p>
<p> CloseGraph;</p>
<p> NOMER3:=0;     {переменные, контролирующие доступ к разделам}</p>
<p> NOMER4:=0;     {{ не более двух раз) за сеанс}</p>
<p> NOMER5:=0;</p>
<p> NOMER6:=0;</p>
<p> NOMER7:=0;</p>
<p> К[1]:=0;</p>
<p> К[2]:=0;</p>
<p> while True do begin</p>
<p>      TextBackground(3);</p>
<p>      ClrScr;</p>
<p>      Cursor(False);</p>
<p>      GoToXY(15,5);</p>
<p>      TextColor(l);</p>
<p>      write('Какой раздел Вы хотели бы изучить?');</p>
<p>      GoToXY(10,10);</p>
<p>      VERTIKALNOE_MENU(10,10,9,</p>
<p>      '  Программирование графических режимов</p>
<p>      '  Управление курсором и полем рисования</p>
<p>      '  Формирование прямоллинейньгх монохромных изображений</p>
<p>      '  Управление  цветим и стилем изображений</p>
<p>      '  Программирование цветных криволинейных изображений</p>
<p>      '  Формирование графических текстов</p>
<p>      '  Программирование озвученных динамических сцен</p>
<p>      ' Результаты Вашей работы</p>
<p>      '  Конец работы</p>
<p>      Regime);</p>
<p>      case Regime of</p>
<p>        1:RAZDEL10;</p>
<p>        2:RAZDEL20;</p>
<p>        3:begin</p>
<p>           NOMER3:=NOMER3+1;</p>
<p>           If NOMER30 then</p>
<p>         tog[l3:=Round(Itog[l]/K[1);</p>
<p>         If K[2]<>0 then</p>
<p>         tog[2]:=Round(Itog[2]/K[2]);</p>
<p>        TextBackground(1);</p>
<p>        ClrScr;</p>
<p>       TextColor(12);</p>
<p>       writeln;</p>
<p>       Write('РЕЗУЛЬТАТЫ  ВАШЕЙ  РАБОТЫ’);</p>
<p>        writeln;</p>
<p>        writeln('l попытка       2 попытка':80);</p>
<p>        writeln;</p>
<p>        wtiteln('ФОРМИРОВАНИЕ ПРЯМОЛИНЕЙНЫХ МОНОХРОМНЫХ</p>
<p>                 ИЗОБРАЖЕНИЙ');</p>
<p>        writeln;</p>
<p>        writeln('  УПРАВЛЕНИЕ ЦВЕТОМ И СТИЛЕМ ИЗОБРАЖЕНИЙ1);</p>
<p>        writeln;</p>
<p>        writeln('ПРОГРАММИРОВАНИЕ ЦВЕТНЫХ КРИВОЛИНЕЙНЫХ</p>
<p>       ИЗОБРАЖЕНИЙ');</p>
<p>       writeln;</p>
<p>       writeln('  ФОРМИРОВАНИЕ ГРАФИЧЕСКИХ ТЕКСТОВ');</p>
<p>       writeln;</p>
<p>       writeln('  ПРОГРАММИРОВАНИЕ ОЗВУЧЕННЫХ ДИНАМИЧЕСКИХ СЦЕН');</p>
<p>       writeln;</p>
<p>       writeln;</p>
<p>       writeln('  ОЦЕНКА РАБОТЫ ЗА СЕАНС');</p>
<p>       GotoXY(64,6);  writeln(ball3[1]);</p>
<p>       GoToXY(75,6);  writeln(ball3[2]);</p>
<p>       GoToXY(64,8);  writeln(ball4[l]);</p>
<p>       GoToXY(75,8);  writeln(ball4[2]);</p>
<p>       GoToXY(64,10); writeln(ball5[l]);</p>
<p>       GoToXY(75,10); writeln(ball5[2]);</p>
<p>       GoToXY(64,12); writeln(ball6[l]);</p>
<p>       GoToXY(75,12); writeln(bal16[2]);</p>
<p>       GoToXY(64,14); writeln(bal17[l]);</p>
<p>       GoToXY(75,14); writeln(ball7[23)</p>
<p>       GoToXY(64,18); writeln(tog[l]);</p>
<p>       GoToXY(75,18); writeln(tog[2]);</p>
<p>       readkey;</p>
<p>      end;</p>
<p>      9:begin</p>
<p>         GraphRegim;</p>
<p>         OKNO;</p>
<p>         SetTextStyle{0,0,4);</p>
<p>         SetColor(4);</p>
<p>             OutTextXY(150,80,'Bы хотите');</p>
<p>         OutTextXY(60,120,'закончить работу')</p>
<p>         OutTextXY(100,160,'с программой?');</p>
<p>         OutTextXY(230,280,'Y/N');</p>
<p>         Dh:=ReadKey;</p>
<p>           If (Dh='y') or (Dh='н') then</p>
<p>           begin</p>
<p>            Cursor(True);</p>
<p>            ClrScr;</p>
<p>            Halt</p>
<p>           end</p>
<p>           else</p>
<p>            CloseGraph;</p>
<p>        end;</p>
<p>     end;</p>
<p>  end;</p>
<p>  CloseGraph;</p>
<p>end.</p>
<p>{$A+, B-, D+, E+, F-, G-, I+,L+,N-,O-,P-,Q-,R-,S+,T-,V+,X+}</p>
<p>{$M 16384,0,655360}</p>
<p>Unit RAZDEL1;</p>
<p>interface</p>
<p>uses Crt, Graph, Dos, Strings, MYBOOK;</p>
<p>type An=record</p>
<p>       P1:Char;</p>
<p>       P2:array[0..69] of Char;</p>
<p>      end;</p>
<p>var Fl:file of An ;</p>
<p>    A: An;</p>
<p>    Gd,Gm,Y,N:integer;</p>
<p>    St:string[68];</p>
<p>procedure RAZDEL10; {Обеспечение работы с разделом "Программиро вание</p>
<p>графических режимов"}</p>
<p>implementation</p>
<p>procedure RAZDEL10;</p>
<p>Label 1;</p>
<p>begin</p>
<p>  GraphRegim;</p>
<p>  Assign(Fl,'RAZTEX1.pas');</p>
<p>  {SI-}</p>
<p>    Reset (Fl);</p>
<p>  {SI+}</p>
<p>  If lOResult <>0 then Writeln ('Нет файла RAZTEX1.pas');</p>
<p>  Repeat;</p>
<p>  ClearDevice;</p>
<p>  OKNO;</p>
<p>  Y:=10;</p>
<p>  For N:=0 to 31 do</p>
<p>  begin</p>
<p>   Read(Fl,A); St:=StrPas(A.P2);</p>
<p>   case A.P1 of</p>
<p>   ' ':OutTextXY(20,Y*N+10,St);</p>
<p>   '*':begin</p>
<p>        SetColor{4);</p>
<p>         OutTextXY(20,Y*N+10,St);</p>
<p>         SetColor(l);</p>
<p>        end;</p>
<p>   '0':GoTo 1;</p>
<p>  end;</p>
<p>end;</p>
<p>1: readkey;</p>
<p>   until A.P1='O';</p>
<p>   Close(Fl);</p>
<p>   CloseGraph;</p>
<p>   end;</p>
<p>begin</p>
<p>end.</p>
<p>  {$A+,B-,D+,E+,F-,G-,I+,L+,N-,O-,P-,Q-,R-,S+,T-,V+,X+}</p>
<p>  {$M 16384,0,655360}</p>
<p>  Unit RAZDEL2;</p>
<p>  interface</p>
<p>  uses Crt,Graph,Dos,Strings,MYBOOK;</p>
<p>    type An=record</p>
<p>       P1:Char;</p>
<p>       P2:array[0..69] of Char;</p>
<p>  end;</p>
<p>    var F2:file of An ;</p>
<p>      A: An;</p>
<p>      Gd,Gm,X,Y,N:integer;</p>
<p>      St:string[68];</p>
<p>  procedure RAZDEL20; {Обеспечение работы с разделом "Управление</p>
<p>                       курсором и полем рисования"}</p>
<p>  implementation</p>
<p>    procedure RAZDEL20;</p>
<p>    Label 1;</p>
<p>    begin</p>
<p>   GraphRegim;</p>
<p>   Assign(F2,'RAZTEX2.pas');</p>
<p>   {SI-}</p>
<p>   Reset(F2);</p>
<p>   {SI+}</p>
<p>   If IOResult <> 0 then Writeln ('Нет файла RAZTEX2.pas');</p>
<p>   repeat</p>
<p>   ClearDevice;</p>
<p>   OKNO;</p>
<p>   Y:=10;</p>
<p>   For N:=0 to 31 do</p>
<p>   begin</p>
<p>    Read(F2,A);</p>
<p>    St:=StrPas(A.P2);</p>
<p>    case A.P1 of</p>
<p>    ' ':OutTextXY(20,Y*N+10,St);</p>
<p>    '*':begin</p>
<p>         SetColor(4);</p>
<p>         OutTextXY(20,Y*N+10,St);</p>
<p>         SetColor(1);</p>
<p>        end;</p>
<p>    '0':GoTo 1;</p>
<p>    end;</p>
<p>   end;</p>
<p>1: readkey;</p>
<p>   until A.P1='0';</p>
<p>   Close(F2);</p>
<p>   CloseGraph;</p>
<p>  end;</p>
<p> begin</p>
<p> end.</p>
<p>Unit RAZDEL3;</p>
<p>  interface</p>
<p>  uses Crt,Graph,Dos,Strings,MYBOOK;</p>
<p>  type An=record {Теоретическая часть }</p>
<p>        P1:Char; {переменная поля флагов: конец файла, номер</p>
<p>                  иллюстрации, строка, выделяемая цветом}</p>
<p>        P2:array[0..69] of Char;  {переменная поля текста}</p>
<p>  end;</p>
<p>  type Ant=record {Текст вопросов}</p>
<p>        P1:Char;  {переменная поля флагов: конец файла, конец</p>
<p>                   вопроса, номер иллюстрации}</p>
<p>        P2:array[0..1] of Char; {переменная  номера вопроса}</p>
<p>        P3:array[0..69] of Char; {переменная поля текста}</p>
<p>  end;</p>
<p>  type Antr=record { Справки }</p>
<p>        P1:Char; {переменная поля флагов: конец файла, конец вопроса,</p>
<p>                  номер иллюстрации}</p>
<p>        P2:array[0..1] of Char; {переменная поля номера вопроса}</p>
<p>        P3:array[0..0] of Char; {переменная поля флагов: номера</p>
<p>                                 справки, конца справки}</p>
<p>        P4:array[0..69] of Char; {переменная поля текста}</p>
<p>        P5:array[0..2] of Char;  {переменная поля оценки}</p>
<p>  end;</p>
<p>  var F3:file of An ;  {переменные теоретической части}</p>
<p>      A: An;</p>
<p>      St:string[68];</p>
<p>      Y,N:integer;</p>
<p>  var F32:file of Ant;  { переменные вопросов}</p>
<p>      At:Ant;</p>
<p>      R1:string[2];</p>
<p>      Z1:integer;</p>
<p>      S:string[68];</p>
<p>  var F33:file of Antr;   {переменные справок}</p>
<p>      Atr:Antr;</p>
<p>      R2:string[2];</p>
<p>      R3:string[1];</p>
<p>      Stt:string[68];</p>
<p>      R4:string[2];</p>
<p>      Z2,Z3,Z4:integer;</p>
<p>      CH:  Char; {переменная для принятия символа с клавиатуры}</p>
<p>      K,J,I:integer; {переменные циклов}</p>
<p>      M: array[0..3] of integer; {массив для хранения четырех</p>
<p>                                  выбранных номеров вопросов}</p>
<p>      Code:integer;</p>
<p>  var R5:string[1];   {переменные вывода результатов}</p>
<p>      Z5:integer;</p>
<p>      REZ3:Longint; {переменная оценки}</p>
<p>  procedure RAZDEL30; {Обеспечение работы с разделом "Формирование</p>
<p>                       прямолинейных монохромных изображений"}</p>
<p>  implementation</p>
<p>  const Mn:array[1..5] of PointType=((X:460;Y:30),(X:590;Y:90),</p>
<p>                   (X:590;Y:120),(X:430;Y:120),(X:460;Y:30));</p>
<p>        Mno:array[1..5] of PointType=((X:460;Y:170),(X:590;Y:230),</p>
<p>                    (X:590;Y:260),(X:430;Y:260),(X:460;Y:170));</p>
<p>         {Константы для формирование иллюстраций к тексту теории}</p>
<p>  const Ww:array[1..5] of PointType=((X:390;Y:60),(X:510;Y:60),</p>
<p>                      (X:510;Y:260),(X:390;Y:260),(X:390;Y:60));</p>
<p>        WWW:array[1..5] of PointType=((X:380;Y:50),(X:520;Y:50),</p>
<p>                      (X:520;Y:270),(X:380;Y:270),(X:380;Y:50));</p>
<p>         {Константы для формирования иллюстраций к тексту вопросов}</p>
<p>   procedure RAZDEL30;</p>
<p>   Label 0,1,2,3;</p>
<p>   begin</p>
<p>    REZ3:=6;</p>
<p>    GraphRegim;</p>
<p>    Assign(F3,'RAZTEX3.pas');  {Связь с файлом теста теории}</p>
<p>    {SI-}</p>
<p>    Reset(F3);</p>
<p>    {SI+}</p>
<p>    If IOResult <> 0 then Writeln ('Нет файла RAZTEX3.pas');</p>
<p>    repeat</p>
<p>    OKNO;</p>
<p>    Y:=10;</p>
<p>    For N:=0 to 31 do  {Цикл вывода текста теории}</p>
<p>    begin</p>
<p>     Read(F3,A);</p>
<p>     St:=StrPas(A.P2); {Преобразование ASCIIZ-строки A.P2 в строку</p>
<p>                        типа string}</p>
<p>     case A.P1 of          {Иллюстрации к тексту}</p>
<p>     ' ': OutTextXY(20,Y*N+10,St);</p>
<p>     '*': begin</p>
<p>           SetColor(4);</p>
<p>           OutTextXY(20,Y*N+10,St);</p>
<p>           SetColor(1);</p>
<p>          end;</p>
<p>     'щ': begin</p>
<p>           SetColor(4);</p>
<p>           Line(460,120,593,120);</p>
<p>           OutTextXY(460,160,'0');</p>
<p>           OutTextXY(593,130,'(X,Y)');</p>
<p>           SetColor(1);</p>
<p>          end;</p>
<p>     '2':begin</p>
<p>          SetColor(4);</p>
<p>          OutTextXY(460,160,'0            dX');</p>
<p>          OutTextXY(600,180,'dY');</p>
<p>          OutTextXY(550,200,'(dX,dY)');</p>
<p>          Line(460,170,593,170);</p>
<p>          Line(593,170,593,200);</p>
<p>          Line(460,170,593,200);</p>
<p>          SetColor(1);</p>
<p>         end;</p>
<p>     '3':begin</p>
<p>          SetColor(4);</p>
<p>          OutTextXY(430,245,'(X1,Y1)');</p>
<p>          Line(460,260,593,285);</p>
<p>          OutTextXY(580,270,'(X2,Y2)');</p>
<p>          SetColor(1);</p>
<p>         end;</p>
<p>     '4':begin</p>
<p>          SetBKColor(2);</p>
<p>          SetColor(4);</p>
<p>          Rectangle(460,40,590,90);</p>
<p>          SetColor(1);</p>
<p>         end;</p>
<p>     '5':begin</p>
<p>          SetFillStyle(1,4);</p>
<p>          Bar(459,129,591,181);</p>
<p>          SetFillStyle(8,5);</p>
<p>          SetColor(4);</p>
<p>          Bar(460,130,590,180);</p>
<p>          SetColor(1);</p>
<p>         end;</p>
<p>     '6':begin</p>
<p>          SetFillStyle(6,5);</p>
<p>          SetColor(4);</p>
<p>          Bar3D(460,240,590,300,20,true);</p>
<p>          SetCOLOR(1);</p>
<p>          SetFillStyle(1,15);</p>
<p>          SetBKColor(11);</p>
<p>         end;</p>
<p>     '7':begin</p>
<p>          SetBKColor(15);</p>
<p>          SetColor(4);</p>
<p>          DrawPoly(5,Mn);</p>
<p>          SetColor(1);</p>
<p>         end;</p>
<p>     '8':begin</p>
<p>          SetColor(4);</p>
<p>          SetFillStyle(11,5);</p>
<p>          SetBKColor(15);</p>
<p>          FillPoly(5,Mno);</p>
<p>          SetColor(1);</p>
<p>          SetFillStyle(1,15);</p>
<p>         end;</p>
<p>     '0':GoTo 0;</p>
<p>     end;</p>
<p>    end;</p>
<p>  0:readkey;</p>
<p>    ClearDevice;</p>
<p>    OKNO;</p>
<p>    until A.P1='0';</p>
<p>    Close(F3);</p>
<p>    Assign(F32,'Joing.pas');  {связь с файлом вопросов}</p>
<p>    {SI-}</p>
<p>    Reset(F32);</p>
<p>    {SI+}</p>
<p>    If IOResult<>0 then Writeln('Нет файла Joing.pas');</p>
<p>    Assign(F33,'Iod.pas');  {связь с файлом справок}</p>
<p>    {SI-}</p>
<p>    Reset(F33);</p>
<p>    {SI+}</p>
<p>    If IOResult<>0 then Writeln('Нет файла Iod.pas');</p>
<p>    OKNO1;           {заставка "Контрольные вопросы"}</p>
<p>    readkey;</p>
<p>    ClearDevice;</p>
<p>    Randomize;        {Выбор четырех номеров вопросов}</p>
<p>    For J:=0 to 3 do</p>
<p>     begin</p>
<p>    1:I:=Random(10);</p>
<p>      If I=0 then GOTO 1;</p>
<p>      For K:=0 to J-1 do</p>
<p>       begin</p>
<p>        If M[k]=I then GOTO 1;</p>
<p>       end;</p>
<p>       M[J]:=I;</p>
<p>     end;</p>
<p>     repeat</p>
<p>     OKNO;</p>
<p>     begin</p>
<p>      Read(F32,At);</p>
<p>      R1:=StrPas(At.P2); {Преобразование ASCIIZ-строки At.P2 в строку</p>
<p>                          типа string}</p>
<p>      Val(R1,Z1,Code); {Преобразование символьного представления</p>
<p>                        номера вопроса в двоичную форму}</p>
<p>      Y:=20;</p>
<p>      If(Z1=M[0]) or (Z1=M[1]) or (Z1=M[2]) or (Z1=M[3]) then</p>
<p>      begin</p>
<p>       repeat</p>
<p>       S:=StrPas(At.P3); {Преобразование ASCIIZ-строки At.P3 в строку</p>
<p>                          типа string}</p>
<p>       OutTextXY(20,Y,S);     {Вывод текста вопроса}</p>
<p>       case At.P1 of          {иллюстрации к тексту вопросов}</p>
<p>       '1':begin</p>
<p>            DrawPoly(5,Ww);</p>
<p>            DrawPoly(5,Www);</p>
<p>            Bar3D(410,100,470,120,20,true);</p>
<p>            Bar3D(410,120,470,250,20,false)</p>
<p>           end;</p>
<p>       '2':begin</p>
<p>            Bar3D(200,250,300,300,30,true);</p>
<p>            Bar3D(200,300,300,320,30,true)</p>
<p>           end;</p>
<p>       '3':begin</p>
<p>            Line(380,150,550,190);</p>
<p>            Line(380,190,550,190);</p>
<p>            Line(380,230,550,190);</p>
<p>            OutTextXY(375,140,'(X,Y)');</p>
<p>            OutTextXY(375,170,'dY');</p>
<p>            OutTextXY(555,190,'(X1,Y1)');</p>
<p>            OutTextXY(375,200,'dY');</p>
<p>           end;</p>
<p>       end;</p>
<p>       Y:=Y+10;</p>
<p>       Read(F32,At);</p>
<p>       until At.P1='*';</p>
<p>     2:OutTextXY(50,330,'ВВЕДИТЕ НОМЕР ПРАВИЛЬНОГО ОТВЕТА ___');</p>
<p>       CH:=ReadKey;</p>
<p>       SetColor(4);</p>
<p>       OutTextXY(320,325,CH);</p>
<p>       SetColor(1);</p>
<p>       readkey;</p>
<p>       If(CH<>'1') and (CH<>'2') and (CH<>'3') and (CH<>'4') then</p>
<p>       begin</p>
<p>        SetFillStyle(1,11);</p>
<p>        Bar(318,320,327,340);</p>
<p>        GoTo 2;</p>
<p>       end</p>
<p>       else</p>
<p>       repeat</p>
<p>       Read(F33,Atr);</p>
<p>       R2:=StrPas(Atr.P2);  {Преобразование ASCIIZ-строки Atr.P2 в</p>
<p>                             строку типа string }</p>
<p>       Val(R2,Z2,Code); {Преобразование символьного представления</p>
<p>                         номера вопроса в двоичную форму}</p>
<p>       If Z2=Z1 then</p>
<p>        begin</p>
<p>         repeat</p>
<p>         If Atr.P3=CH then</p>
<p>          begin</p>
<p>           Y:=100;</p>
<p>           OKNO;</p>
<p>           repeat</p>
<p>           Stt:=StrPas(Atr.P4); {Преобразование ASCIIZ-строки Atr.P4</p>
<p>                                    в строку типа string }</p>
<p>           R5:=StrPas(Atr.P5); {Преобразование ASCIIZ-строки Atr.P5</p>
<p>                                    в строку типа string }</p>
<p>           Val(R5,Z5,Code); {Преобразование символьного</p>
<p>                                представления оценки в двоичную форму}</p>
<p>           REZ3:=Round((REZ3+Z5)/2); {Формирование оценки}</p>
<p>           OutTextXY(20,Y,Stt);    {Вывод текста справки}</p>
<p>           Y:=Y+10;</p>
<p>           case Atr.P1 of         {иллюстрации к тексту справок}</p>
<p>           '1':begin</p>
<p>                Line(380,150,550,190);</p>
<p>                MoveRel(380,190);</p>
<p>                Line(380,190,550,190);</p>
<p>                LineTo(550,190);</p>
<p>                OutTextXY(555,190,'(X1,Y1)');</p>
<p>                OutTextXY(370,140,'(X,Y)');</p>
<p>                OutTextXY(390,200,'(X,Y+dY)');</p>
<p>               end;</p>
<p>           '2':begin</p>
<p>                GOTOXY(100,190);</p>
<p>                LineTo(100,190);</p>
<p>                LineRel(30,40);</p>
<p>                LineRel(0,80);</p>
<p>               end;</p>
<p>           '3':begin</p>
<p>                GOTOXY(100,190);</p>
<p>                LineTo(380,150);</p>
<p>                LineRel(30,40);</p>
<p>                LineRel(0,80);</p>
<p>               end;</p>
<p>           end;</p>
<p>           Read(F33,Atr);</p>
<p>           until Atr.P3='*';</p>
<p>           readkey;</p>
<p>           GOTO 3;</p>
<p>         end</p>
<p>         else  Read(F33,Atr);</p>
<p>         until Atr.P1='*';</p>
<p>        end</p>
<p>        until Atr.P1='0';</p>
<p>       end</p>
<p>       else</p>
<p>  3: end;</p>
<p>     until At.P1='0';</p>
<p>     Close(F32);</p>
<p>     Close(F33);</p>
<p>     CloseGraph;</p>
<p>   end;</p>
<p>  begin</p>
<p>  end.</p>
<p>Unit RAZDEL4;</p>
<p> interface</p>
<p> uses Crt,Graph,Dos,Strings,MYBOOK;</p>
<p> type An = record {Теория}</p>
<p>     P1:Char;  {Переменная поля флага : конец файла, номер</p>
<p>               иллюстрации}</p>
<p>     P2:array[0..69] of char; {Переменная поля текста}</p>
<p> end;</p>
<p> type Ant=record {Текст вопросов}</p>
<p>      P1:Char;   {Переменная поля флага:конец файла, номер иллюст-</p>
<p>                  рации, конец вопроса}</p>
<p>      P2:array[0..1] of Char; {Переменная поля номера вопроса}</p>
<p>      P3:array[0..69] of Char; {Переменная поля текста вопроса}</p>
<p> end;</p>
<p> type Antr=record { Справки }</p>
<p>      P1:Char; {Переменная поля флага:конец файла, конец вопроса,</p>
<p>                номер иллюстрации}</p>
<p>      P2:array[0..1] of Char;  {Переменная поля номера вопроса}</p>
<p>      P3:array[0..0] of Char; {Переменная поля флага: номер справки</p>
<p>                               и конец справки}</p>
<p>      P4:array[0..69] of Char; {Переменная поля текста справки}</p>
<p>      P5:array[0..2] of Char; {Переменная поля оценки}</p>
<p> end;</p>
<p> var F4: file of An ;  {Переменные теории}</p>
<p>     A:An;</p>
<p>     N,Y:integer;</p>
<p>     St:string[68];</p>
<p> var F32:file of Ant;  { Переменные вопросов}</p>
<p>     At:Ant;</p>
<p>     R1:string[2];</p>
<p>     Z1:integer;</p>
<p>     S:string[68];</p>
<p> var F33:file of Antr;   {Переменные справок}</p>
<p>     Atr:Antr;</p>
<p>     R2:string[2];</p>
<p>     R3:string[1];</p>
<p>     Stt:string[68];</p>
<p>     R4:string[2];</p>
<p>     Z2,Z3,Z4:integer;</p>
<p>     CH:  Char;{Переменная для принятия символа с клвиатуры}</p>
<p>     K,J,I:integer; {Переменные циклов}</p>
<p>     M: array[0..3] of integer; {Массив для хранения черырех</p>
<p>                                выбранных номеров вопросов}</p>
<p>     Code:integer;</p>
<p> var R5:string[1];   {переменные вывода результатов}</p>
<p>     Z5:integer;</p>
<p>     REZ4:Longint;  {переменная оценки}</p>
<p> procedure RAZDEL40;</p>
<p> implementation</p>
<p> procedure RAZDEL40;</p>
<p> Label 0,1,2,3;</p>
<p> begin</p>
<p>  REZ4:=6;</p>
<p>  GraphRegim;</p>
<p>  Assign(F4,'RAZTEX4.pas'); {Связь с файлом текста теории}</p>
<p>  {SI-}</p>
<p>  Reset(F4);</p>
<p>  {SI+}</p>
<p>  If IOResult <> 0 then Writeln ('Нет файла RAZTEX4.pas');</p>
<p>  repeat</p>
<p>  ClearDevice;</p>
<p>  OKNO;</p>
<p>  Y:=10;</p>
<p>  For N:=0 to 31 do           {Вывод текста теории}</p>
<p>   begin</p>
<p>    Read(F4,A);</p>
<p>    St:=StrPas(A.P2); {Преобразование ASCIIZ-строки A.P2 в строку</p>
<p>                       типа string}</p>
<p>    OutTextXY(20,Y*N+10,St);</p>
<p>    case A.P1 of</p>
<p>    '*':begin</p>
<p>         SetColor(4);</p>
<p>         OutTextXY(20,Y*N+10,St);</p>
<p>         SetColor(1);</p>
<p>        end;</p>
<p>    '1':begin SetFillStyle(1,15);</p>
<p>         Bar(350,45,600,340);</p>
<p>         SetFillStyle(1,0);</p>
<p>         Bar(350,45,600,65);</p>
<p>         SetFillStyle(1,1);</p>
<p>         Bar(350,65,600,85);</p>
<p>         SetFillStyle(1,2);</p>
<p>         Bar(350,85,600,105);</p>
<p>         SetFillStyle(1,3);</p>
<p>         Bar(350,105,600,120);</p>
<p>         SetFillStyle(1,4);</p>
<p>         Bar(350,120,600,135);</p>
<p>         SetFillStyle(1,5);</p>
<p>         Bar(350,135,600,150);</p>
<p>         SetFillStyle(1,6);</p>
<p>         Bar(350,150,600,165);</p>
<p>         SetFillStyle(1,7);</p>
<p>         Bar(350,165,600,185);</p>
<p>         SetFillStyle(1,8);</p>
<p>         Bar(350,185,600,200);</p>
<p>         SetFillStyle(1,9);</p>
<p>         Bar(350,200,600,215);</p>
<p>         SetFillStyle(1,10);</p>
<p>         Bar(350,215,600,235);</p>
<p>         SetFillStyle(1,11);</p>
<p>         Bar(350,235,600,255);</p>
<p>         SetFillStyle(1,12);</p>
<p>         Bar(350,255,600,275);</p>
<p>         SetFillStyle(1,13);</p>
<p>         Bar(350,275,600,295);</p>
<p>         SetFillStyle(1,14);</p>
<p>         Bar(350,295,600,315);</p>
<p>         SetFillStyle(1,15);</p>
<p>         Bar(350,315,600,340);</p>
<p>        end;</p>
<p>    '2':begin</p>
<p>         SetBKColor(15);</p>
<p>         SetFillStyle(1,15);</p>
<p>         Bar(200,100,600,300);</p>
<p>         SetFillStyle(2,2);</p>
<p>         Bar(200,100,600,120);</p>
<p>         SetFillStyle(3,2);</p>
<p>         Bar(200,120,600,145);</p>
<p>         SetFillStyle(4,2);</p>
<p>         Bar(200,145,600,168);</p>
<p>         SetFillStyle(5,2);</p>
<p>         Bar(200,168,600,190);</p>
<p>         SetFillStyle(6,2);</p>
<p>         Bar(200,190,600,210);</p>
<p>         SetFillStyle(7,2);</p>
<p>         Bar(200,210,600,228);</p>
<p>         SetFillStyle(8,2);</p>
<p>         Bar(200,228,600,246);</p>
<p>         SetFillStyle(9,2);</p>
<p>         Bar(200,246,600,264);</p>
<p>         SetFillStyle(10,2);</p>
<p>         Bar(200,264,600,282);</p>
<p>         SetFillStyle(11,2);</p>
<p>         Bar(200,282,600,300);</p>
<p>         SetFillStyle(1,0);</p>
<p>        end;</p>
<p>    '0':GoTo 0</p>
<p>    end;</p>
<p>   end;</p>
<p>   readkey;</p>
<p>0:until  A.P1='0'  ;</p>
<p>  readkey;</p>
<p>  Close(F4);</p>
<p>  Assign(F32,'Joi.pas');  {связь с файлом вопросов}</p>
<p>  {SI-}</p>
<p>  Reset(F32);</p>
<p>  {SI+}</p>
<p>  If IOResult<>0 then Writeln('Нет файла Joi.pas');</p>
<p>  Assign(F33,'Iodi.pas');</p>
<p>  {SI-}</p>
<p>  Reset(F33);     {связь с файлом справок}</p>
<p>  {SI+}</p>
<p>  If IOResult<>0 then Writeln('Нет файла Iodi.pas');</p>
<p>  OKNO1;           {"Контрольные вопросы"}</p>
<p>  readkey;</p>
<p>  ClearDevice;</p>
<p>  Randomize;        {Выбор четырех номеров вопросов}</p>
<p>  For J:=0 to 3 do</p>
<p>   begin</p>
<p>  1:I:=Random(10);</p>
<p>    If I=0 then GOTO 1;</p>
<p>    For K:=0 to J-1 do</p>
<p>     begin</p>
<p>      If M[k]=I then GOTO 1;</p>
<p>     end;</p>
<p>     M[J]:=I;</p>
<p>   end;</p>
<p>   M[1]:=1;</p>
<p>   repeat</p>
<p>   OKNO;</p>
<p>   begin</p>
<p>    Read(F32,At);</p>
<p>    R1:=StrPas(At.P2);{Преобразование ASCIIZ-строки At.P2 в</p>
<p>                        строку типа string}</p>
<p>    Val(R1,Z1,Code);  {Преобразование символьного представления</p>
<p>                       номера вопроса в двоичную форму}</p>
<p>    Y:=20;</p>
<p>    If(Z1=M[0]) or (Z1=M[1]) or (Z1=M[2]) or (Z1=M[3]) then</p>
<p>    begin</p>
<p>     repeat</p>
<p>     S:=StrPas(At.P3); {Преобразование ASCIIZ-строки At.P3 в</p>
<p>                        строку типа string}</p>
<p>     OutTextXY(20,Y,S); {Вывод текста вопроса}</p>
<p>     case At.P1 of</p>
<p>     ' ':begin</p>
<p>         end;</p>
<p>     end;</p>
<p>     Y:=Y+10;</p>
<p>     Read(F32,At);</p>
<p>     until At.P1='*';</p>
<p>     OutTextXY(50,330,'ВВЕДИТЕ НОМЕР ПРАВИЛЬНОГО ОТВЕТА ___');</p>
<p>   2:CH:=ReadKey;</p>
<p>     SetColor(4);</p>
<p>     OutTextXY(320,325,CH);</p>
<p>     SetColor(1);</p>
<p>     readkey;</p>
<p>     If(CH<>'1') and (CH<>'2') and (CH<>'3') and (CH<>'4') then</p>
<p>     begin</p>
<p>      SetFillStyle(1,11);</p>
<p>      Bar(318,320,327,340);</p>
<p>      GoTo 2;</p>
<p>     end</p>
<p>     else</p>
<p>     repeat</p>
<p>     Read(F33,Atr);</p>
<p>     R2:=StrPas(Atr.P2); {Преобразование ASCIIZ-строки Atr.P2 в</p>
<p>                          строку типа string}</p>
<p>     Val(R2,Z2,Code);   {Преобразование символьного представления</p>
<p>                       номера вопроса в двоичную форму}</p>
<p>     If Z2=Z1 then</p>
<p>     begin</p>
<p>      repeat</p>
<p>      If Atr.P3=CH then</p>
<p>       begin</p>
<p>        Y:=100;</p>
<p>        OKNO;</p>
<p>        repeat</p>
<p>        Stt:=StrPas(Atr.P4);   {Преобразование ASCIIZ-строки Atr.P4 в</p>
<p>                          строку типа string}</p>
<p>        R5:=StrPas(Atr.P5); {Преобразование ASCIIZ-строки Atr.P5 в</p>
<p>                          строку типа string}</p>
<p>        Val(R5,Z5,Code); {Преобразование символьного представления</p>
<p>                          оценки в двоичную форму}</p>
<p>        REZ4:=Round((REZ4+Z5)/2);  {Формирование оценки }</p>
<p>        OutTextXY(20,Y,Stt);</p>
<p>        Y:=Y+10;</p>
<p>        case Atr.P1 of</p>
<p>        ' ':begin</p>
<p>            end;</p>
<p>        end;</p>
<p>        Read(F33,Atr);</p>
<p>        until Atr.P3='*';</p>
<p>        readkey;</p>
<p>        GOTO 3;</p>
<p>       end</p>
<p>       else  Read(F33,Atr);</p>
<p>      until Atr.P1='*';</p>
<p>     end</p>
<p>     until Atr.P1='0';</p>
<p>    end</p>
<p>   else</p>
<p>3:end;</p>
<p>   until At.P1='0';</p>
<p>  Close(F32);</p>
<p>  Close(F33);</p>
<p>  CloseGraph;</p>
<p> end;</p>
<p> begin</p>
<p> end.</p>
<p>Unit RAZDEL5;</p>
<p>    interface</p>
<p>    uses Crt,Graph,Dos,Strings,MYBOOK;</p>
<p>    type An = record</p>
<p>          P1:Char;</p>
<p>          P2:array[0..69] of char;</p>
<p>    end;</p>
<p>    type Ant=record {Текст вопросов}</p>
<p>          P1:Char;</p>
<p>          P2:array[0..1] of Char;</p>
<p>          P3:array[0..69] of Char;</p>
<p>    end;</p>
<p>    type Antr=record { Справки }</p>
<p>          P1:Char;</p>
<p>          P2:array[0..1] of Char;</p>
<p>          P3:array[0..0] of Char;</p>
<p>          P4:array[0..69] of Char;</p>
<p>          P5:array[0..2] of Char;</p>
<p>    end;</p>
<p>    var F5: file of An ;</p>
<p>        A:An;</p>
<p>        N,Y:integer;</p>
<p>        St:string[68];</p>
<p>    var F52:file of Ant;  { переменные вопросов}</p>
<p>        At:Ant;</p>
<p>        R1:string[2];</p>
<p>        Z1:integer;</p>
<p>        S:string[68];</p>
<p>        V:char;</p>
<p>    var F53:file of Antr;   {переменные справок}</p>
<p>        Atr:Antr;</p>
<p>        R2:string[2];  {поле Ant.P1-номер вопроса}</p>
<p>        R3:string[1];  {поле Ant.P2-номер варианта ответа}</p>
<p>        Stt:string[68];{поле Ant.P3-текст справки}</p>
<p>        R4:string[2];  {поле Ant.P4- оценка}</p>
<p>        Z2,Z3,Z4:integer;</p>
<p>        CH:  Char;        {номер варианта ответа}</p>
<p>        K,J,I:integer;</p>
<p>        M: array[0..3] of integer;</p>
<p>        Nom:Longint;</p>
<p>        Code:integer;</p>
<p>    var R5:string[1];   {переменные вывода результатов}</p>
<p>        Z5:integer;</p>
<p>        REZ5:Longint;</p>
<p>    procedure RAZDEL50;</p>
<p>    implementation</p>
<p>    procedure RAZDEL50;</p>
<p>    Label 0,1,2,3;</p>
<p>    begin</p>
<p>    REZ5:=0;</p>
<p>    GraphRegim;</p>
<p>    Assign(F5,'RAZTEX5.pas');</p>
<p>    {SI-}</p>
<p>    Reset(F5);</p>
<p>    {SI+}</p>
<p>    If IOResult <> 0 then Writeln ('Нет файла RAZTEX5.pas');</p>
<p>    repeat</p>
<p>    ClearDevice;</p>
<p>    OKNO;</p>
<p>    Y:=10;</p>
<p>    For N:=0 to 31 do</p>
<p>    begin</p>
<p>     Read(F5,A);</p>
<p>     St:=StrPas(A.P2);</p>
<p>     case A.P1 of</p>
<p>     ' ':OutTextXY(20,Y*N+10,St);</p>
<p>     '*':begin</p>
<p>          SetColor(4);</p>
<p>          OutTextXY(20,Y*N+10,St);</p>
<p>          SetColor(1);</p>
<p>         end;</p>
<p>     '1':begin</p>
<p>          SetColor(4);</p>
<p>          Arc(500,150,0,278,30);</p>
<p>          OutTextXY(490,140,'(X,Y)');</p>
<p>          OutTextXY(500,150,'.');</p>
<p>          SetColor(1);</p>
<p>         end;</p>
<p>     '2':begin</p>
<p>          SetColor(4);</p>
<p>          Circle(500,300,30);</p>
<p>          OutTextXY(475,290,'(X,Y)');</p>
<p>          OutTextXY(500,300,'.');</p>
<p>          SetColor(1);</p>
<p>         end;</p>
<p>     '3':begin</p>
<p>          SetBKColor(15);</p>
<p>          SetColor(4);</p>
<p>          Ellipse(500,100,0,278,50,25);</p>
<p>          OutTextXY(490,90,'(X,Y)');</p>
<p>          OutTextXY(500,100,'.');</p>
<p>          SetColor(1);</p>
<p>         end;</p>
<p>    '4': begin</p>
<p>          SetColor(2);</p>
<p>          Ellipse(500,180,10,270,50,30);</p>
<p>          Line(500,135,460,225);</p>
<p>          SetFillStyle(4,14);</p>
<p>          FloodFill(455,180,2);</p>
<p>         end;</p>
<p>    '5': begin</p>
<p>          SetColor(4);</p>
<p>          Ellipse(500,300,0,361,50,30);</p>
<p>          FillEllipse(500,300,50,30);</p>
<p>          SetFillStyle(1,15);</p>
<p>          SetColor(1);</p>
<p>         end;</p>
<p>    '6': begin</p>
<p>          SetFillStyle(7,13);</p>
<p>          PieSlice(500,120,0,120,50);</p>
<p>         end;</p>
<p>    '7': begin</p>
<p>          SetFillStyle(9,13);</p>
<p>          Sector(500,200,0,270,50,30);</p>
<p>          SetFillStyle(1,15);</p>
<p>         end;</p>
<p>     '8':begin</p>
<p>          SetFillStyle(1,9);</p>
<p>          Bar(250,100,600,200);</p>
<p>          SetViewPort(250,100,600,200,true);</p>
<p>          FloodFill(260,110, 1);</p>
<p>          Randomize;</p>
<p>          repeat</p>
<p>            PutPixel(Random(GetMaxX),Random(GetMaxY),15);</p>
<p>            Delay(15);</p>
<p>           until KeyPressed;</p>
<p>           SetFillStyle(1,15);</p>
<p>           SetViewPort(5,5,635,345,true);</p>
<p>         end;</p>
<p>    '9': begin</p>
<p>          Diogramma;</p>
<p>         end;</p>
<p>     '0':GoTo 0</p>
<p>    end;</p>
<p>   end;</p>
<p> 0:readkey;</p>
<p>   until  A.P1='0';</p>
<p>   Close(F5);</p>
<p>   Assign(F52,'Join.pas');  {связь с файлом вопросов}</p>
<p>   {SI-}</p>
<p>   Reset(F52);</p>
<p>   {SI+}</p>
<p>   If IOResult<>0 then Writeln('Нет файла Join.pas');</p>
<p>   Assign(F53,'Iodin.pas');</p>
<p>   {SI-}</p>
<p>   Reset(F53);     {связь с файлом справок}</p>
<p>   {SI+}</p>
<p>   If IOResult<>0 then Writeln('Нет файла Iodin.pas');</p>
<p>   OKNO1;           {"Контрольные вопросы"}</p>
<p>   readkey;</p>
<p>   ClearDevice;</p>
<p>   Randomize;        {Выбор четырех номеров вопросов}</p>
<p>   For J:=0 to 3 do</p>
<p>   begin</p>
<p>  1:I:=Random(6);</p>
<p>  If I=0 then GOTO 1;</p>
<p>    For K:=0 to J-1 do</p>
<p>     begin</p>
<p>      If M[k]=I then GOTO 1;</p>
<p>     end;</p>
<p>     M[J]:=I;</p>
<p>   end;</p>
<p>   repeat</p>
<p>   OKNO;</p>
<p>   begin</p>
<p>    Read(F52,At);       { вывод текста вопросов и справок }</p>
<p>    R1:=StrPas(At.P2);</p>
<p>    Val(R1,Z1,Code);</p>
<p>    Y:=20;</p>
<p>    If(Z1=M[0]) or (Z1=M[1]) or (Z1=M[2]) or (Z1=M[3]) then</p>
<p>     begin</p>
<p>     repeat</p>
<p>     S:=StrPas(At.P3);</p>
<p>     OutTextXY(20,Y,S);</p>
<p>     case At.P1 of</p>
<p>      '2':begin</p>
<p>          end</p>
<p>     end;</p>
<p>     Y:=Y+10;</p>
<p>     Read(F52,At);</p>
<p>     until At.P1='*';</p>
<p>     OutTextXY(50,330,'ВВЕДИТЕ НОМЕР ПРАВИЛЬНОГО ОТВЕТА ___');</p>
<p>   2:CH:=ReadKey;</p>
<p>     SetColor(4);</p>
<p>     OutTextXY(320,325,CH);</p>
<p>     SetColor(1);</p>
<p>     readkey;</p>
<p>     If(CH<>'1') and (CH<>'2') and (CH<>'3') and (CH<>'4') then</p>
<p>     begin</p>
<p>      SetFillStyle(1,11);</p>
<p>      Bar(318,320,327,340);</p>
<p>      GoTo 2;</p>
<p>     end</p>
<p>     else</p>
<p>     repeat</p>
<p>     Read(F53,Atr);</p>
<p>     R2:=StrPas(Atr.P2);</p>
<p>     Val(R2,Z2,Code);</p>
<p>     If Z2=Z1 then</p>
<p>     begin</p>
<p>      repeat</p>
<p>      If Atr.P3=CH then</p>
<p>      begin</p>
<p>       Y:=100;</p>
<p>       OKNO;</p>
<p>       repeat</p>
<p>       Stt:=StrPas(Atr.P4);</p>
<p>       R5:=StrPas(Atr.P5);        {формирование оценки}</p>
<p>       Val(R5,Z5,Code);</p>
<p>       REZ5:=Round((REZ5+Z5)/2);</p>
<p>       OutTextXY(20,Y,Stt);</p>
<p>       Y:=Y+10;</p>
<p>       case Atr.P1 of</p>
<p>       '1':begin</p>
<p>           end;</p>
<p>       '0':GoTo 3;</p>
<p>       end;</p>
<p>       Read(F53,Atr);</p>
<p>       until Atr.P3='*';</p>
<p>       readkey;</p>
<p>       GOTO 3;</p>
<p>      end</p>
<p>      else  Read(F53,Atr);</p>
<p>      until Atr.P1='*';</p>
<p>     end</p>
<p>     until Atr.P1='0';</p>
<p>    end</p>
<p>    else</p>
<p> 3: end;</p>
<p>   until At.P1='0';</p>
<p>   Close(F52);</p>
<p>   Close(F53);</p>
<p>   CloseGraph;</p>
<p>  end;</p>
<p>   begin</p>
<p>   end.</p>
<p>Unit RAZDEL6;</p>
<p>   interface</p>
<p>   uses Crt,Graph,Dos,Strings,MYBOOK;</p>
<p>   type An = record {Теория}</p>
<p>         P1:Char;  {Переменная поля флага : конец файла, номер</p>
<p>                     иллюстрации}</p>
<p>         P2:array[0..69] of char; {Переменная поля текста}</p>
<p>    end;</p>
<p>   type Ant=record {Текст вопросов}</p>
<p>         P1:Char;   {Переменная поля флага:конец файла, номер иллюст-</p>
<p>                     рации, конец вопроса}</p>
<p>         P2:array[0..1] of Char; {Переменная поля номера вопроса}</p>
<p>         P3:array[0..69] of Char; {Переменная поля текста вопроса}</p>
<p>   end;</p>
<p>   type Antr=record { Справки }</p>
<p>         P1:Char; {Переменная поля флага:конец файла, конец вопроса,</p>
<p>                    номер иллюстрации}</p>
<p>         P2:array[0..1] of Char;  {Переменная поля номера вопроса}</p>
<p>         P3:array[0..0] of Char; {Переменная поля флага: номер справки</p>
<p>                                  и конец справки}</p>
<p>         P4:array[0..69] of Char; {Переменная поля текста справки}</p>
<p>         P5:array[0..2] of Char; {Переменная поля оценки}</p>
<p>   end;</p>
<p>   var F6: file of An ;  {Переменные теории}</p>
<p>       A:An;</p>
<p>       Y,N,T1,T2,T3,T4:integer;</p>
<p>       St:string[68];</p>
<p>   var  F62:file of Ant;  { переменные вопросов}</p>
<p>        At:Ant;</p>
<p>        R1:string[2];</p>
<p>        Z1:integer;</p>
<p>        S:string[68];</p>
<p>   var F63:file of Antr;   {Переменные справок}</p>
<p>       Atr:Antr;</p>
<p>       R2:string[2];</p>
<p>       R3:string[1];</p>
<p>       Stt:string[68];</p>
<p>       R4:string[2];</p>
<p>       Z2,Z3,Z4:integer;</p>
<p>       CH:  Char;{Переменная для принятия символа с клвиатуры}</p>
<p>       K,J,I:integer; {Переменные циклов}</p>
<p>       M: array[0..3] of integer; {Массив для хранения черырех</p>
<p>                                  выбранных номеров вопросов}</p>
<p>       Code:integer;</p>
<p>   var R5:string[1];   {переменные вывода результатов}</p>
<p>       Z5:integer;</p>
<p>       REZ6:Longint;  {переменная оценки}</p>
<p>   procedure RAZDEL60; {Обеспечение работы раздела "Формирование</p>
<p>                        графических текстов}</p>
<p>   implementation</p>
<p>   procedure RAZDEL60;</p>
<p>   Label 0,1,2,3;</p>
<p>   begin</p>
<p>    REZ6:=6;</p>
<p>    GraphRegim;</p>
<p>    Assign(F6,'RAZTEX6.pas');</p>
<p>    {SI-}</p>
<p>    Reset(F6);</p>
<p>    {SI+}</p>
<p>    If IOResult <> 0 then Writeln ('Нет файла RAZTEX6.pas');</p>
<p>    repeat</p>
<p>    ClearDevice;</p>
<p>    OKNO;</p>
<p>    For N:=0 to 31 do</p>
<p>    begin</p>
<p>     Read(F6,A);</p>
<p>     St:=StrPas(A.P2);   {Преобразование ASCIIZ-строки A.P2 в строку</p>
<p>                         типа string}</p>
<p>     case A.P1 of</p>
<p>     ' ':OutTextXY(20,10*N+10,St);</p>
<p>     '*':begin</p>
<p>          SetColor(4);</p>
<p>          OutTextXY(20,10*N+10,St);</p>
<p>          SetColor(1);</p>
<p>         end;</p>
<p>     '1':begin</p>
<p>          SetFillStyle(1,1);</p>
<p>          Bar(10,30,630,338);</p>
<p>          SetColor(15);</p>
<p>          SetTextStyle(2,0,1);</p>
<p>          OuttextXY(50,50,'TriplexFont, HorizDir, 15');</p>
<p>          SetTextStyle(1,0,3);</p>
<p>          SetColor(12);</p>
<p>          OutTextXY(50,100,'DefaultFont, HorizDir, 12') ;</p>
<p>          SetTextStyle(3,0,4);</p>
<p>          SetColor(13);</p>
<p>          OutTextXY(50,160, 'SmallFont, HorizDir, 13');</p>
<p>          SetTextStyle(4,0,5);</p>
<p>          SetColor(10);</p>
<p>          OutTextXY(50,220,'SanSerifFont, HorizDir, 10');</p>
<p>          SetTextStyle(0,0,3);</p>
<p>          SetColor(14);</p>
<p>          OutTextXY(50,300,'GothicFont, HorizDir, 14');</p>
<p>          SetTextStyle(0,1,2);</p>
<p>          SetColor(14);</p>
<p>          OutTextXY(30,30,'DefaultFont,VertDir');</p>
<p>          SetTextStyle(0,0,1);</p>
<p>          SetColor(1);</p>
<p>         end;</p>
<p>     '2':begin</p>
<p>          SetColor(4);</p>
<p>          SetTextStyle(1,0,1);</p>
<p>          SetUserCharSize(1,1,1,1);</p>
<p>          OutTextXY(20,120,'Turbo-Pascal 7.0');</p>
<p>          SetUserCharSize(3,2,3,2);</p>
<p>          OutTextXY(20,160,'Turbo-Pascal 7.0');</p>
<p>          SetUserCharSize(2,1,2,1);</p>
<p>          OutTextXY(20,230,'Turbo-Pascal 7.0');</p>
<p>          SetTextStyle(0,0,1);</p>
<p>          SetColor(1);</p>
<p>         end;</p>
<p>     '3':begin</p>
<p>          T1:=InstallUserFont('Goth');</p>
<p>          T2:=InstallUserFont('sans');</p>
<p>          T3:=InstallUserFont('trip');</p>
<p>          T4:=InstallUserFont('bold');</p>
<p>          If GraphResult0 then OutTextXY(50,100,'Нет файла Jois.pas');</p>
<p>   Assign(F63,'Iodis.pas');</p>
<p>   {SI-}</p>
<p>   Reset(F63);     {связь с файлом справок}</p>
<p>   {SI+}</p>
<p>   If IOResult<>0 then Writeln('Нет файла Iodis.pas');</p>
<p>   OKNO1;           {"Контрольные вопросы"}</p>
<p>   readkey;</p>
<p>   ClearDevice;</p>
<p>   Randomize;        {Выбор четырех номеров вопросов}</p>
<p>   For J:=0 to 3 do</p>
<p>    begin</p>
<p>   1:I:=Random(10);</p>
<p>     If I=0 then GOTO 1;</p>
<p>     For K:=0 to J-1 do</p>
<p>      begin</p>
<p>       If M[k]=I then GOTO 1;</p>
<p>      end;</p>
<p>      M[J]:=I;</p>
<p>    end;</p>
<p>    M[1]:=1;</p>
<p>    repeat</p>
<p>    OKNO;</p>
<p>    begin</p>
<p>     Read(F62,At);</p>
<p>     R1:=StrPas(At.P2);{Преобразование ASCIIZ-строки At.P2 в</p>
<p>                          строку типа string}</p>
<p>     Val(R1,Z1,Code);  {Преобразование символьного представления</p>
<p>                         номера вопроса в двоичную форму}</p>
<p>     Y:=20;</p>
<p>     If(Z1=M[0]) or (Z1=M[1]) or (Z1=M[2]) or (Z1=M[3]) then</p>
<p>      begin</p>
<p>       repeat</p>
<p>       S:=StrPas(At.P3); {Преобразование ASCIIZ-строки At.P3 в</p>
<p>                          строку типа string}</p>
<p>       OutTextXY(20,Y,S); {Вывод текста вопроса}</p>
<p>       case At.P1 of</p>
<p>       ' ':begin</p>
<p>           end;</p>
<p>       end;</p>
<p>       Y:=Y+10;</p>
<p>       Read(F62,At);</p>
<p>       until At.P1='*';</p>
<p>       OutTextXY(50,330,'ВВЕДИТЕ НОМЕР ПРАВИЛЬНОГО ОТВЕТА ___');</p>
<p>     2:CH:=ReadKey;</p>
<p>       SetColor(4);</p>
<p>       OutTextXY(320,325,CH);</p>
<p>       SetColor(1);</p>
<p>       readkey;</p>
<p>       If(CH<>'1') and (CH<>'2') and (CH<>'3') and (CH<>'4') then</p>
<p>       begin</p>
<p>        SetFillStyle(1,11);</p>
<p>        Bar(318,320,327,340);</p>
<p>        GoTo 2;</p>
<p>       end</p>
<p>       else</p>
<p>       repeat</p>
<p>       Read(F63,Atr);</p>
<p>       R2:=StrPas(Atr.P2); {Преобразование ASCIIZ-строки Atr.P2 в</p>
<p>                            строку типа string}</p>
<p>       Val(R2,Z2,Code);   {Преобразование символьного представления</p>
<p>                         номера вопроса в двоичную форму}</p>
<p>       If Z2=Z1 then</p>
<p>       begin</p>
<p>        repeat</p>
<p>        If Atr.P3=CH then</p>
<p>         begin</p>
<p>          Y:=100;</p>
<p>          OKNO;</p>
<p>          repeat</p>
<p>          Stt:=StrPas(Atr.P4);   {Преобразование ASCIIZ-строки Atr.P4</p>
<p>                            строку типа string}</p>
<p>          R5:=StrPas(Atr.P5); {Преобразование ASCIIZ-строки Atr.P5 в</p>
<p>                            строку типа string}</p>
<p>          Val(R5,Z5,Code); {Преобразование символьного представления</p>
<p>                            оценки в двоичную форму}</p>
<p>          REZ6:=Round((REZ6+Z5)/2);  {Формирование оценки }</p>
<p>          OutTextXY(20,Y,Stt);</p>
<p>          Y:=Y+10;</p>
<p>          case Atr.P1 of</p>
<p>          ' ':begin</p>
<p>              end;</p>
<p>          end;</p>
<p>          Read(F63,Atr);</p>
<p>          until Atr.P3='*';</p>
<p>          readkey;</p>
<p>          GOTO 3;</p>
<p>         end</p>
<p>         else  Read(F63,Atr);</p>
<p>        until Atr.P1='*';</p>
<p>       end</p>
<p>       until Atr.P1='0';</p>
<p>      end</p>
<p>     else</p>
<p>  3:end;</p>
<p>     until At.P1='0';</p>
<p>    Close(F62);</p>
<p>    Close(F63);</p>
<p>    CloseGraph;</p>
<p>   end;</p>
<p>   begin</p>
<p>   end.</p>
<p>Unit RAZDEL7;</p>
<p>        interface</p>
<p>        uses Crt,Graph,Dos,Strings,MYBOOK;</p>
<p>        type An = record {Теория}</p>
<p>             P1:Char;  {Переменная поля флага : конец файла, номер</p>
<p>                      иллюстрации}</p>
<p>             P2:array[0..69] of char; {Переменная поля текста}</p>
<p>        end;</p>
<p>        type Ant=record {Текст вопросов}</p>
<p>             P1:Char;   {Переменная поля флага:конец файла, номер иллюст-</p>
<p>                         рации, конец вопроса}</p>
<p>             P2:array[0..1] of Char; {Переменная поля номера вопроса}</p>
<p>             P3:array[0..69] of Char; {Переменная поля текста вопроса}</p>
<p>        end;</p>
<p>        type Antr=record { Справки }</p>
<p>             P1:Char; {Переменная поля флага:конец файла, конец вопроса,</p>
<p>                       номер иллюстрации}</p>
<p>             P2:array[0..1] of Char;  {Переменная поля номера вопроса}</p>
<p>             P3:array[0..0] of Char; {Переменная поля флага: номер справки</p>
<p>                                      и конец справки}</p>
<p>             P4:array[0..69] of Char; {Переменная поля текста справки}</p>
<p>             P5:array[0..2] of Char; {Переменная поля оценки}</p>
<p>        end;</p>
<p>        var F7: file of An ;  {Переменные теории}</p>
<p>            A:An;</p>
<p>            N,Y,T:integer;</p>
<p>            St:string[68];</p>
<p>        var F72:file of Ant;  { Переменные вопросов}</p>
<p>            At:Ant;</p>
<p>            R1:string[2];</p>
<p>            Z1:integer;</p>
<p>            S:string[68];</p>
<p>        var F73:file of Antr;   {Переменные справок}</p>
<p>            Atr:Antr;</p>
<p>            R2:string[2];</p>
<p>            R3:string[1];</p>
<p>            Stt:string[68];</p>
<p>            R4:string[2];</p>
<p>            Z2,Z3,Z4:integer;</p>
<p>            CH:  Char;{Переменная для принятия символа с клвиатуры}</p>
<p>            K,J,I:integer; {Переменные циклов}</p>
<p>            M: array[0..3] of integer; {Массив для хранения черырех</p>
<p>                                       выбранных номеров вопросов}</p>
<p>            Code:integer;</p>
<p>        var R5:string[1];   {переменные вывода результатов}</p>
<p>            Z5:integer;</p>
<p>            REZ7:Longint;  {переменная оценки}</p>
<p>        var Size:word;</p>
<p>            pt:pointer;</p>
<p>            u,Nn,xt,yt:integer;</p>
<p>        procedure RAZDEL70;</p>
<p>        implementation</p>
<p>        procedure RAZDEL70;</p>
<p>        Label 0,1,2,3;</p>
<p>        begin</p>
<p>         REZ7:=6;</p>
<p>         GraphRegim;</p>
<p>         Assign(F7,'RAZTEX7.pas');         {связь с файлом теории}</p>
<p>         {SI-}</p>
<p>         Reset(F7);</p>
<p>         {SI+}</p>
<p>         If IOResult <> 0 then Writeln ('Нет файла RAZTEX7.pas');</p>
<p>         repeat</p>
<p>         OKNO;</p>
<p>         For N:=0 to 32 do</p>
<p>          begin</p>
<p>            Read(F7,A);</p>
<p>            St:=StrPas(A.P2);   {Преобразование ASCIIZ-строки A.P2 в строку</p>
<p>                              типа string}</p>
<p>            case A.P1 of</p>
<p>            ' ':OutTextXY(20,10*N+10,St);</p>
<p>            '*':begin</p>
<p>                 SetColor(4);</p>
<p>                 OutTextXY(20,10*N+10,St);</p>
<p>                 SetColor(1);</p>
<p>                end;</p>
<p>            '1':begin</p>
<p>                 For Nn:=0 to 3 do</p>
<p>                  begin</p>
<p>                   GetMem(pt,ImageSize(0,200,50,250));</p>
<p>                   GetImage(0,200,50,250,pt^);</p>
<p>                   u:=0;</p>
<p>                   while  u0 then Writeln('Нет файла Jos.pas');</p>
<p>         Assign(F73,'Ios.pas');</p>
<p>         {SI-}</p>
<p>         Reset(F73);     {связь с файлом справок}</p>
<p>         {SI+}</p>
<p>         If IOResult<>0 then Writeln('Нет файла Ios.pas');</p>
<p>         OKNO1;           {"Контрольные вопросы"}</p>
<p>         readkey;</p>
<p>         ClearDevice;</p>
<p>         Randomize;        {Выбор четырех номеров вопросов}</p>
<p>         For J:=0 to 3 do</p>
<p>          begin</p>
<p>         1:I:=Random(7);</p>
<p>           If I=0 then GOTO 1;</p>
<p>           For K:=0 to J-1 do</p>
<p>            begin</p>
<p>             If M[k]=I then GOTO 1;</p>
<p>            end;</p>
<p>            M[J]:=I;</p>
<p>          end;</p>
<p>          repeat</p>
<p>          OKNO;</p>
<p>          begin</p>
<p>           Read(F72,At);</p>
<p>           R1:=StrPas(At.P2);{Преобразование ASCIIZ-строки At.P2 в</p>
<p>                               строку типа string}</p>
<p>           Val(R1,Z1,Code);  {Преобразование символьного представления</p>
<p>                              номера вопроса в двоичную форму}</p>
<p>           Y:=20;</p>
<p>           If(Z1=M[0]) or (Z1=M[1]) or (Z1=M[2]) or (Z1=M[3]) then</p>
<p>           begin</p>
<p>            repeat</p>
<p>            S:=StrPas(At.P3); {Преобразование ASCIIZ-строки At.P3 в</p>
<p>                               строку типа string}</p>
<p>            OutTextXY(20,Y,S); {Вывод текста вопроса}</p>
<p>            case At.P1 of</p>
<p>            ' ':begin</p>
<p>                end;</p>
<p>            end;</p>
<p>            Y:=Y+10;</p>
<p>            Read(F72,At);</p>
<p>            until At.P1='*';</p>
<p>            OutTextXY(50,320,'ВВЕДИТЕ НОМЕР ПРАВИЛЬНОГО ОТВЕТА ___');</p>
<p>          2:CH:=ReadKey;</p>
<p>            SetColor(4);</p>
<p>            OutTextXY(320,310,CH);</p>
<p>            SetColor(1);</p>
<p>            readkey;</p>
<p>            If(CH<>'1') and (CH<>'2') and (CH<>'3') and (CH<>'4') then</p>
<p>            begin</p>
<p>             SetFillStyle(1,11);</p>
<p>             Bar(318,290,327,320);</p>
<p>             GoTo 2;</p>
<p>            end</p>
<p>            else</p>
<p>            repeat</p>
<p>            Read(F73,Atr);</p>
<p>            R2:=StrPas(Atr.P2); {Преобразование ASCIIZ-строки Atr.P2 в</p>
<p>                                 строку типа string}</p>
<p>            Val(R2,Z2,Code);   {Преобразование символьного представления</p>
<p>                              номера вопроса в двоичную форму}</p>
<p>            If Z2=Z1 then</p>
<p>            begin</p>
<p>             repeat</p>
<p>             If Atr.P3=CH then</p>
<p>              begin</p>
<p>               Y:=100;</p>
<p>               OKNO;</p>
<p>               repeat</p>
<p>               Stt:=StrPas(Atr.P4);   {Преобразование ASCIIZ-строки Atr.P4</p>
<p>в</p>
<p>                                 строку типа string}</p>
<p>               R5:=StrPas(Atr.P5); {Преобразование ASCIIZ-строки Atr.P5 в</p>
<p>                                 строку типа string}</p>
<p>               Val(R5,Z5,Code); {Преобразование символьного представления</p>
<p>                                 оценки в двоичную форму}</p>
<p>               REZ7:=Round((REZ7+Z5)/2);  {Формирование оценки }</p>
<p>               OutTextXY(20,Y,Stt);</p>
<p>               Y:=Y+10;</p>
<p>               case Atr.P1 of</p>
<p>               ' ':begin</p>
<p>                   end;</p>
<p>               end;</p>
<p>               Read(F73,Atr);</p>
<p>               until Atr.P3='*';</p>
<p>               readkey;</p>
<p>               GOTO 3;</p>
<p>              end</p>
<p>              else  Read(F73,Atr);</p>
<p>             until Atr.P1='*';</p>
<p>            end</p>
<p>            until Atr.P1='0';</p>
<p>           end</p>
<p>          else</p>
<p>       3:end;</p>
<p>          until At.P1='0';</p>
<p>         Close(F72);</p>
<p>         Close(F73);</p>
<p>         CloseGraph;</p>
<p>        end;</p>
<p> begin</p>
<p>  end.</p>
<p>unit MYBOOK;</p>
<p> interface</p>
<p> uses Graph,Crt,Strings,Dos;</p>
<p> Type  Dlina=string[10];</p>
<p> var Ch:char;</p>
<p>     Regime:byte;</p>
<p>     c,Gd,Gm,i,x1,x2,y1,y2:integer;</p>
<p>     ArcCoords:ArcCoordsType;</p>
<p>     StAngle,dAngle,KRadius:word;</p>
<p> const OK:array[1..11] of PointType= ((X:0;Y:0),(X:640;Y:0),</p>
<p>         (X:640;Y:350), (X:0;Y:350),(X:0;Y:8),(X:5;Y:8),</p>
<p>         (X:5;Y:345),(X:635;Y:345),(X:635;Y:5),(X:0;Y:5),</p>
<p>         (X:0;Y:0));</p>
<p> procedure Diogramma;</p>
<p> procedure OKNO;</p>
<p> procedure OKNO1;</p>
<p> procedure GraphRegim;</p>
<p> implementation</p>
<p> procedure OKNO;</p>
<p> begin</p>
<p>  SetColor(14);</p>
<p>  DrawPoly(11,OK);</p>
<p>  SetFillStyle(1,14);</p>
<p>  FloodFill(635,2,14);</p>
<p>  SetFillStyle(1,11);</p>
<p>  Bar(6,6,634,344);</p>
<p>  SetColor(1);</p>
<p> end;</p>
<p>procedure OKNO1;</p>
<p>const OK:array[1..11] of PointType= ((X:0;Y:0),(X:640;Y:0),</p>
<p>             (X:640;Y:350), (X:0;Y:350),(X:0;Y:8),(X:5;Y:8),</p>
<p>             (X:5;Y:345), (X:635;Y:345),(X:635;Y:5),(X:0;Y:5),</p>
<p>             (X:0;Y:0));</p>
<p> begin</p>
<p>  SetColor(14);</p>
<p>  DrawPoly(11,OK);</p>
<p>  SetFillStyle(1,14);</p>
<p>  FloodFill(635,2,14);</p>
<p>  SetFillStyle(1,11);</p>
<p>  Bar(6,6,634,344);</p>
<p>  SetColor(4);</p>
<p>  SetTextStyle(0,0,6);</p>
<p>  OutTextXY(50,100,'Контрольные');</p>
<p>  OutTextXY(140,150,'вопросы');</p>
<p>  SetTextStyle(0,0,1);</p>
<p>  SetColor(1);</p>
<p>  end;</p>
<p> procedure Diogramma;</p>
<p> begin</p>
<p>  SetViewPort(0,0,GetMaxX,GetMaxY,true);</p>
<p>  SetColor(11);</p>
<p>  SetLineStyle(0,0,3);</p>
<p>  SetFillStyle(1,13);</p>
<p>  PieSlice(170,210,0,359,120);</p>
<p>  SetFillStyle(9,2);</p>
<p>  PieSlice(170,210,0,30,120);</p>
<p>  SetFillStyle(1,3);</p>
<p>  Sector(170,210,0,359,80,120);</p>
<p>  SetFillStyle(11,5);</p>
<p>  Sector(170,210,0,270,80,120);</p>
<p>  SetFillStyle(1,15);</p>
<p>  Circle(480,210,120);</p>
<p>  FloodFill(480,210,11);</p>
<p>  StAngle:=0;</p>
<p>  dAngle:=360 Div 16;</p>
<p>  while(StAngle+dAngle)grOK then Halt(1);</p>
<p> end;</p>
<p> begin</p>
<p> end.</p>
<p>                                                                Приложение 2</p>
<p>                                 База данных</p>
<p>Для  работы с настоящей программой Вам  необходимо знание языка</p>
<p> TURBO-PASCAL 7.0, интегрированной среды, персонального компьютера</p>
<p> IBM PC.</p>
<p>     Расширенный алгоритмический язык TURBO-PASCAL7.0 в качестве гра-</p>
<p> фических средств  соддержит в  арсенале   два   стандартных  модуля:</p>
<p> Grt и Graph.</p>
<p>      Модуль Grt содержит процедуры и функции следующего  назначения:</p>
<p>                     1.Процедуры задания режимов работы.</p>
<p>                     2.Полцедуры управления цветом.</p>
<p>                     3.Процедуры и функции работы с экраном.</p>
<p>                     4.Функции работы с клавиатурой.</p>
<p>                     5.Процедуры управления  звуком и др.</p>
<p>       Процедуры   и   функции   модуля   Graph   имеют   назначение:</p>
<p>                     1.Управление графическим режимом.</p>
<p>                     2.Управление экраном, окном, страницей.</p>
<p>                     3.Управление цветом и палитрой.</p>
<p>                     4.Работа с точками и линиями.</p>
<p>                     5.Построение различных фигур.</p>
<p>                     6.Работа с текстом.</p>
<p>                     7.Обмен с памятью.</p>
<p>      В настоящей программе они скомпанованы для изучения в следующие</p>
<p> разделы:</p>
<p>                 1.Программирование графических режимов.</p>
<p>                 2.Управление курсором и полем рисования.</p>
<p>                 3.Формирование прямолинейных монохромных изображений</p>
<p>                 4.Управление цветом и стилем изображений.</p>
<p>                 5.Программирование цветных криволинейных изображений</p>
<p>                 6.Формирование графических текстов.</p>
<p>                 7.Программирование озвученных динамических  сцен.</p>
<p>         Первые два раздела являются справочными, а остальные разделы</p>
<p> содержат   теоретическую   часть   и   контрольные    вопросы.</p>
<p>0</p>
<p>ПРОГРАММИРОВАНИЕ ГРАФИЧЕСКИХ РЕЖИМОВ</p>
<p>      Состав, назначение и взаимное положение операторов управления</p>
<p> графическими режимами в языке TURBO-PASCAL удобно рассматривать в</p>
<p> контексте структуры характерной графической программы:</p>
<p>   ---------- program  - заголовок программы.</p>
<p>   I          uses Graph - используемые модули.</p>
<p>   I             {Действия в текстовом режиме}.</p>
<p>   I   ------ InitGraph - инициализация графических средств</p>
<p>   I  I          {Действия в графическом режиме " по умолчанию".</p>
<p>   I  I       SetGraphMode - изменение графического режима.</p>
<p>   I  I          {Действия в новом графическом режиме}.</p>
<p>   I  I   I-- RestoreCrtMode - временный переход в текстовому режиму.</p>
<p>   I  I   I      {Действия в текстовом режиме}.</p>
<p>   I  I   I-> SetGraphMode  - возврат в графический режим.</p>
<p>   I  I          {Действия в графическом режиме}.</p>
<p>   I  I-----> CloseGraph</p>
<p>   I             {Действия в текстовом режиме}.</p>
<p>   I--------> end. - завершение программы.</p>
<p>*     proсedure InitGraph(var GraphDriver:integer;</p>
<p>*                         var GraphMode:integer;</p>
<p>*                         DriverPath:string);</p>
<p>      Инициализирует графическую систему, устанавливает графический</p>
<p> режим, устанавливает исходные значения текущего указателя, палитры,</p>
<p> цвета и т.д..</p>
<p>                ПРОГРАММИРОВАНИЕ ГРАФИЧЕСКИХ РЕЖИМОВ</p>
<p>      GraphDriver - переменная, в которую необходимо записать код</p>
<p>                    требуемого графического драйвера или нуль, если</p>
<p>                    требуется автоматическое определение драйвера.</p>
<p>      GraphMode - переменная, в которую процедура помещает код</p>
<p>                  графического режима.</p>
<p>      DriverPath - строка, содержащая путь к драйверу (если строка</p>
<p>                   пустая, считается, что драйвер находится в текущем</p>
<p>                   каталоге).</p>
<p>      В случае аварийной ситуации процедура устанавливает код ошибки:</p>
<p>           -2  -  нет графического адаптера;</p>
<p>           -3  -  нет драйвера устройства;</p>
<p>           -4  -  ошибка в драйвере;</p>
<p>           -5  -  нет памяти для загрузки драйвера;</p>
<p>          -10  -  недопустимый режим для выбранного драйвера.</p>
<p>*     procedure CloseGraph(без параметров);</p>
<p>      Восстанавливает текстовый режим работы дисплея,бывший до вызова</p>
<p> графической системы, и освобождает динамическую память компьютера,</p>
<p> отведенную под графический драйвер.</p>
<p>*     procedure SetGraphMode(Mode:integer);</p>
<p>      Mode - графический режим.Изменяет ранее используемый графи-</p>
<p> ческий режим либо возвращает систему в прежний графический режим</p>
<p> после временного перехода к текстовому режиму. Условием использо-</p>
<p> вания оператора является сохранение в динамической области ОЗУ ранее</p>
<p> загруженного графического драйвера.</p>
<p>                 ПРОГРАММИРОВАНИЕ ГРАФИЧЕСКИХ РЕЖИМОВ</p>
<p>*     procedure RestoreCrtMode(без параметров);</p>
<p>      Восстанавливает исходный текстовый режим дисплея без потери в</p>
<p> динамической области ОЗУ програмы графического драйвера.</p>
<p>      Имеется ряд операторов для получения справок о текущем</p>
<p> графическом режиме:</p>
<p>*     function GetDriverName:string; -</p>
<p>                                      Возвращает строковое название</p>
<p>                                      текущего графического адаптера.</p>
<p>*     function GetModeName(ModeNumber:integer):string -</p>
<p>                                   Возвращает строковое название</p>
<p>                                   требуемого графического режима.</p>
<p>*     function GetMaxMode:integer  -</p>
<p>                                     Возвращает максимальный номер</p>
<p>                                     графического режима для текущего</p>
<p>                                     адаптера.</p>
<p>*     procedure GetModeRange(GraphDriver:integer;</p>
<p>*                            var LowMode,HighMode:integer); -</p>
<p>       Выдает справку о диапазоне номеров графических режимов задан-</p>
<p> ного графического адаптера. Возвращаемые параметры LowMode и</p>
<p> HighMode означают минимальный и максимальный номера графических</p>
<p> режимов, соответственно.</p>
<p>*     function GetGraphMode:integer;  -</p>
<p>                       Возвращает номер текущего графического режима.</p>
<p>                 ПРОГРАММИРОВАНИЕ ГРАФИЧЕСКИХ РЕЖИМОВ</p>
<p>*     procedure GetAspectRatio(var Xasp, Yasp:word); -</p>
<p>                    Возвращает в своих параметрах ввеличины</p>
<p>                    дискретов экрана по осям X и Y ,сооответственно.</p>
<p>0</p>
<p>УПРАВЛЕНИЕ КУРСОРОМ И ПОЛЕМ РИСОВАНИЯ</p>
<p>   В графическом режиме  также как и  в текстовом положение выво-</p>
<p> димых на экран данных в каждый момент времени определяется   курcо-</p>
<p> ром. Однако,  в  этом  случае  курсор  невидим. При вхождении в гра-</p>
<p> фический режим с помощью процедуры  InitGraph  курсор  автоматически</p>
<p> помещается в левый верхний угол экрана, фон экрана принимает первый</p>
<p> (черный) цвет палитры. Для определения и изменения положения курсора</p>
<p> без рисования в TURBO-PASCAL предусмотрены операторы MoveTo,MoveRel,</p>
<p> GetX,GetY.</p>
<p>*     procedure MoveTo(x,y:integer);</p>
<p> где x,y - координаты по горизонтали и вертикали соответственно</p>
<p> в отсчете от левого верхнего угла экрана.</p>
<p>*     procedure MoveRel(Dx,Dy:integer);</p>
<p>      Смещает курсор без рисования относительно его текущего поло-</p>
<p> жения. Dx, Dy - смещения курсора по координатам x и y.</p>
<p>*     function GetX: word;</p>
<p>      Определяет для курсора значение координаты X.</p>
<p>*     function GetY: word;</p>
<p>      Определяет для курсора значение координаты Y.</p>
<p>              УПРАВЛЕНИЕ КУРСОРОМ И ПОЛЕМ РИСОВАНИЯ</p>
<p>При управлении положением курсора полезными оказываются также</p>
<p> справочные функции GetMaxX и GetMaxY, которые возвращают координаты</p>
<p> самой правой и самой нижней возможных графических позиций курсора,</p>
<p> соответственно, для текущего графического драйвера и режима.</p>
<p>*     procedure ClearDevice;</p>
<p>      Очищает экран от следов предшествовавшего рисования и восста-</p>
<p> навливает исходные параметры графики.</p>
<p>*     procedure SetViewPort(X1,Y1,X2,Y2:word;Clip:boolean);</p>
<p>      Устанавливает прямоугольное окно рисования с перемещением</p>
<p> курсора в левый верхний угол окна. Параметры процедуры имеют следу-</p>
<p> ющий смысл:(X1,Y1) и (X2,Y2) определяют соответствввенно координаты</p>
<p> левого верхнего и правого нижнего углов окна, а Clip принимает</p>
<p> значение true при необходимости отсечения изображения за границами</p>
<p> окна и false, когда этого делать не надо .</p>
<p>*     procedure ClearViewPort;</p>
<p>      Очищает текущее окно, заполняя его первым цветом текущей</p>
<p> цветовой палитры, и переводит курсор в левый верхний угол окна.</p>
<p>*     procedure GetViewSettings(var ViewPortType);</p>
<p>      Возвращает параметры активного окна просмотра в переменной</p>
<p> ViewPort. Тип ViewPortType  описан в модуле Graph.</p>
<p>0</p>
<p>ФОРМИРОВАНИЕ ПРЯМОЛИНЕЙНЫХ МОНОХРОМНЫХ ИЗОБРАЖЕНИЙ</p>
<p> В данном разделе не рассматривается управление</p>
<p> цветом и стилем рисования и закрепляется за</p>
<p> фоном светло-серый, а за курсором синий цвет.</p>
<p>*   procedure LineTo(X,Y:integer);</p>
<p>щ</p>
<p>    Проводит отрезок прямой от текущего положения</p>
<p> курсора к заданной точке (X,Y).</p>
<p>*   procedure LineRel(Dx,Dy:integer);</p>
<p>2</p>
<p>    Рисует отрезок прямой по направлению к точке,</p>
<p> смещенной от текущего положения курсора на рас-</p>
<p> стояние Dx и Dy по осям OX и OY .</p>
<p>*   procedure Line(X1,Y1,X2,Y2:integer);</p>
<p>3</p>
<p>    Проводит прямую между точками (X1,Y1) и</p>
<p> (X2,Y2).</p>
<p>    После выполнения этой и последующих процедур</p>
<p> курсор возвращается в предшествующее положение.</p>
<p>           ФОРМИРОВАНИЕ ПРЯМОЛИНЕЙНЫХ МОНОХРОМНЫХ ИЗОБРАЖЕНИЙ</p>
<p>*   procedure Rectangle(X1,Y1,X2,Y2:integer);</p>
<p>4</p>
<p> Строит контуры прямоугольника с координатами</p>
<p> левого верхнего (X1,Y1) и нижнего правого</p>
<p> (X2,Y2) углов.</p>
<p>*    procedure Bar(X1,Y1,X2,Y2:integer);</p>
<IDXSKIP><p>5</p></IDXSKIP>
<p> Строит прямоугольник, закрашенный текущим цветом</p>
<p> и орнаментом заполнения. (X1,Y1), (X2,Y2) -</p>
<p> координаты левого верхнего и правого нижнего</p>
<p> углов соответственно.</p>
<p>*     procedure Bar3D(X1,Y1,X2,Y2:integer;</p>
<p>*                     Depth:word;Top:boolean)</p>
<p>6</p>
<p> Рисует аксонометрию закрашенного по фасаду</p>
<p> прямоугольного параллелепипеда.</p>
<p> (X1,Y1),(X2,Y2) - координаты левого верхнего и</p>
<p>                   правого нижнего  углов</p>
<p>                   прямоугольного фасада.</p>
<p> Depth - ширина боковой грани (отсчитывается по</p>
<p>         годизонтали.</p>
<p> Top - признак включения верхней грани.</p>
<p>          ФОРМИРОВАНИЕ ПРЯМОЛИНЕЙНЫХ МОНОХРОМНЫХ ИЗОБРАЖЕНИЙ</p>
<p>*      procedure DrawPoly(NumPoints:word;</p>
<p>*                         var PolyPoints);</p>
<p>7Строит ломаную линию.</p>
<p> NumPoints - число вершин многоугольника</p>
<p> PolyPoints - переменная без типа, содержащая</p>
<p> NumPoints+1 пар координат вершин многоугольника</p>
<p> (первая и последняя вершины должны совпадать).</p>
<p>*      procedure FillPoly(NumPoints:word;var PolyPoints);</p>
<p>8</p>
<p> Закрашивает многоугольник текущим цветом и</p>
<p> орнаментом. Параметры NumPoints и PolyPoints</p>
<p> именют тот же смысл и тип, что и одноимеынные</p>
<p> параметры процедуры DrawPoly.</p>
<p>0</p>
<p>01С ПОМОЩЬЮ КАКИХ ПРОЦЕДУР МОЖНО НАИБОЛЕЕ РАЦИОНАЛЬНО ПОСТРОИТЬ</p>
<p>   ОТРЕЗОК , ЕСЛИ ИЗВЕСТНЫ КООРДИНАТЫ КОНЦОВ?</p>
<p>   1  LineTo(X,Y);</p>
<p>      Line(X1,Y1,X2,Y2);</p>
<p>   2  Line(X1,Y1,X2,Y2);</p>
<p>      DrawPoly(NumPoint,PolyPoints);</p>
<p>   3  LineTo(X,Y);</p>
<p>      Line(X1,Y1,X2,Y2);</p>
<p>      DrawPoly(NumPoint,Poly Points);</p>
<p>   4  Line(X1,Y1,X2,Y2);</p>
<p>*</p>
<p> 02КАК ПОСТРОИТЬ СТОЛБЧАТУЮ ДИАГРАММУ В ЗАРАНЕЕ СФОРМИРОВАННОЙ РАМКЕ?</p>
<p>1</p>
<p>   1  Bar3D(X1,Y1,X2,Y2,Depth,true);</p>
<p>      SetViewPort(X1,Y1,X2,Y2,false);</p>
<p>      ClearViewPort;</p>
<p>      Bar3D(X1,Y2,X2,Y3,Depth,false);</p>
<p>   2  Bar3D(X1,Y1,X2,Y2,Depth,true);</p>
<p>      SetViewPort(X1,Y1,X2,Y2,Depth,true);</p>
<p>      ClearViewPort;</p>
<p>      Bar3D(X1,Y1,X2,Y3,Depth,false);</p>
<p>   3  Bar3D(X1,Y1,X2,Y2,Depth,true);</p>
<p>      Bar3D(X1,Y2,X2,Y3,Depth,false);</p>
<p>   4  Bar3D(X1,Y1,X2,Y2,Depth,true);</p>
<p>      Bar3D(X1,Y2,X2,Y3,Depth,true);</p>
<p>*</p>
<p> 03КАК НА ПОЛНОСТЬЮ ЗАКРАШЕННОМ ЭКРАНЕ ПОЛУЧИТЬ НЕЗАКРАШЕННУЮ ПРЯМОУ-</p>
<p>   ГОЛЬНУЮ ОБЛАСТЬ?</p>
<p>    1  Bar(X1,Y1,X2,Y2);</p>
<p>       SetViewPort(X1,Y1,X2,Y2,true);</p>
<p>       ClearViewPort;</p>
<p>    2  Bar(X1,Y1,X2,Y2);</p>
<p>    3  Bar3D(X1,Y1,X2,Y2,Depth,true);</p>
<p>    4  Bar3D(X1,Y1,X2,Y2,false);</p>
<p>*</p>
<p> 04КАК ИСКЛЮЧИТЬ ПОЯВЛЕНИЕ НА ЭКРАНЕ ЗАТЕНЯЕМЫХ КОНТУРОВ НИЖНЕГО</p>
<p>2  ПАРАЛЛЕЛЕПИПЕДА В ОБЬЕМНОЙ СТОЛБЧАТОЙ ДИАГРАММЕ?</p>
<p>    1  Использовать процедуру Bar3D дважды. построенный верхний парал-</p>
<p>       лелепипед "закроет" автоматически верхнюю грань нижнего парал-</p>
<p>       лелепипеда.</p>
<p>    2  Установить параметр Top=false в процедуре Bar3D при построении</p>
<p>       нижнего параллелепипеда.</p>
<p>    3  Установить параметр Top=false в процедуре Bar3D при построении</p>
<p>       верхнего параллелепипеда.</p>
<p>    4  Построить ломаную линию соответствующую контурам верхней грани</p>
<p>       нижжнего параллелепипеда с помощью процедуры DrawPole и закра-</p>
<p>       сить его в белый цвет с помощью процедуры FillPole.</p>
<p>*</p>
<p> 05КАК НА ЭКРАНЕ ЗАКРАСИТЬ БЕЛЫМ ЦВЕТОМ ОБЛАСТЬ, ОГРАНИЧЕННУЮ ЗВЕЗДОЙ?</p>
<p>    1  Построить звезду с помощью процедуры DrawPole(10,zve),где zve -</p>
<p>       константа типа PointType, является массивом координат вершин</p>
<p>       фигуры и содержит 10 элементов.</p>
<p>    2  Использовать процедуру DrawPole(10,zvez) , где константа zvez</p>
<p>       содержит 11 элементов.</p>
<p>    3  Применить процедуру FillPole(10,zves), где константа zves содер-</p>
<p>       жит 11 элементов.</p>
<p>    4  Установить цвет рисования белый и с помощью процедуры</p>
<p>       FillPole(10,zves) построить звезду, закрашенную белым цветом.</p>
<p>*</p>
<p> 06С ПОМОЩЬЮ КАКОЙ ПРОЦЕДУРЫ ИЛИ ФУНКЦИИ ВОЗМОЖНО УСТАНОВИТЬ СТРОКОВОЕ</p>
<p>   НАЗВАНИЕ ТЕКУЩЕГО ГРАФИЧЕСКОГО АДАПТЕРА?</p>
<p>     1  Функция GetDriverName;</p>
<p>     2  Функция GetModeName(ModeNumber);</p>
<p>     3  Функция GetMaxMode;</p>
<p>     4  Процедура GetModeRange(GraphDriver;LowMode,HighMode);</p>
<p>*</p>
<p> 07СУЩЕСТВУЕТ ЛИ ВОЗМОЖНОСТЬ ОПРЕДЕЛЕНИЯ ЗНАЧЕНИЯ КООРДИНАТ КУРСОРА.</p>
<p>      1  Нет</p>
<p>      2  Да, с помощью функций GetX, GetY.</p>
<p>      3  Да, с помощью функций GetMaxX, GetMaxY.</p>
<p>      4  Да, с помощью функции MoveRel.</p>
<p>*</p>
<p> 08С ПОМОЩЬЮ КАКОГО ФРАГМЕНТА ПРОГРАММЫ МОЖНО ВЫВЕСТИ НА ЭКРАН</p>
<p>3  СЛЕДУЮЩУЮ КАРТИНКУ? КУРСОР НАХОДИТСЯ В ТОЧКЕ (X1,Y1).</p>
<p>      1  Line(X,Y,X1,Y1);</p>
<p>         MoveRel(X,Y+dY);</p>
<p>         Line(X,Y+dY,X1,Y1);</p>
<p>         MoveRel(0,dY);</p>
<p>         LineTo(X1,Y1);</p>
<p>      2  LineTo(X1,Y1);</p>
<p>         LineRel(0,dY);</p>
<p>         LineRel(0,2dY);</p>
<p>      3  LineTo(X,Y);</p>
<p>         MoveRel(0,dY);</p>
<p>         Line(X,Y+dY,X1,Y1);</p>
<p>         MoveRel(0,dY);</p>
<p>         Line(X,Y+2dY,X1,Y1);</p>
<p>      4  LineTo(X,Y);</p>
<p>         LineRel(0,dY);</p>
<p>         LineRel(0,2dY);</p>
<p>*</p>
<p> 09ГДЕ ПОМЕЩАЕТСЯ КУРСОР И КАКОЙ ФОН ЭКРАНА УСТАНАВЛИВАЕТСЯ ПРИ</p>
<p>   ВХОЖДЕНИИ В ГРАФИЧЕСКИЙ РЕЖИМ С ПОМОЩЬЮ ПРОЦЕДУРЫ InitGraph?</p>
<p>      1  Курсор помещается в центр экрана и устанавливается черный</p>
<p>         цвет фона экрана.</p>
<p>      2  Курсор помещается в правый верхний угол экрана и устанав-</p>
<p>         ливается черный цвет фона экрана.</p>
<p>      3  Курсор помещается в левый верхний угол экрана и устанавлива-</p>
<p>         ется черный цвет фона экрана.</p>
<p>      4  Курсор помещается в левый верхний угол экрана и устанавлива-</p>
<p>         ется белый цвет фона экрана.</p>
<p>*</p>
<p> 10С КАКОЙ ЧАСТОТОЙ ОБНОВЛЯЕТ ЭКРАН КОНТРОЛЛЕР ДИСПЛЕЯ ПЭВМ IBM?</p>
<p>      1  50-60 раз/сек</p>
<p>      2  20-40 раз/сек</p>
<p>      3  100-120 раз/сек</p>
<p>      4  200 раз/сек</p>
<p>*</p>
<p>0</p>
<p>011Процедуру LineTo(X,Y) можно использовать только в случае, когда     002</p>
<p>    один из концов отрезка совпадает с положением курсора.</p>
<p>   *</p>
<p>   2Ответ правильный. Однако, применение процедуры DrawPoly в данном    004</p>
<p>    случае не является рациональным.</p>
<p>   *</p>
<p>   3Процедуру LineTo(X,Y) можно использовать только в случае, когда один002</p>
<p>    из концов отрезка совпадает с положением курсора. Процедура DrowPoly</p>
<p>    не является в данном случае рациональной.</p>
<p>   *</p>
<p>   4Ответ правильный.                                                   005</p>
<p>   *</p>
<p>*</p>
<p> 021Отввет неверный. Верхний параллелепипед будет иметь очищенную перед-002</p>
<p>    нюю грань.  Это не требуется по условию задачи. При этом неверно</p>
<p>    указаны параметры процедуры Bar3D при построении второго параллеле-</p>
<p>    пипеда.</p>
<p>   *</p>
<p>   2Неправильно указаны параметры процедуры SetViewPort. Координаты окна002</p>
<p>    отсчитываются от левого верхнего угла экрана в то время как для про-</p>
<p>    цедуры Bar3D от левого верхнего угла окна.</p>
<p>   *</p>
<p>   3Ответ правильный.                                                   005</p>
<p>   *</p>
<p>   4Ответ не точный.На экране появятся затененные контуры нижнего парал-003</p>
<p>    лелепипеда.</p>
<p>   *</p>
<p>*</p>
<p> 031Ответ не точный.Процедуры SetViewPort и ClearViewPort в данном слу- 003</p>
<p>    чае излишние,т.к.уже процедура Bar рисует прямоугольную область,</p>
<p>    которую закрашивает первым цветом палитры, если цвет не задан ранее</p>
<p>   *</p>
<p>   2Ответ правильный                                                    005</p>
<p>   *</p>
<p>   3Процедура Bar3D рисует аксонометрию прямоугольного параллелепипеда,а002</p>
<p>    не прямоугольную область.</p>
<p>   *</p>
<p>   4Процедура Bar3D рисует аксонометрию прямоугольного параллелепипеда,а002</p>
<p>    не прямоугольную область.</p>
<p>   *</p>
<p>*</p>
<p> 041Ответ неверный. Процедура Bar3D рисует контуры аксонометрии закра-  002</p>
<p>    шенного по фасаду параллелепипеда. Боковая и верхняя грани не закра-</p>
<p>    шиваются, т.о. затемненная часть верхней грани нижнего параллелепи-</p>
<p>    педа не исчезнет.</p>
<p>   *</p>
<p>   2Ответ правильный.                                                   005</p>
<p>   *</p>
<p>   3Ответ неверный. Параметр Top процедуры Bar3D регулирует наличие или 002</p>
<p>    отсутствие верхней (а не нижней) левой грани аксонометрии.</p>
<p>   *</p>
<p>   4Ответ неверный. Достаточно установить параметр Top=False процедуры  002</p>
<p>    Bar3D. Дополниетльные меры излишне.</p>
<p>   *</p>
<p>*</p>
<p> 051Ответ неверный. Процедура DrawPoly построит звезду с одной невидимой002</p>
<p>    гранью. Цвет фигуры будет соответствовать цвету фона.</p>
<p>   *</p>
<p>   2Ответ неверный. Цвет фигуры будет соответствовать цвету фона и будет002</p>
<p>    белым только в случае, когда фон экрана белый.</p>
<p>   *</p>
<p>   3Ответ правильный.                                                   005</p>
<p>   *</p>
<p>   4Ответ правильный. Однако, закраска белым цветом возможна и          004</p>
<p>    по умолчанию.</p>
<p>   *</p>
<p>*</p>
<p> 061Ответ правильный.                                                   005</p>
<p>   *</p>
<p>   2Ответ неверный. Функция GetModeName возвращает строковое название   002</p>
<p>    требуемого графического режима для текущего адаптера.</p>
<p>   *</p>
<p>   3Ответ неверный.Функция GetMaxMode возвращает максимальный номер     002</p>
<p>    графического режима для текущего адаптера.</p>
<p>   *</p>
<p>   4Ответ неверный. Процедура GetModeRange выдает справку о диапазоне   002</p>
<p>    номеров графических режимов заданного графического адаптера.</p>
<p>   *</p>
<p>*</p>
<p> 071Ответ неверный. Такая возможность существует.                       002</p>
<p>   *</p>
<p>   2Ответ правильный.                                                   005</p>
<p>   *</p>
<p>   3Ответ неверный. Данные процедуры возвращают максимально возможные   002</p>
<p>    для текущего драйвера и режима графические позиции курсора.</p>
<p>   *</p>
<p>   4Ответ неверный. Процедура MoveRel смещает курсор относительно его   002</p>
<p>    текущей позиции.</p>
<p>   *</p>
<p>*</p>
<p>1081Ответ неверный. Рисунок будет иметь следующий вид:                  002</p>
<p>   *</p>
<p>2  2Ответ неверный.Рисунок будет иметь следующий вид:                   002</p>
<p>   *</p>
<p>   3Ответ правильный.                                                   005</p>
<p>   *</p>
<p>3  4Ответ неверный. рисунок будет иметь следующий вид:                  002</p>
<p>   *</p>
<p>*</p>
<p> 091Ответ неверный.                                                     002</p>
<p>   *</p>
<p>   2Ответ неверный.                                                     002</p>
<p>   *</p>
<p>   3Ответ правильный.                                                   005</p>
<p>   *</p>
<p>   4Ответ неверный.                                                     002</p>
<p>   *</p>
<p>*</p>
<p> 101Ответ правильный.                                                   005</p>
<p>   *</p>
<p>   2Ответ неверный.                                                     002</p>
<p>   *</p>
<p>   3Ответ неверный.                                                     002</p>
<p>   *</p>
<p>   4Ответ неверный.                                                     002</p>
<p>   *</p>
<p>*</p>
<p>0</p>
<p>УПРАВЛЕНИЕ ЦВЕТОМ И СТИЛЕМ ИЗОБРАЖЕНИЙ</p>
<p>      В данном разделе мы рассмотрим возможности управления цветовой</p>
<p> палитрой и стилем рисования.</p>
<p>*     procedure GetPalette(var PaletteType);</p>
<p>      Возвращает текущую плитру и количество цветов в ней. Применя-</p>
<p> ется только в графическом режиме и только с драйверами  EGA, EGA 64</p>
<p> и VGA.</p>
<p>*     procedure SetAllPalette(var Palette);</p>
<p>      Меняет все цвета палитры на заданные. Переменная без типа</p>
<p> Palette в первом байте содержит число N- количество цветов в палитре</p>
<p> а в последующих N байах - коды задаваемых цветов. Если задана вели-</p>
<p> чина -1, то исходный цвет остается без изменений.</p>
<p>*      procedure SetPalette(NumberColor:word;Color:byte);</p>
<p>       Изменяет один из цветов палитры. NumberColor - порядковый</p>
<p> номер изменяемого цвета. Color -код нового цвета.</p>
<p>*       procedure SetColor(Color:word);</p>
<p>        Устанавливает текущий цвет рисования.Color - код цвета либо</p>
<p> его имя. Возможные значения параметра приведены на следующем экране</p>
<p>                 УПРАВЛЕНИЕ ЦВЕТОМ И СТИЛЕМ ИЗОБРАЖЕНИЯ</p>
<p>_____________________________________________________________________</p>
<p>    Имя       Значение   Назначение</p>
<p> --------------------------------------------------------------------</p>
<p> Black           0       черный</p>
<p> Blue            1       синий</p>
<p> Green           2       зеленый</p>
<p> Cyan            3       голубой</p>
<p> Red             4       красный</p>
<p> Magenta         5       фиолетовый</p>
<p> Brown           6       коричневый</p>
<p> LightGray       7       светло-серый</p>
<p> DarkGray        8       темно-серый</p>
<p> LightBlue       9       светло-синий</p>
<p> LightGreen     10       светло-зеленый</p>
<p> LightCyan      11       светло-голубой</p>
<p> LightRed       12       розовый</p>
<p> LightMagenta   13       светло-фиолетовый</p>
<p> Yellow         14       желтый</p>
<p>1White          15       белый</p>
<p>               УПРАВЛЕНИЕ ЦВЕТОМ И СТИЛЕМ ИЗОБРАЖЕНИЯ</p>
<p>*      procedure SetBKColor(Color:word);</p>
<p>      Устанавливает цвет фона рисования. Color - код или имя цвета.</p>
<p>      Для получения справок о кодах цветов, связанных с курсором и</p>
<p> фоном рисования, используются функции:</p>
<p>                                       function GetColor:word;</p>
<p>                                       function GetBKColor:word;</p>
<p>      Факторами, определяющими стиль рисования, являются толщина и</p>
<p> способ выражения линий, используемых в изображениях контурных линий</p>
<p> и линий закраски замкнутых фрагментов рисунков.</p>
<p>*     procedure SetLineStyle(LineStyle:word; Pattern:word;</p>
<p>*                            Thiekness:word);</p>
<p>      Устанавливает стиль контурных линий и их толщину. Параметр</p>
<p> LineStyle может  принимать следующие значения:</p>
<p> SolidLn   = 0   ___________________________________________________</p>
<p> DottedLn  = 1   ...................................................</p>
<p> CenterLn  = 2   ._._._._._._._._._._._._._._._._._._._._._._._._._ .</p>
<p> DashedLn  = 3   _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _</p>
<p> UserBitLn = 4   тип, определяемый пользователем.</p>
<p>      Когда LineStyle=userBitLn, задается параметр Pattern - шаблон</p>
<p> линии - двухбайтовое число, каждый бит которого равен 1, если оче-</p>
<p> редной пиксель следует высветить, и 0 в противном случае.</p>
<p>      Параметр Thickness устанавливает толщину линий и может при-</p>
<p> нимать следующие значения:   NormWidth = 1  -  тонкая линия</p>
<p>                              ThickWidth= 3  -  толстая линия</p>
<p>                УПРАВЛЕНИЕ ЦВЕТОМ И СТИЛЕМ ИЗОБРАЖЕНИЯ</p>
<p>*     procedure GetLineSettings(var LineInfo:LineSettingsType);</p>
<p>      Возвращает параметры текущего стиля контурных линий. Тип</p>
<p> LineSettingsType описан в модуле Graph как запись, поля которой:</p>
<p> LineStyle:word;</p>
<p> Pattern:word;</p>
<p> Thickness:word;, имеют тот же смысл, что и одноименные параметры</p>
<p> процедуры SetLineStyle.</p>
<p>*     procedure SetFillStyle[(Pattern:word;Color:word)];</p>
<p>      Устанавливает стандартные орнамент и цвет заполнения. "По умол-</p>
<p> чанию" закраска белая сплошная. Параметр Color - установка цвета.</p>
<p> Возможные значения параметра Pattern проиллюстрированы на следующем</p>
<p> экране.</p>
<p>*     procedure SetFillPattern(Pattern:FillPatternType;Color:word);</p>
<p>      Задает произвольный орнамент и цвет заполнения фигур.</p>
<p> Pattern - задаваемый пользователем орнамент.</p>
<p> typeFillPatternType=array[1..8] of byte;</p>
<p> Color - код цвета в палитре.</p>
<p>*      procedure GetFillSettings(varFillInfo:FillSettingsType)</p>
<p>       Возвращает код и цвет стандартного образца закраски в пере-</p>
<p> менных Color и Pattern  соответственно.</p>
<p>              УПРАВЛЕНИЕ ЦВЕТОМ И СТИЛЕМ ИЗОБРАЖЕНИЯ</p>
<p> --------------------------------------------------------------------</p>
<p>      Имя        Значение</p>
<p> --------------------------------------------------------------------</p>
<p>  EmptyFill         0        Фоновым цветом</p>
<p>  SolidFill         1        Заданным цветом</p>
<p>  LineFill          2</p>
<p>  LtSlashFill       3</p>
<p>  SlashFill         4</p>
<p>  BkSlashFill       5</p>
<p>  LtBkSlashFill     6</p>
<p>  HatchFill         7</p>
<p>  XHatchFill        8</p>
<p>  InterLeaveFill    9</p>
<p>  WideDotFill      10</p>
<p>  CloseDotFill     11</p>
<p>2 UserFill         12         Заполнение определяется пользователем</p>
<p>0--------------------------------------------------------------------</p>
<p>01С ПОМОЩЬЮ КАКОЙ ПРОЦЕДУРЫ МОЖНО ВЫВЕСТИ НА ЭКРАН СПИСОК КОДОВ</p>
<p>   ЦВЕТОВ НЕИЗВЕСТНОЙ ВАМ ТЕКУЩЕЙ ЦВЕТОВОЙ ПАЛИТРЫ?</p>
<p>     1  GetPalette(Palette);</p>
<p>1    2  SetPalette(NumberColor,Color);</p>
<p>     3  SetAllPalette(Palette);</p>
<p>     4  SetLineStyle(LineStyle,Pattern,Thickness);</p>
<p>*</p>
<p> 02УСТАНОВИТЕ НА ЧЕРНОМ ЭКРАНЕ КВАДРАТНОЕ ОКНО И ЗАКРАСЬТЕ ЕГО</p>
<p>   СПЛОШНЫМ БИРЮЗОВЫМ ЦВЕТОМ(3).</p>
<p>     1  SetFillStyle(0,3);</p>
<p>        Bar(X1,Y1,X1+d,Y1+d);</p>
<p>     2  SetBKColor(0);</p>
<p>        SetColor(3);</p>
<p>        Bar(X1,Y1,X1+d,Y1+d);</p>
<p>     3  SetBKColor(0);</p>
<p>        SetFillStyle(0,3);</p>
<p>        Bar(X1,Y1,X1+d,Y1+d);</p>
<p>     4  SetFillStyle(0,3);</p>
<p>        SetBKColor(0);</p>
<p>        Bar(X1,Y1,X1+d,Y1+d);</p>
<p>*</p>
<p> 03С ПОМОЩЬЮ КАКОГО ФРАГМЕНТА ВОЗМОЖНО ЗАКРАСИТЬ ПРЯМОУГОЛЬНУЮ</p>
<p>   ОБЛАСТЬ КРАСНОГО(4) ЭКРАНА ЧАСТОЙ СЕТКОЙ(9) СИНЕГО ЦВЕТА(1)?</p>
<p>     1  SetBKColor(4);</p>
<p>        SetFillStyle(9,1,0);</p>
<p>        Bar(X1,Y1,X2,Y2);</p>
<p>     2  SetBKColor(4);</p>
<p>        Rectangle(X1,Y1,X2,Y2);</p>
<p>        SetFillStyle(9,1,0);</p>
<p>     3  SetBKColor(4);</p>
<p>        SetFillStyle(9,1);</p>
<p>        Bar(X1,Y1,X2,Y2);</p>
<p>     4  SetBKColor(4);</p>
<p>        Bar(X1,Y1,X2,Y2);</p>
<p>        SetFillStyle(9,1);</p>
<p>*</p>
<p> 04ИМЕЕТСЯ ЛИ В ЯЗЫКЕ TURBO PASCAL ВОЗМОЖНОСТЬ УСТАНАВЛИВАТЬ</p>
<p>   ПРОИЗВОЛЬНЫЙ (ПО ЖЕЛАНИЮ ПОЛЬЗОВАТЕЛЯ) ЦВЕТ РИСОВАНИЯ, СТИЛЬ И</p>
<p>   ТОЛЩИНУ ЛИНИЙ РИСОВАНИЯ?</p>
<p>     1  Нет</p>
<p>     2  Только цвет</p>
<p>     3  Только стиль линий</p>
<p>     4  Только стиль и толщину линий</p>
<p>*</p>
<p> 05НАПИШИТЕ ПРОГРАММУ РИСОВАНИЯ КОНТУРОВ ПРЯМОУГОЛЬНИКА ЛИНИЯМИ,</p>
<p>   СОСТОЯЩИМИ ИЗ ЧЕРЕДУЮЩИХСЯ ПАР ТОЧЕК И ТИРЕ.</p>
<p>      1  GetLineStyle(0,0,1);</p>
<p>         Rectangle(X1,Y1X2,Y2);</p>
<p>      2  SetLineStyle(4,$3,1);</p>
<p>         Rectangle(X1,Y1,X2,Y2);</p>
<p>      3  SetLineStyle(4,3,1);</p>
<p>         Rectangle(X1,Y1,X2,Y2);</p>
<p>      4  SetLineStyle(0,13,1);</p>
<p>         Rectangle(X1,Y1,X2,Y2);</p>
<p>*</p>
<p> 06КАК ОБЕСПЕЧИТЬ ЗАКРАСКУ КАКОЙ-ЛИБО ОБЛАСТИ ЭКРАНА КРАСНЫМ(4)</p>
<p>   ЦВЕТОМ 25% ЯРКОСТИ?</p>
<p>     1  SetFillPatern(1,2,4,8,1,2,4,8);</p>
<p>     2  SetFillPatern(1,2,4,8,1,2,4,8;4);</p>
<p>     3  SetFillPatern(11,22,44,88,11,22,44,88);</p>
<p>     4  SetFillPatern(11,22,44,88,11,22,44,88;4);</p>
<p>*</p>
<p> 07КАКАЯ ИЗ НИЖЕУКАЗАННЫХ ПРОЦЕДУР УСТАНАВЛИВАЕТ СТАНДАРТНЫЕ</p>
<p>   ОБРАЗЦЫ ЗАКРАСКИ И ИХ ЦВЕТА?</p>
<p>     1  SetFillStyle(Pattern:word;Color:word);</p>
<p>     2  SetFillPatern(Pattern:FillPatternType;Color:Word);</p>
<p>     3  GetFillSettings(var FillInfo:FillSettingsType);</p>
<p>     4  SetLineStyle(LineStyle:Word;Pattern:Word;Thickness:Word);</p>
<p>*</p>
<p> 08С ПОМОЩЬЮ КАКОЙ ПРОЦЕДУРЫ МОЖНО ЗАМЕНИТЬ НУЛЕВОЙ,ЧЕРНЫЙ, ЦВЕТ</p>
<p>   ПАЛИТРЫ НА ДЕВЯТЫЙ, СВЕТЛО-ГОЛУБОЙ?</p>
<p>     1  SetAllPalette;</p>
<p>     2  SetColor;</p>
<p>     3  SetPalette;</p>
<p>     4  GetPalette;</p>
<p>*</p>
<p> 09НАПИШИТЕ ПРОГРАММУ ЗАМЕНЫ ЦВЕТА НЕИЗВЕСТНОГО СТАНДАРТНОГО СТИЛЯ</p>
<p>   ЗАКРАСКИ НА ЦВЕТ X.</p>
<p>     1  Color:=X;</p>
<p>        SetFillStyle(Pattern,Color);</p>
<p>     2  GetFillSettings;</p>
<p>        Color:=X;</p>
<p>        SetFillStyle(Pattern;Color);</p>
<p>     3  GetFillSettings;</p>
<p>        Color:=X;</p>
<p>        SetFillPattern(Pattern;Color);</p>
<p>     4  GetFillSettings;</p>
<p>        Color:=X;</p>
<p>        SetFillStyle(Color;Pattern);</p>
<p>*</p>
<p> 10НАПИШИТЕ ПРОГРАММУ РИСОВАНИЯ НА КРАСНОМ(4) ЭКРАНЕ ГОЛУБОГО(9)</p>
<p>   ОКНА, ЗАКРАШЕННОГО КЛЕТКОЙ СИНЕГО ЦВЕТА(1).</p>
<p>     1  SetBKColor(4);</p>
<p>        SetFillStyle(7,1);</p>
<p>        Bar(X1,Y1,X2,Y2);</p>
<p>     2  SetBKColor(4);</p>
<p>        Bar(X1,Y1,X2,Y2);</p>
<p>        SetFillStyle(7,1);</p>
<p>        Bar(X1,Y1,X2,Y2);</p>
<p>     3  SetBKColor(4);</p>
<p>        SetFillStyle(1,9);</p>
<p>        Bar(X1,Y1,X2,Y2);</p>
<p>        SetFillStyle(7,1);</p>
<p>        Bar(X1,Y1,X2,Y2);</p>
<p>     4  SetFillStyle(9,1);</p>
<p>        Bar(X1,Y1,X2,Y2);</p>
<p>        SetFillStyle(7,1);</p>
<p>        SetBKColor(4);</p>
<p>*</p>
<p>0</p>
<p>011Ответ правильный.                                                   005</p>
<p>   *</p>
<p>   2Ответ неверный. Процедура SetPalette изменяет один из цветов палитры002</p>
<p>   *</p>
<p>   3Ответ неверный. Процедура SetAllPalette изменяет цвета палитры.     002</p>
<p>   *</p>
<p>   4Ответ неверный. Процедура SetLineStyle устанавливает стиль          002</p>
<p>    контурных линик и их толщину.</p>
<p>   *</p>
<p>*</p>
<p> 021Ответ правильный.                                                   005</p>
<p>   *</p>
<p>   2Ответ неверный. Процедура SetColor задает цвет рисования. но не     002</p>
<p>    закрашивает  фигуры.</p>
<p>   *</p>
<p>   3Ответ неверный. Нет необходимости устанавливать черный цвет, т.к.   003</p>
<p>    он автоматически устанавливается при вхождении в графический режим.</p>
<p>   *</p>
<p>   4Ответ неверный.На черном экране, установленном процедурой SetBKColor002</p>
<p>    будет виден лишь белый контур квадрата.</p>
<p>   *</p>
<p>*</p>
<p> 031Ответ неверный.Ошибка в написании параметров процедуры SetFillStyle.002</p>
<p>   *</p>
<p>   2Ответ неверный. Результатом выполенния данного фрагмента будет      002</p>
<p>    красный экран.Ошибка в написании параметров процедуры SetFillStyle.</p>
<p>   *</p>
<p>   3Ответ правильный.                                                   005</p>
<p>   *</p>
<p>   4Ответ неверный. Стиль и цвет закраски необходимо установить до      002</p>
<p>    построения фигуры.</p>
<p>   *</p>
<p>*</p>
<p> 041Ответ неверный. В языке имеется возможность устанавливать           002</p>
<p>    произвольный (по желанию пользователя) стиль контурных линий с</p>
<p>    помощью процедуры SetLineStyle(LineStyle,Pattern,Thickness).</p>
<p>    При этом параметр LineStyle устанавливается в значение UserBitLn(4)</p>
<p>    а параметр Pattern представляет собой битовую строку, определяющую</p>
<p>    стиль изображения кнтурных линий. Возможности установить призволь-</p>
<p>    ный цвет рисования нет.</p>
<p>   *</p>
<p>   2Ответ неверный. В языке имеется возможность устанавливать           002</p>
<p>    произвольный (по желанию пользователя) стиль контурных линий с</p>
<p>    помощью процедуры SetLineStyle(LineStyle,Pattern,Thickness).</p>
<p>    При этом параметр LineStyle устанавливается в значение UserBitLn(4)</p>
<p>    а параметр Pattern представляет собой битовую строку, определяющую</p>
<p>    стиль изображения кнтурных линий. Возможности установить призволь-</p>
<p>    ный цвет рисования нет.</p>
<p>   *</p>
<p>   3Ответ правильный.                                                   005</p>
<p>   *</p>
<p>   4Ответ неверный. В языке имеется возможность устанавливать           002</p>
<p>    произвольный (по желанию пользователя) стиль контурных линий с</p>
<p>    помощью процедуры SetLineStyle(LineStyle,Pattern,Thickness).</p>
<p>    При этом параметр LineStyle устанавливается в значение UserBitLn(4)</p>
<p>    а параметр Pattern представляет собой битовую строку, определяющую</p>
<p>    стиль изображения кнтурных линий. Возможности установить призволь-</p>
<p>    ный цвет рисования нет.</p>
<p>   *</p>
<p>*</p>
<p> 051Ответ неверный. Процедура GetLineStyle не устанавливает стиль       002</p>
<p>    контурных линий, а возвращает их текущие параметры.</p>
<p>   *</p>
<p>   2Ответ правильный.</p>
<p>   *                                                                    005</p>
<p>   3Ответ неверный. Параметр Pattern не может состоять из одной цифры,  002</p>
<p>    т.к. его значение - двухбайтовое число.</p>
<p>   *</p>
<p>   4Ответ неверный. При установке стандартного стиля контурных линий    002</p>
<p>    параметр Pattern не задается.</p>
<p>   *</p>
<p>*</p>
<p> 061Ответ неверный. Не указан параметр Color и элементы массива Pattern 002</p>
<p>    являются двухбайтовыми.</p>
<p>   *</p>
<p>   2Ответ неверный. Элементы массива Pattern являются двухбайтовыми.    002</p>
<p>   *</p>
<p>   3Ответ неверный. Не указан параметр Color.                           002</p>
<p>   *</p>
<p>   4Ответ правильный.                                                   005</p>
<p>   *</p>
<p>*</p>
<p> 071Ответ правильный.                                                   005</p>
<p>   *</p>
<p>   2Ответ неправильный. Процедура SetFillPattern позволяет программисту 003</p>
<p>    определить свой, нестандартный, образец закраски. Возможно смодели-</p>
<p>    ровать и стандартный стиль с помощью той же процедуры.</p>
<p>   *</p>
<p>   3Ответ неверный. Эта процедура возвращает код и цвет стандартного    002</p>
<p>    образца закраски.</p>
<p>   *</p>
<p>   4Ответ неверный. Процедура SetLineStyle устанавливает стиль контурных002</p>
<IDXSKIP><p>    линий.</p></IDXSKIP>
<p>   *</p>
<p>*</p>
<p> 081Ответ неверный. Данный способ замены одного цвета другим допустим,  004</p>
<p>    но не рационален.</p>
<p>   *</p>
<p>   2Ответ неверный. Процедура SetColor устанавливает текущий цвет       002</p>
<p>    рисования.</p>
<p>   *</p>
<p>   3Ответ правильный.                                                   005</p>
<p>   *</p>
<p>   4Ответ неверный. Процедура GetPalette выдает справку о текущей       002</p>
<p>    цветовой палитре, но не меняет цвета.</p>
<p>   *</p>
<p>*</p>
<p> 091Ответ неверный. Параметр Color не следует устанавливать предвари-   002</p>
<p>    тельно для процедуры SetFillStyle. Процедура  SetFillStyle устанав-</p>
<p>    ливает стандартный образец закраски и цвет.</p>
<p>   *</p>
<p>   2Ответ правильный.                                                   005</p>
<p>   *</p>
<p>   3Ответ неверный. Процедура SetFillPattern устанавливает нестандартный002</p>
<p>    стиль закраски.</p>
<p>   *</p>
<p>   4Ответ неверный. Параметры процедуры SetFillStyle следует употреблять003</p>
<p>    в обратном порядке.</p>
<p>   *</p>
<p>*</p>
<p> 101Ответ неверный.Фон прямоугольлника (X1,Y1,X2,Y2) будет красным.     002</p>
<p>   *</p>
<p>   2Ответ неверный. Прямоугольник (X1,Y1,X2,Y2) будет по умолчанию      002</p>
<p>    закрашен белым цветом, а не голубым.</p>
<p>   *</p>
<p>   3Ответ правильный.                                                   005</p>
<p>   *</p>
<p>   4Ответ неверный. Процедура SetBKColor закрасит экран красным цветом, 002</p>
<p>    закрасив прямоугольник.</p>
<p>   *</p>
<p>*</p>
<p>0</p>
<p>ПРОГРАММИРОВАНИЕ ЦВЕТНЫХ КРИВОЛИНЕЙНЫХ ИЗОБРАЖЕНИЙ</p>
<p>     В данном разделе рассматриваются процедуры, позволяющие програм-</p>
<p> мировать изображение криволинейных фигур из класса круговых и эллип-</p>
<p> тических дуг, секторов, а также операторы формирования растровых</p>
<p> изображений и часто используемые вспомогательные процедуры.</p>
<p>*     procedure Arc(X,Y:integer;StAngle,EndAngle,Radius:word);</p>
<p>1</p>
<p>      Рисует против часовой стрелки текущим</p>
<p> стилем и цветом дугу окружности с центром (X,Y),</p>
<p> радиусом Radius от начального угла StAngle до</p>
<p> конечного угла AndAngle. Угловые параметры</p>
<p> задаются в градусах.</p>
<p>*      procedure CetArcCords(var ArcCoords:ArcCoordsType);</p>
<p>       Возвращает в переменной ArcCoords координаты концов дуги,</p>
<p> проведенной последней командой Arc.Тип ArcCoordsType  описан в</p>
<p> модуле Graph как запись, значения полей которой аналогичны значению</p>
<p> параметров процедуры Arc.</p>
<p>*      procedure Circle(X,Y:integer;Radius:word);</p>
<p>2</p>
<p>       Строит контуры окружности радиуса Radius с</p>
<p> центром (X,Y), заданным ранее цветом и стилем</p>
<p> рисования.</p>
<p>         ПРОГРАММИРОВАНИЕ ЦВЕТНЫХ КРИВОЛИНЕЙНЫХ ИЗОБРАЖЕНИЙ</p>
<p>*       procedure Ellipse (X,Y:integer;</p>
<p>*                          StAngle,EndAngle,XRadius,YRadius:word);</p>
<p>3</p>
<p>        Строит текущим стилем и цветом дугу</p>
<p> эллписа с центром (X,Y), начальным StAngle</p>
<p> и конечным EndAngle углами, двумя полуосями</p>
<p> XRadius и YRadius.</p>
<p>*        procedure FloodFill(X,Y,Border:word);</p>
<p>         Обеспечивает закраску ограниченной</p>
<p> области, в которую входит точка (X,Y) , по</p>
<p> образцу,  установленному предварительно</p>
<p> процедурой SetFillStyle либо SetFillPattern.</p>
<p> Параметр  Border определяет код цвета,</p>
<p> ограничивающего закрашиваемую область.</p>
<p>*        procedure FillEllipse(X,Y:integer;XRadius, YRadius:word);</p>
<p>         Закрашивает область эллипса,используя</p>
<p> предварительно установленные стиль и цвет закраски.</p>
<p> Значения параметров аналогичны значениям параметров</p>
<p> процедуры Ellipse.</p>
<p>4</p>
<IDXSKIP><p>5</p></IDXSKIP>
<p>       ПРОГРАММИРОВАНИЕ ЦВЕТНЫХ КРИВОЛИНЕЙНЫХ ИЗОБРАЖЕНИЙ</p>
<p>*        prosedure PieSlice(X,Y:integer;</p>
<p>*                           StAngle,EndAngle,Radius:word);</p>
<p>6</p>
<p>         Строит и закрашивает круговой сектор</p>
<p> установленным стилем и цветом. Параметры имеют</p>
<p> тот же смысл и тип, что и одноименные параметры</p>
<p> процедуры Arc.</p>
<p>*     procedure Sector(X,Y:integer;</p>
<p>*                      StAngle,EndAngle,XRadius,YRadius:word);</p>
<p>7</p>
<p>      Рисует и закрашивает эллиптический сектор,</p>
<p> используя текущие стиль и цвет рисования и зак-</p>
<p> раски. Параметры имеют тот же смысл и тип что</p>
<p> и одноименные параметры процедуры Ellipse.</p>
<p>*     procedure Randomize;</p>
<p>      Инициализирует встроенный генератор случайных чисел сллучайным</p>
<p> значением, получаемым от системного таймера компьютера. Описана в</p>
<p> модуле System . Число, получаемое в результате работы генератора,</p>
<p> хранится в предописанной переменной RandSeed. Присваивая ей конкрет-</p>
<p> ные значения можно получать каждый раз заданную последовательность</p>
<p> случайных чисел.</p>
<p>        ПРОГРАММИРОВАНИЕ ЦВЕТНЫХ КРИВОЛИНЕЙНЫХ ИЗОБРАЖЕНИЙ</p>
<p>*      function Random(Rande:word):word;</p>
<p>       Возвращает случайное число. Переменная Rande должна быть выра-</p>
<p> жением целого типа, а результатом будет случайное число X длиной в</p>
<p> слово в диапазоне  0= # then FuncKey:=False</p>
<p>     else</p>
<p>       begin</p>
<p>         FuncKey:=true;</p>
<p>         Ch:=ReadKey</p>
<p>       end;</p>
<p> ......</p>
<p>              ПРОГРАММИРОВАНИЕ ОЗВУЧЕННЫХ ДИНАМИЧЕСКИХ СЦЕН</p>
<p>*     procedure SetWriteMode(WriteMode:integer);</p>
<p>      Устанавливает режим записи при вычерчивании линий с помощью</p>
<p> процедур формирования прямолинейных изображений (кроме процедуры</p>
<p> Bar3D). Процедура описана в модуле Craph. Параметр может принимать</p>
<p> следующие значения:</p>
<p> CopyPut = 0 - простое замещение - вычерчиваемая линия "затирает" то,</p>
<p>                                   что было на экране.</p>
<p> XORPut  = 1 - сложение по mod 2 - обеспечивается комбинирование вы-</p>
<p>                                   водимой линии с экранным изображе-</p>
<p>                                   нием на основе выполнения поточеч-</p>
<p>                                   ной поразрядной операции суммиро-</p>
<p>                                   вания по модулю2.</p>
<p>       Важно, что два одинаковых вывода на экран в режиме XORPut при-</p>
<p> ведут сначала к стиранию линии на экране, а затем в восстановлению</p>
<p> исходного экранного изображения.</p>
<p>0</p>
<p>01КАКОВЫ ФУНКЦИИ ПРОЦЕДУРЫ ImageSize?</p>
<p>      1 Создание новой динамической переменной.</p>
<p>      2  Сохранение в динамической памяти растрового образа заданной</p>
<p>прямоугольной области экрана.</p>
<p>      3 Возвращение числа байт, необходимых для сохранения прямоугольной</p>
<p>области экранного изображения.</p>
<p>      4 Вывод в заданное место экрана хранимого в динамической памяти</p>
<p>растрового изображения.</p>
<p>*</p>
<p>02КАКОЕ СУЩЕСТВУЕТ ОГРАНИЧЕНИЕ ПО ПЛОЩАДИ СОХРАНЯЕМЫХ В ДИНАМИЧЕСКОЙ ПАМЯТИ</p>
<p>ОБЛАСТЕЙ ЭКРАНА?</p>
<p>      1 Ограничений нет.</p>
<p>      2 Не более одного экрана.</p>
<p>      3 Не более 1/2 экрана.</p>
<p>      4 Не более 1/4 экрана.</p>
<p>*</p>
<p>ОЗТРЕБУЕТСЯ ЛИ КОНТРОЛИРОВАТЬ РАЗМЕР СВОБОДНОЙ ДИНАМИЧЕСКОЙ ПАМЯТИ?</p>
<p>      1 Да. С помощью функции MaxAvail.</p>
<p>      2 Да. С помощью процедуры GetMem.</p>
<p>      3 Нет, не требуется. Размер динамической памяти не ограничен.</p>
<p>      4 Да, требуется. Контроль осуществляется с помощью процедуры Dispose.</p>
<p>*</p>
<p>04КАКОГО ЦВЕТА БУДЕТ ВЫВЕДЕНО ИЗОБРАЖЕНИЕ ТОЧКИ НА ЭКРАНЕ, ЕСЛИ ТОЧКУ</p>
<p>КРАСНОГО  (4)  ЦВЕТА  ЗАМЕСТИТЬ  С  ПОМОЩЬЮ  ПРОЦЕДУРЫ Putlmage</p>
<p>(X,Y,p~,XORPut) точкой синего (1) цвета?</p>
<p>      1 Черного (0).</p>
<p>      2 Светло-бирюзового(11).</p>
<p>      3 Красного (4).</p>
<p>4 Малиновый(5).</p>
<p>*</p>
<p>05КАКУЮ ОРГАНИЗАЦИЮ ВИДЕОБУФЕРА ПОДДЕРЖИВАЮТ ЛАБОРАТОРНЫЕ КОМПЬЮТЕРЫ IBM PC</p>
<p>С АДАПТЕРОМ EGA ПРИ ИСПОЛЬЗОВАНИИ ЯЗЫКА TURBO-PASCAL?</p>
<p>      1 Одностраничную.</p>
<p>      2 Двухстраничную.</p>
<p>      3 Трехстраничную.</p>
<p>      4 Четырехстраничную.</p>
<p>*</p>
<p>06С ПОМОЩЬЮ КАКОЙ ПРОЦЕДУРЫ УСТАНАВЛИВАЕТСЯ СТРАНИЦА ВИДЕОБУФЕРА, НА</p>
<p>КОТОРУЮ НАПРАВЛЯЕТСЯ ПОСЛЕДУЮЩИЙ ГРАФИЧЕСКИЙ ВЫВОД?</p>
<p>      1 SetVisualActivePage</p>
<p>      2 SetWriteMode</p>
<p>      3 Dispose</p>
<p>      4  SetActivePage</p>
<p>*</p>
<p>07КАКОВЫ ФУНКЦИИ ПРОЦЕДУРЫ SetWriteMode?</p>
<p>      1  Считывание символа с клавиатуры не отображая его на экран.</p>
<p>      2 Установка режима записи при вычерчивании линий с помощью процедур</p>
<p>формирования прямолинейных изображений.</p>
<p>      3 Устанавливает номер страницы видеобуфера, на которую осуществляется</p>
<p>последующий графический вывод.</p>
<p>4 устанавливает номер визуализируемой страницы видеобуфера.</p>
<p>*</p>
<p>О</p>
<p>011Ответ неверный. Эту функцию осуществляет процедура GetMem.          002</p>
<p>   *</p>
<p>   2Ответ неверный. Эту функцию осуществляет процедура GetImage.        002</p>
<p>   *</p>
<p>   3Ответ правильный.                                                   005</p>
<p>   *</p>
<p>   4Ответ неверный. Эту функцию осуществляет процедура PutImage.        002</p>
<p>   *</p>
<p>*</p>
<p> 021Ответ неверный. Объем памяти, необходимый для сохраненеия области 002</p>
<p>экрана, не должен быть равен или превышать 64К, что соответствует 1/2</p>
<p>площади экрана.</p>
<p>   *</p>
<p>   2Ответ неверный. Объем памяти, необходимый для сохраненеия области 002</p>
<p>экрана, не должен быть равен или превышать 64К, что соответствует 1/2</p>
<p>площади экрана.</p>
<p>   *</p>
<p>   3Ответ правильный.                                            005</p>
<p>   *</p>
<p>   4Ответ неверный. Объем памяти, необходимый для сохраненеия области 002</p>
<p>экрана, не должен быть равен или превышать 64К, что соответствует 1/2</p>
<p>площади экрана.</p>
<p>   *</p>
<p>*</p>
<p> 031Ответ првильный. Функция MaxAvail возвращает наибольший непрерывный 005</p>
<p>свободный блок, имеющийся в динамической области памяти в текущий момент.</p>
<p>   *</p>
<p>   2Ответ неверный. Контроль требуется, однако, процедура GetMem        003</p>
<p>выполняет другие функции.</p>
<p>   *</p>
<p>   3Ответ неверный. Если в динамической области недостаточно места для  002</p>
<p>размещения новой переменной, возникает ошибка времени выполнения программы.</p>
<p>Чтобы этого избежать следует пользоваться функцией MaxAvail, которая</p>
<p>возвращает размер наибольшего непрерывного свободного блока динамической</p>
<p>области памяти.</p>
<p>   *</p>
<p>   4Ответ неверный. контроль требуется, но с помощью функции MaxAvail.  003</p>
<p>   *</p>
<p>*</p>
<p> 041Ответ неверный. При использовании в качестве значения параметра     002</p>
<p>BitBlt константы XORPut коды цветов точек складываются по модулю 2:</p>
<p>4(10) + 1(10) = 0100(2) + 0001(2) = 0101(2) = 5(10)</p>
<p>   *</p>
<p>   2Ответ неверный. При использовании в качестве значения параметра     002</p>
<p>    BitBlt константы XORPut коды цветов точек складываются по модулю 2:</p>
<p>         4(10) + 1(10) = 0100(2) + 0001(2) = 0101(2) = 5(10)</p>
<p>   *</p>
<p>   3Ответ неверный. При использовании в качестве значения параметра     002</p>
<p>BitBlt константы XORPut коды цветов точек складываются по модулю 2:</p>
<p>         4(10) + 1(10) = 0100(2) + 0001(2) = 0101(2) = 5(10)</p>
<p>   *</p>
<p>   4Ответ правильный.                                            005</p>
<p>   *</p>
<p>*</p>
<p> 051Ответ неверный. Эти компьютеры имеют двухстраничную организацию     002</p>
<p>видеобуфера.</p>
<p>   *</p>
<p>   2Ответ правильный.                                                   005</p>
<p>   *</p>
<p>   3Ответ неверный. Эти компьютеры имеют двухстраничную организацию     002</p>
<p>видеобуфера.</p>
<p>   *</p>
<p>   4Ответ неверный. Эти компьютеры имеют двухстраничную организацию     002</p>
<p>видеобуфера.</p>
<p>   *</p>
<p>*</p>
<p> 061Ответ неверный. процедура SetVisualPage задает номер отображаемой на</p>
<p>002 экран дисплейной страницы видеобуфера.</p>
<p>   *</p>
<p>   2Ответ неверный. Процедура SetWriteMode выполняет другие функции.    002</p>
<p>   *</p>
<p>   3Ответ неверный. Процедура Dispose выполняет другие функции.         002</p>
<p>   *</p>
<p>   4Ответ правильный.                                            005</p>
<p>   *</p>
<p>*</p>
<p> 071Ответ неверный. Процедура SetWriteMode устанавливает режим записи   002</p>
<p>при вычерчивании линий с помощью процедур формирования прямоугольных</p>
<p>изображений.</p>
<p>   *</p>
<p>   2Ответ правильный.                                            005</p>
<p>   *</p>
<p>   3Ответ неверный. Процедура SetWriteMode устанавливает режим записи   002</p>
<p>при вычерчивании линий с помощью процедур формирования прямоугольных</p>
<p>изображений.</p>
<p>   *</p>
<p>   4Ответ неверный. Процедура SetWriteMode устанавливает режим записи   002</p>
<p>при вычерчивании линий с помощью процедур формирования прямоугольных</p>
<p>изображений.</p>
<p>   *</p>
<p>*</p>
<p>0</p>
<p>                                                                Приложение 3</p>
<p>                               Экранные формы</p>
<IDXSKIP><p>                           -----------------------</p></IDXSKIP>
<p>                        Основная программа “GRAPHIC”</p>
<p> Модуль RAZDEL1</p>
<p> Модуль RAZDEL3</p>
<p> Модуль RAZDEL2</p>
<p> Модуль RAZDEL5</p>
<p> Модуль RAZDEL7</p>
<p> Модуль RAZDEL4</p>
<p> Модуль RAZDEL6</p>
<p>Процедура RAZDEL10</p>
<p>Процедура RAZDEL20</p>
<p>Процедура RAZDEL30</p>
<p>Процедура RAZDEL40</p>
<p>Процедура RAZDEL50</p>
<p>Процедура RAZDEL60</p>
<p>Процедура RAZDEL70</p>
<p>                                   Начало</p>
<p>                                  Заставка</p>
<p>                                   Windo1</p>
<p>                                    Выбор</p>
<p>                                   режима</p>
<p>                          Вызов результатов работы</p>
<p>                              Обработка модулей</p>
<p>                                    Конец</p>
<p>1..7</p>
<p>9</p>
<p>3</p>
<p>5</p>
<p>4</p>
<p>8</p>
<p>                                   начало</p>
<p>                            Связь с файлом теории</p>
<p>GraphRegim</p>
<p>                                    OKNO</p>
<p>                             Вывод текста теории</p>
<p>                             Имеется иллюстрация</p>
<p>                              Вывод иллюстрации</p>
<p>                               Очистка экрана</p>
<p>                                    Конец</p>
<p>                       Раздел с контрольными вопросами</p>
<p>                                 Конец файла</p>
<p>                            Вывод текста справки</p>
<p>                           Связь с файлом справок</p>
<p>                             Имеется иллюстрация</p>
<p>                      Случайный выбор номеров вопросов</p>
<p>                                    OKNO1</p>
<p>                                    OKNO</p>
<p>                       Связь с файлом текста вопросов</p>
<p>                       Вывод текста очередного вопроса</p>
<p>                             Имеется иллюстрация</p>
<p>                              Вывод иллюстрации</p>
<p>                          Введено допустимое число</p>
<p>                              Вывод иллюстрации</p>
<p>                            Фиксация результатов</p>
<p>                               Очистка экрана</p>
<p>                              Вопрос последний</p>
<!--yyy2-->
<br>
<br>



</td>

<td class="uuuu" title="рефераты">
<IDXSKIP><table width="240" cellpadding="0" cellspacing="0" border="0">
<tr>
<td>
<table width="241" title="реферат" cellpadding="0" cellspacing="0" border="0">
  <tr title="рефераты скачать">
    <td title="рефераты">
<noindex><script type="text/javascript" src="/js/j.js"></script>
<!-- RTB  240?400 -->
<script type="text/javascript">
    document.write('<script type = "text/javascript" ' +
    'src = "//cdn-rtb.sape.ru/rtb-b/js/271/271.js"></scr'+'ipt>')
</script>
<!-- RTB END -->

<!-- 240*400 Advert-->
<script type="text/javascript" src="http://ddnk.advertur.ru/v1/code.js?id=31637"></script>
<!-- 240*400 Advert-->

</noindex>

	
	</td>
</tr>
</table> <br> <br>	
</td>
</tr>

</table></IDXSKIP>


	<table cellpadding="0" cellspacing="0" border="0" width="100%" class="iiii" title="рефераты">

	
	<tr title="рефераты">

		<td title="рефераты"></td>

	</tr><IDXSKIP><tr title="рефераты">

		<td class="ooo" title="рефераты">17.06.2012</td>

	</tr></IDXSKIP>

	<tr title="рефераты">

		<td class="tttt" title="рефераты"><a href="/index.html"><IDXSKIP>Большое обновление Большой Научной Библиотеки &nbsp;<img src="/pics/news_arrows.gif" width="9" height="7" border="0" alt="рефераты"></IDXSKIP></a></td>

	</tr>

	
	<IDXSKIP><tr title="рефераты">

		<td class="ooo" title="рефераты">12.06.2012</td>

	</tr></IDXSKIP>

	<tr title="рефераты">

		<td class="tttt" title="рефераты"><a href="/index.html"><IDXSKIP>Конкурс в самом разгаре не пропустите Новости  &nbsp;<img src="/pics/news_arrows.gif" width="9" height="7" border="0" alt="рефераты"></IDXSKIP></a></td>

	</tr>

	
	<IDXSKIP><tr title="рефераты">

		<td class="ooo" title="рефераты">08.06.2012</td>

	</tr></IDXSKIP>

	<tr title="рефераты">

		<td class="tttt" title="рефераты"><a href="/index.html"><IDXSKIP>Мы проводим опрос, а также небольшой конкурс &nbsp;<img src="/pics/news_arrows.gif" width="9" height="7" border="0" alt="рефераты"></IDXSKIP></a></td>

	</tr>

	
	<IDXSKIP><tr title="рефераты">

		<td class="ooo" title="рефераты">05.06.2012</td>

	</tr></IDXSKIP>

	<tr title="рефераты">

		<td class="tttt" title="рефераты"><a href="/index.html"><IDXSKIP>Сена дизайна и структуры сайта научной библиотеки  &nbsp;<img src="/pics/news_arrows.gif" width="9" height="7" border="0" alt="рефераты"></IDXSKIP></a></td>

	</tr>

	
	<IDXSKIP><tr title="рефераты">

		<td class="ooo" title="рефераты">04.06.2012</td>

	</tr></IDXSKIP>

	<IDXSKIP><tr title="рефераты">

		<td class="tttt" title="рефераты"><a href="/index.html">Переезд на новый хостинг  &nbsp;<img src="/pics/news_arrows.gif" width="9" height="7" border="0" alt="рефераты"></a></td>

	</tr></IDXSKIP>

	
	<IDXSKIP><tr title="рефераты">

		<td class="ooo" title="рефераты">30.05.2012</td>

	</tr></IDXSKIP>

	<tr title="рефераты">

		<td class="tttt" title="рефераты"><a href="/index.html"><IDXSKIP>Работа над улучшением структуры сайта научной библиотеки  &nbsp;<img src="/pics/news_arrows.gif" width="9" height="7" border="0" alt="рефераты"></IDXSKIP></a></td>

	</tr>

	
	<IDXSKIP><tr title="рефераты">

		<td class="ooo" title="рефераты">27.05.2012</td>

	</tr></IDXSKIP>

	<tr title="рефераты">

		<td class="tttt" title="рефераты"><a href="/index.html"><IDXSKIP>Работа над новым дизайном сайта библиотеки  &nbsp;<img src="/pics/news_arrows.gif" width="9" height="7" border="0" alt="рефераты"></IDXSKIP></a></td>

	</tr>

	
	</table>
<!--uuuu-->


<br><img src="/pics/1.gif" width="174" height="1" border="0" alt="рефераты"></td>

</tr>

<IDXSKIP><tr class="pppp" title="рефераты">

<td class="aaaa" title="рефераты"><noindex><!--LiveInternet counter--><script type="text/javascript"><!--
document.write("<a href='http://www.liveinternet.ru/click' "+
"target=_blank><img src='//counter.yadro.ru/hit?t50.1;r"+
escape(document.referrer)+((typeof(screen)=="undefined")?"":
";s"+screen.width+"*"+screen.height+"*"+(screen.colorDepth?
screen.colorDepth:screen.pixelDepth))+";u"+escape(document.URL)+
";"+Math.random()+
"' alt='' title='LiveInternet' "+
"border='0' width='31' height='31'><\/a>")
//--></script><!--/LiveInternet--></noindex></td>

<td class="sssss" title="рефераты">&copy;2011 </td>

<td class="ddddd" title="рефераты"></td>

</tr></IDXSKIP>

</table>

</td></tr>

</table>

<div class="fffff">


</div>

</BODY>



</HTML>



